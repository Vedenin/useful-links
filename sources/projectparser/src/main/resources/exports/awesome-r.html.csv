"category"	"name"	"url"	"description"	"star"	"stackOverflow"	"stackOverflowUrl"	"license"	"licenseUrl"	"site"	"userGuide"	"newStars"	"newWatchs"	"newForks"	"pageText"	"newStackOverflow"	"github"	"allText"	"isExist"
"Awesome R"	""	"https://camo.githubusercontent.com/0240635f4962decc03fd62d6d2526ec28cb41280/68747470733a2f2f617765736f6d652d722e636f6d2f68656172742e706e67"	""	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	""	"false"
"Awesome R"	"Top 50"	"https://github.com/rstudio/RStartHere/blob/master/top_downloads_2016/top_packages"	""	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"128"	"22"	"44"	"RStartHere/top_packages at master · rstudio/RStartHere · GitHub Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 22 Star 128 Fork 44 rstudio/RStartHere Code Issues 2 Pull requests 1 Pulse Graphs Permalink Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show Find file Copy path RStartHere/top_downloads_2016/top_packages Fetching contributors… Cannot retrieve contributors at this time Raw Blame History 102 lines (101 sloc) 2.11 KB """",""package"",""downloads"" ""1"",""Rcpp"",989961 ""2"",""ggplot2"",938063 ""3"",""digest"",811906 ""4"",""stringi"",730239 ""5"",""stringr"",716850 ""6"",""plyr"",704456 ""7"",""scales"",698332 ""8"",""magrittr"",640769 ""9"",""reshape2"",626309 ""10"",""munsell"",614719 ""11"",""colorspace"",581606 ""12"",""gtable"",581416 ""13"",""RColorBrewer"",576437 ""14"",""labeling"",505179 ""15"",""dichromat"",502501 ""16"",""R6"",491275 ""17"",""mime"",473281 ""18"",""curl"",466564 ""19"",""RcppArmadillo"",457610 ""20"",""jsonlite"",448838 ""21"",""bitops"",427582 ""22"",""nlme"",426800 ""23"",""rJava"",410397 ""24"",""htmltools"",398066 ""25"",""httr"",396261 ""26"",""zoo"",396138 ""27"",""car"",394528 ""28"",""knitr"",392250 ""29"",""RCurl"",387203 ""30"",""yaml"",376875 ""31"",""dplyr"",372674 ""32"",""BH"",372346 ""33"",""quantreg"",369092 ""34"",""devtools"",367174 ""35"",""DBI"",360683 ""36"",""evaluate"",360625 ""37"",""xtable"",353254 ""38"",""caTools"",347241 ""39"",""foreach"",341819 ""40"",""lme4"",340179 ""41"",""gridExtra"",331717 ""42"",""RcppEigen"",323907 ""43"",""memoise"",318018 ""44"",""Hmisc"",314975 ""45"",""iterators"",314140 ""46"",""openssl"",310152 ""47"",""rmarkdown"",307933 ""48"",""formatR"",306126 ""49"",""XML"",302680 ""50"",""lazyeval"",296876 ""51"",""markdown"",294388 ""52"",""SparseM"",293496 ""53"",""rstudioapi"",277247 ""54"",""MatrixModels"",276096 ""55"",""assertthat"",275459 ""56"",""highr"",272363 ""57"",""sp"",263281 ""58"",""mgcv"",260733 ""59"",""git2r"",259512 ""60"",""mvtnorm"",256136 ""61"",""pbkrtest"",254372 ""62"",""data.table"",249592 ""63"",""latticeExtra"",248214 ""64"",""nloptr"",247826 ""65"",""shiny"",246878 ""66"",""minqa"",242519 ""67"",""chron"",241684 ""68"",""Matrix"",237821 ""69"",""gtools"",220527 ""70"",""MASS"",213419 ""71"",""gdata"",212296 ""72"",""maps"",209210 ""73"",""testthat"",204229 ""74"",""Formula"",201119 ""75"",""whisker"",200089 ""76"",""withr"",192391 ""77"",""sandwich"",190684 ""78"",""nnet"",189745 ""79"",""igraph"",186194 ""80"",""doParallel"",181109 ""81"",""RJSONIO"",177360 ""82"",""acepack"",176671 ""83"",""lmtest"",176338 ""84"",""tidyr"",176255 ""85"",""e1071"",176017 ""86"",""xlsx"",172478 ""87"",""crayon"",170362 ""88"",""rgl"",168140 ""89"",""multcomp"",163008 ""90"",""NMF"",158832 ""91"",""lubridate"",157883 ""92"",""quadprog"",156973 ""93"",""pkgmaker"",154287 ""94"",""rngtools"",153948 ""95"",""registry"",153760 ""96"",""irlba"",153008 ""97"",""httpuv"",152673 ""98"",""boot"",150858 ""99"",""gridBase"",150706 ""100"",""caret"",146021 Jump to Line Go Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/RStartHere/blob/master/top_downloads_2016/top_packages"	""	"true"
"Awesome R"	""	"https://camo.githubusercontent.com/032ba414f692957455a2d3d3a08a232211182d06/68747470733a2f2f617765736f6d652d722e636f6d2f737461722e706e67"	""	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	""	"false"
"Integrated Development Environments"	"RStudio"	"http://www.rstudio.org/"	"A powerful and productive user interface for R. Works great on Windows, Mac, and Linux."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"RStudio – Open source and enterprise-ready professional software for R Products RStudio Shiny R Packages RStudio Server Pro Shiny Server Pro shinyapps.io Resources FAQs Support Shiny Dev Center Shiny User Showcase Cheatsheets Webinars & Videos Online Learning Training / Consulting In Person Workshops Customer Spotlight rstudio::conf Pricing About Us About News & Events Careers Gear Blog Products RStudio Shiny R Packages RStudio Server Pro Shiny Server Pro shinyapps.io Resources FAQs Support Shiny Dev Center Shiny User Showcase Cheatsheets Webinars & Videos Online Learning Training / Consulting In Person Workshops Customer Spotlight rstudio::conf Pricing About Us About News & Events Careers Gear Blog Welcome to RStudio - Open source and enterprise-ready professional software for R Download RStudio Discover Shiny shinyapps.io Login Click to read the story “Shiny Server Pro dashboard and visualization development allowed the fastest time to market.” - Daniel Marcous, Google, Waze, Data Wizard Customer Spotlight New Features Released in RStudio Server Pro Download a 45 Day Evaluation Click here to watch an overview video Whether you are an administrator supporting a team of one thousand, or an analyst supporting a team of one, this webinar will tell you what you should know about supporting RStudio Pro Products. Click to watch the Administering RStudio Server Pro Webinar Click to watch the Administering Shiny Server Pro Webinar Home bill@rstudio.com 2016-07-01T17:20:23+00:00 Powerful IDE for R RStudio IDE is a powerful and productive user interface for R. It’s free and open source, and works great on Windows, Mac, and Linux. Learn More R Packages Our developers and expert trainers are the authors of several popular R packages, including ggplot2, plyr, lubridate, and others. Learn More Bring R to the web Shiny is an elegant and powerful web framework for building interactive reports and visualizations using R — with or without web development skills. Learn More A few of our professional fans. RStudio is an active member of the R community. We believe free and open source data analysis software is a foundation for innovative and important work in science, education, and industry. The many customers who value our professional software capabilities help us contribute to this community. 250 Northern Ave, Boston, MA 02210 844-448-1212 info@rstudio.com DMCA Trademark Support ECCN Don't guess why #rstats code is slow, find out: @rstudio preview now has a profiler. More: rstudio.github.io/profvis/rstudi… pic.twitter.com/ujRLIF9Du6 1 day ago Copyright 2016 RStudio | All Rights Reserved | Legal Terms TwitterLinkedinFacebookRssEmailgithub"	"null"	"null"	"A powerful and productive user interface for R. Works great on Windows, Mac, and Linux."	"true"
"Integrated Development Environments"	"Emacs + ESS"	"http://ess.r-project.org/"	"Emacs Speaks Statistics is an add-on package for emacs text editors."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"ESS - Emacs Speaks Statistics ESS - version 16.04 Emacs    Speaks       Statistics Home Documentation Download Getting help Participate Miscellaneous About What is ESS? Welcome to the home page of the ESS project Emacs Speaks Statistics (ESS) is an add-on package for emacs text editors such as GNU Emacs and XEmacs. It is designed to support editing of scripts and interaction with various statistical analysis programs such as R, S-Plus, SAS, Stata and OpenBUGS/JAGS. Although all users of these statistical analysis programs are welcome to apply ESS, advanced users or professionals who regularly work with text-based statistical analysis scripts, with various statistical languages/programs, or with different operating systems might benefit from it the most. The rationale for developing ESS is that most statistical analysis systems provide a more or less sophisticated graphical user interface (GUI). However, their full power is only available using their scripting language. Furthermore, complex statistical analysis projects require a high degree of automation and documentation which can only be handled by creating statistical analysis scripts. Unfortunately, many statistics packages provide only weak text editor functionality and show major differences between them. Without a unified text editor user interface additional effort is required from the user to cope with limited functionality and with text editor differences. Therefore, emacs editors and the ESS package provide the following major features: Support for various operating systems Examples: Linux, Unix, Mac OS X and MS Windows Working environment based on emacs Examples: File Manager (Dired), File Transfer Client/Telnet Client (Tramp), Multiple Clipboards (registers), Bookmarks, Abbreviations, and many others Support for various statistical analysis languages Examples: R, S-Plus, SAS, Stata and OpenBUGS/JAGS Examples: Keybindings, Abbreviations, Syntax highlighting, Code formatting, Commenting, Submitting scripts, Displaying results and Searching documentation ESS is freely available under the GNU General Public License (GPL). For further technical and legal information please refer to the ESS Manual (cf. section Documentation). Web service provided by Seminar for Statistics , Math Department , ETH Zurich Remarks and suggestions can be addressed to the webmaster"	"null"	"null"	"Emacs Speaks Statistics is an add-on package for emacs text editors."	"true"
"Integrated Development Environments"	"Sublime Text + R-Box"	"http://github.com/randy3k/R-Box/"	"Add-on package for Sublime Text 2/3."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"99"	"20"	"20"	"GitHub - randy3k/R-Box: R package for Sublime Text 3 Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 20 Star 99 Fork 20 randy3k/R-Box Code Issues 10 Pull requests 1 Pulse Graphs R package for Sublime Text 3 314 commits 5 branches 6 releases Fetching contributors Python 53.6% JavaScript 28.9% R 15.8% Shell 1.7% Python JavaScript R Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags enhanced-r future master screenshots st2 Nothing to show 3.1.2 3.1.1 3.1.0 3.0.5 3.0.4 2.9.6 Nothing to show New pull request Latest commit 4ae1c44 Jul 10, 2016 randy3k remove installer setting Permalink Failed to load latest commit information. packages update syntax and packages files Jul 10, 2016 support allow Rcpp compile attributes Apr 10, 2016 syntax update syntax and packages files Jul 10, 2016 LICENSE.txt add license Mar 28, 2015 R-Box.sublime-settings remove installer setting Jul 11, 2016 README.md Update README.md Jul 10, 2016 completions.py remove st2 code Mar 16, 2016 linter.py update linter settings only when not set Mar 21, 2016 main_menu.py show R-Box menu for Rstudio project Apr 10, 2016 packages.R update R scripts for syntax generation and package suports Dec 16, 2015 source_prompt.py refactor code Feb 22, 2016 status_hints.py remove st2 code Mar 16, 2016 syntax.R update package files and syntax.R Feb 13, 2016 update.sh set -e in update.sh Jul 10, 2016 README.md R package for Sublime Text Features: Autocompletions for various packages. Function hints in status bar for various packages. Extend R Syntax Support Roxygen, Rcpp, R Sweave and R Markdown syntaxes. Build commands for Rmarkdown and Rnw files. A main menu inspired by SublimeStudio (if SendTextPlus is installed) If you like it, you could send me some tips via paypal or gratipay. Installation Install via Package Control Settings See Preference -> Package Settings -> R-Box Autocompletions and status bar hints Auto completions and status bar hints only support limited number of packages. R-Box will search for library or require statements in order to load the corresponding package support files. The support files are under the packages directory. If your favorite packages are not listed there, you can generate the corresponding files by running packages.R in the following steps. Preference: Browse Packages and create the directory .../User/R-Box/ if it doesn't exist Copy the file packages.R to R-Box Run Rscript packages.R <package name> This will create a json file under packages directory. Send Code to Terminals R-Box no longer ships with the ""send code"" functionality. R-Box will mainly focus on the R language development. The ""send code"" functionality is exported to SendTextPlus. You could choose the active program by the option SendTextPlus: Choose Program in command palette. License R-Box is licensed under the MIT License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"http://github.com/randy3k/R-Box/"	"Add-on package for Sublime Text 2/3."	"true"
"Integrated Development Environments"	"TextMate + r.tmblundle"	"https://github.com/textmate/r.tmbundle"	"Add-on package for TextMate 1/2."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"22"	"6"	"8"	"GitHub - textmate/r.tmbundle: TextMate support for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 6 Star 22 Fork 8 textmate/r.tmbundle Code Issues 3 Pull requests 0 Pulse Graphs TextMate support for R 225 commits 2 branches 0 releases Fetching contributors Ruby 42.9% Shell 42.2% R 9.4% CSS 5.5% Ruby Shell R CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master textmate-1.x Nothing to show Nothing to show New pull request Latest commit 44691a0 May 15, 2015 Hans-Jörg Bibiko fixed Help for 3.2.0 Permalink Failed to load latest commit information. Commands fixed issue for version 3.2 (work in progress) May 14, 2015 DragCommands • improved language grammar for classes Aug 15, 2012 Macros • disabled for now the hiding of a possible tooltip before coming up … Aug 15, 2012 Preferences fixed ""else"" indentation May 14, 2015 Snippets • made Rhelper daemon once again more robust against possible errors Dec 8, 2009 Support fixed Help for 3.2.0 May 15, 2015 Syntaxes • improved language grammar for classes Aug 16, 2012 README.mdown • merged pull request to improve indentation [Thanks to Jon Claydon] Aug 15, 2012 info.plist • forgot to place the new snippet file.choose to the right bundle men… Dec 8, 2009 README.mdown Installation You can install this bundle in TextMate by opening the preferences and going to the bundles tab. After installation it will be automatically updated for you. General Bundle Styleguide — before you make changes Commit Styleguide — before you send a pull request Writing Bug Reports — before you report an issue License If not otherwise specified (see below), files in this repository fall under the following license: Permission to copy, use, modify, sell and distribute this software is granted. This software is provided ""as is"" without express or implied warranty, and with no claim as to its suitability for any purpose.  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/textmate/r.tmbundle"	"Add-on package for TextMate 1/2."	"true"
"Integrated Development Environments"	"StatET"	"http://www.walware.de/goto/statet"	"An Eclipse based IDE for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"WalWare - Homepage <body> <h1>Willkommen - Welcome - Bienvenue</h1> <p>Willkommen auf der Homepage von Stephan Wahlbrink, Family &amp; Friends.</p> <p>Welcome on the websites of Stephan Wahlbrink, family &amp; friends</p> <p>Bitte nutzen sie einen Browser, der Frames unterstützt. <br/> Please use a browser supporting frame-technology.</p> <h3>&Uuml;bersicht über die Webpr&auml;senz:</h3> <h4>Informationen und Hilfe</h4> <ul> <li>Neuigkeiten auf walware.de</li> <li>Informationen zu dieser Webpräsenz</li> <li>Kontaktmöglichkeiten</li> <li>Übersicht über die Webpräsenz</li> </ul> <h4>Teddy - The Art Group</h4> <ul> <li>Eine Auswahl an Logos</li> <li>Webseiten von mir</li> </ul> <h4>Bits &amp; Bytes - Open Source Software</h4> <ul> <li>Bits &amp; Bytes - News (english)</li> <li>StatET - Eclipse-Plugin for R</li> <li>RJ - High Level Java-R Framework</li> <li>Bits &amp; Bytes - Downloads</li> </ul> <h4>Kaktus - Karin's Kakteenwelt</h4> <ul> <li>Fotos 2007</li> <li>Foto-Gallery</li> </ul> <h4>Ceratites - Muschelkalk-Fossilien</h4> <ul> <li></li> </ul> <h4>Anderes</h4> <ul> <li>Bilder von meinen tierischen Lebensabschnitts-Lieblingen :-)</li> </ul> </body>"	"null"	"null"	"An Eclipse based IDE for R."	"true"
"Integrated Development Environments"	"Revolution R Enterprise"	"http://www.revolutionanalytics.com/get-revolution-r-enterprise"	"Revolution R would be offered free to academic users and commercial software would focus on big data, large scale multiprocessor functionality."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Revolution R would be offered free to academic users and commercial software would focus on big data, large scale multiprocessor functionality."	"false"
"Integrated Development Environments"	"R Commander"	"http://socserv.mcmaster.ca/jfox/Misc/Rcmdr/"	"A package that provides a basic graphical user interface."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"R Commander The R Commander: A Basic-Statistics GUI for R Current Version: 2.2-x John Fox and Milan Bouchet-Valat Please Read the Rcmdr Installation Notes (click on the image for a larger view) For more details, see my paper on the R Commander in the Journal of Statistical Software (which is somewhat out of date) and the introductory manual distributed with the package (accessible via the Help -> Introduction to the R Commander menu). The R-Commander GUI consists of a window containing several menus, buttons, and information fields. (The menu tree, etc., are shown below.) In addition, the Commander window contains script and output text windows. The R-Commander menus are easily configurable through a text file or, preferably, through plug-in packages, of which many are now available on CRAN. The menus lead to simple dialog boxes, the general contents of which are more or less obvious from the names of the menu items. These boxes have a common structure, including a help button leading to the help page for a relevant function, and a reset button to reset the dialog to its original state. By default, commands generated via the dialogs are posted to the output window, along with printed output, and to the script window. Lines in the script window can be edited and (re)submitted for execution. Error messages, warnings, and ""notes"" appear in a messages window. Commands access a current or active data set (data frame). When a new data set is read (from an attached package or imported), it becomes the active data set. The user can also select an active data set from among data frames currently in memory. In addition to standard packages, the R Commander uses functions in a number of other packages. To install the Rcmdr package, use the command install.packages(""Rcmdr""). If any of the other packages on which it depends are missing, the Rcmdr will offer to install them when it first starts up. My original object in designing and implementing this GUI was to cover the content of a basic-statistics course. The target text was Moore's The Basic Practice of Statistics, Second Edition (Freeman, 2000), which is the text that I used for a two-semester introduction to statistics for undergraduate sociology majors. The R Commander implements the content of this text plus some additional material (e.g., linear and generalized linear models). As a result of several suggestions that I have received, the coverage is now substantially larger than originally envisaged, and is broader still when the various R Commander plug-in packages are considered. I must confess that I'm not terribly enamored of menu/dialog box interfaces to statistical software, but I do feel that these interfaces have a role for introductory and occasional use. The R Commander interface is not innovative, but I hope that it's simple and familiar. One of my design goals was to wean users from the GUI to writing commands, which is one motivation for the script window. It is relatively easy for me to add statistical functionality to the R Commander, and I'd appreciate suggestions for what you'd like to see implemented. Please remember, however, that my intention is to keep things simple and basic. In particular, I don't like extensive menu/dialog-box interfaces to large statistical systems that attempt to provide access to every option and procedure. In R, of course, which relies on thousands of contributed packages, this is not feasible anyway. As mentioned, the R Commander can also be extended by plug-in packages: See my article in the December 2007 issue of R News (though the facilities for plug-ins have advanced in the interim; also see the Journal of Statistical Software paper by Carvalho and Fox on the RcmdrPlugin.survival package). I'm making the GUI available as the Rcmdr package. You can get a copy of the latest released version of the Rcmdr package through CRAN. The current version of the package was tested on Windows and Mac OS X systems; it should also run on most Linux/Unix systems. Mac OS X users in particular (and possibly others) should see the installation notes. The lastest version of the Rcmdr has some new features, and there are many new features beyond the original release. (See the NEWS and CHANGES files in the installed or source package for details.) Version 0.9-9 introduced substantial changes to the interface, with output by default routed to an output window within the main Commander window; version 0.9-10 included rewritten dialog-box generating functions, reducing the R code for the package by about 40 percent. Development version 0.9-18 (never submitted to CRAN) introduced other substantial changes, such as conditionally activated menus. Version 1.0-0 was the first ""non-beta"" version. Version 1.1-1 included support for translation into other languages, using the tools for internationalization and localization introduced in R 2.1.0; please contact me if you'd like to contribute a translation of the Rcmdr package into another language. Version 1.3-0 introduced ""plug-ins,"" which simplify extending the R Commander: See ?Plugins. There are now a number of plug-in packages on CRAN, most with names of the form RcmdrPlugin.* (e.g., RcmdrPlugin.survival) . Version 1.8-0 introduced dialogs that retain previous selections until the data set is changed. Version 2.0-0 modernized the interface and introduced tabbed dialogs and support for output in the form of editable R Markdown and knitr documents. An introductory manual (in a PDF file, up-to-date as of Rcmdr version 2.0-1) is part of the R Commander package and is accessible from its Help menu. I'd very much appreciate learning about your experiences. R Commander Default Menu Tree [current as of version 2.2-0] File - Change working directory     |- Open script file     |- Save script     |- Save script as     |- Open R Markdown file     |- Save R Markdown file     |- Save R Markdown file as     |- Save output     |- Save output as     |- Save R workspace     |- Save R workspace as     |- Exit - from Commander            |- from Commander and R Edit - Edit R Markdown document     |- Edit knitr document     |- Remove last Markdown command block     |- Remove last knitr command block     |- Cut     |- Copy     |- Paste     |- Delete     |- Find     |- Select all     |- Undo     |- Redo     |- Clear Window Data - New data set     |- Load data set     |- Merge data sets     |- Import data - from text file, clipboard, or URL     |             |- from SPSS data set     |             |- from SAS xport file     |             |- from Minitab data set     |             |- from STATA data set     |             |- from Excel file     |- Data in packages - List data sets in packages     |                  |- Read data set from attached package     |- Active data set - Select active data set     |                 |- Refresh active data set     |                 |- Help on active data set (if available)     |                 |- Variables in active data set     |                 |- Set case names     |                 |- Subset active data set     |                 |- Aggregate variables in active data set     |                 |- Remove row(s) from active data set     |                 |- Stack variables in active data set     |                 |- Remove cases with missing data     |                 |- Save active data set     |                 |- Export active data set     |- Manage variables in active data set - Recode variable                                           |- Compute new variable                                           |- Add observation numbers to data set                                           |- Standardize variables                                           |- Convert numeric variables to factors                                           |- Bin numeric variable                                           |- Reorder factor levels                                           |- Drop unused factor levels                                           |- Define contrasts for a factor                                           |- Rename variables                                           |- Delete variables from data set Statistics - Summaries - Active data set           |           |- Numerical summaries           |           |- Frequency distributions           |           |- Count missing observations           |           |- Table of statistics           |           |- Correlation matrix           |           |- Correlation test           |           |- Shapiro-Wilk test of normality           |- Contingency Tables - Two-way table           |                    |- Multi-way table           |                    |- Enter and analyze two-way table           |- Means - Single-sample t-test           |       |- Independent-samples t-test           |       |- Paired t-test           |       |- One-way ANOVA           |       |- Multi-way ANOVA           |- Proportions - Single-sample proportion test           |             |- Two-sample proportions test           |- Variances - Two-variances F-test           |           |- Bartlett's test           |           |- Levene's test           |- Nonparametric tests - Two-sample Wilcoxon test           |                     |- Single-sample Wilcoxon test           |                     |- Paired-samples Wilcoxon test           |                     |- Kruskal-Wallis test           |                     |- Friedman rank-sum test           |- Dimensional analysis - Scale reliability           |                      |- Principal-components analysis           |                      |- Factor analysis           |                      |- Confirmatory factor analysis           |                      |- Cluster analysis - k-means cluster analysis           |                                         |- Hierarchical cluster analysis           |                                         |- Summarize hierarchical clustering           |                                         |- Add hierarchical clustering to data set           |- Fit models - Linear regression                        |- Linear model                        |- Generalized linear model                        |- Multinomial logit model                        |- Ordinal regression model Graphs - Color palette       |- Index plot       |- Dot plot       |- Histogram       |- Density estimate       |- Stem-and-leaf display       |- Boxplot       |- Quantile-comparison plot       |- Scatterplot       |- Scatterplot matrix       |- Line graph       |- XY conditioning plot       |- Plot of means       |- Strip chart       |- Bar graph       |- Pie chart       |- 3D graph - 3D scatterplot       |          |- Identify observations with mouse       |          |- Save graph to file       |- Save graph to file - as bitmap                            |- as PDF/Postscript/EPS                            |- 3D RGL graph Models - Select active model       |- Summarize model       |- Add observation statistics to data       |- Akaike Information Criterion (AIC)       |- Bayesian Information Criterion (BIC)       |- Stepwise model selection       |- Subset model selection       |- Confidence intervals       |- Hypothesis tests - ANOVA table       |                  |- Compare two models       |                  |- Linear hypothesis       |- Numerical diagnostics - Variance-inflation factors       |                       |- Breusch-Pagan test for heteroscedasticity       |                       |- Durbin-Watson test for autocorrelation       |                       |- RESET test for nonlinearity       |                       |- Bonferroni outlier test       |- Graphs - Basic diagnostic plots                |- Residual quantile-comparison plot                |- Component+residual plots                |- Added-variable plots                |- Influence plot                |- Effect plots Distributions - Set random number generator seed              |- Continuous distributions - Normal distribution - Normal quantiles              |            |                     |- Normal probabilities              |            |                     |- Plot normal distribution              |            |                     |- Sample from normal distribution              |            |- t distribution - t quantiles              |            |                |- t probabilities              |            |                |- Plot t distribution              |            |                |- Sample from t distribution              |            |- Chi-squared distribution - Chi-squared quantiles              |            |                          |- Chi-squared probabilities              |            |                          |- Plot chi-squared distribution              |            |                          |- Sample from chi-squared distribution              |            |- F distribution - F quantiles              |            |                |- F probabilities              |            |                |- Plot F distribution              |            |                |- Sample from F distribution              |            |- Exponential distribution - Exponential quantiles              |            |                          |- Exponential probabilities              |            |                          |- Plot exponential distribution              |            |                          |- Sample from exponential distribution              |            |- Uniform distribution - Uniform quantiles              |            |                      |- Uniform probabilities              |            |                      |- Plot uniform distribution              |            |                      |- Sample from uniform distribution              |            |- Beta distribution - Beta quantiles              |            |                   |- Beta probabilities              |            |                   |- Plot beta distribution              |            |                   |- Sample from beta distribution              |            |- Cauchy distribution - Cauchy quantiles              |            |                     |- Cauchy probabilities              |            |                     |- Plot Cauchy distribution              |            |                     |- Sample from Cauchy distribution              |            |- Logistic distribution - Logistic quantiles              |            |                       |- Logistic probabilities              |            |                       |- Plot logistic distribution              |            |                       |- Sample from logistic distribution              |            |- Lognormal distribution - Lognormal quantiles              |            |                        |- Lognormal probabilities              |            |                        |- Plot lognormal distribution              |            |                        |- Sample from lognormal distribution              |            |- Gamma distribution - Gamma quantiles              |            |                    |- Gamma probabilities              |            |                    |- Plot gamma distribution              |            |                    |- Sample from gamma distribution              |            |- Weibull distribution - Weibull quantiles              |            |                      |- Weibull probabilities              |            |                      |- Sample from Weibull distribution              |            |- Gumbel distribution - Gumbel quantiles              |                                  |- Gumbel probabilities              |                                  |- Plot Gumbel distribution              |                                  |- Sample from Gumbel distribution              |- Discrete distributions - Binomial distribution - Binomial quantiles                           |                       |- Binomial tail probabilities                           |                       |- Binomial probabilities                           |                       |- Plot binomial distribution                           |                       |- Sample from binomial distribution                           |- Poisson distribution - Poisson quantiles                           |                     |- Poisson tail probabilities                           |                     |- Poisson probabilities                           |                     |- Plot Poisson distribution                           |                     |- Sample from Poisson distribution                           |- Geometric distribution - Geometric quantiles                           |                       |- Geometric tail probabilities                           |                       |- Geometric probabilities                           |                       |- Plot geometric distribution                           |                       |- Sample from geometric distribution                           |- Hypergeometric distribution - Hypergeometric quantiles                           |                     |- Hypergeometric tail probabilities                           |                     |- Hypergeometric probabilities                           |                     |- Plot hypergeometric distribution                           |                     |- Sample from hypergeometric distribution                           |- Negative binomial distribution - Negative binomial quantiles                                                   |- Negative binomial tail probabilities                                                   |- Negative binomial probabilities                                                   |- Plot negative binomial distribution                                                   |- Sample from negative binomial distribution Tools - Load package(s)      |- Load Rcmdr plug-in(s)      |- Options      |- Save Rcmdr options      |- Manage Mac OS X app nap for R.app [Mac OS X only]      |- Install [optional] auxiliary software [if not already installed] Help - Commander help     |- Introduction to the R Commander     |- R Commander website     |- Help on active data set (if available)     |- About Rcmdr     |- Start R help system     |- R website     |- Using R Markdown Buttons: Edit data set; View data set; Submit (lines from the script window) Information field buttons: active data set; active model Right-click ""context"" menus for script and output windows. Last modified: 2015-08-25 by John Fox <jfox AT mcmaster.ca>.  "	"null"	"null"	"A package that provides a basic graphical user interface."	"true"
"Integrated Development Environments"	"IRkernel"	"https://github.com/IRkernel/IRkernel"	"R kernel for Jupyter."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"485"	"40"	"91"	"GitHub - IRkernel/IRkernel: R kernel for Jupyter Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 40 Star 485 Fork 91 IRkernel/IRkernel Code Issues 54 Pull requests 4 Wiki Pulse Graphs R kernel for Jupyter https://irkernel.github.io/ 397 commits 3 branches 7 releases 25 contributors Jupyter Notebook 66.5% R 26.6% Python 4.9% Shell 1.8% Makefile 0.2% Jupyter Notebook R Python Shell Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags catch-interrupt-mainloop master testthat Nothing to show 0.6.1 0.6 0.5 0.4 0.3 0.2 0.1 Nothing to show New pull request Latest commit 482ea7b Jul 15, 2016 flying-sheep At least 2 spaces after params Permalink Failed to load latest commit information. R At least 2 spaces after params Jul 15, 2016 example-notebooks updated demo notebooks to reflect current output May 26, 2016 inst/kernelspec Make R run even more quietly Jun 7, 2015 man Autofix options docs Jun 29, 2016 tests Remove svg from the default sent image types Jul 7, 2016 .Rbuildignore Structured travis again May 24, 2016 .gitignore added pdfs to gitignore Apr 14, 2015 .travis.sh Run integrate kernel tests into R test framework (#375) Jul 5, 2016 .travis.yml temporarily allow failures for broken max stuff Jul 1, 2016 DESCRIPTION Run integrate kernel tests into R test framework (#375) Jul 5, 2016 Dockerfile Added a Dockerfile Oct 20, 2015 IRkernel.Rproj Run integrate kernel tests into R test framework (#375) Jul 5, 2016 LICENSE Polish documentation Mar 19, 2014 Makefile based more stuff on repr Apr 16, 2015 NAMESPACE Use publish_mimebundle from IRdisplay (#368) Jul 1, 2016 README.md Use Remotes: to install IRdisplay (#363) Jun 29, 2016 cran-comments.md Fix typos in cran-comments.md May 19, 2016 README.md Native R kernel for Jupyter For detailed requirements and install instructions see irkernel.github.io Requirements Jupyter. A current R installation. Installation We are currently in the process of submitting our packages to CRAN. Until then, you can install via the devtools package: install.packages(c('pbdZMQ', 'repr', 'devtools'))  # repr is already on CRAN # devtools::install_github('IRkernel/repr')        # or get the latest repr from master devtools::install_github('IRkernel/IRkernel') IRkernel::installspec()  # to register the kernel in the current R installation Per default IRkernel::installspec() will install a kernel with the name “ir” and a display name of “R”. Multiple calls will overwrite the kernel with a kernel spec pointing to the last R interpreter you called that commands from. You can install kernels for multiple versions of R by supplying a name and displayname argument to the installspec() call (You still need to install these packages in all interpreters you want to run as a jupyter kernel!): # in R 3.3 IRkernel::installspec(name = 'ir33', displayname = 'R 3.3') # in R 3.2 IRkernel::installspec(name = 'ir32', displayname = 'R 3.2') Now both R versions are available as an R kernel in the notebook. If you encounter problems during installation Have a look at the full installation instructions! Search the existing open and closed issues. If you are sure that this is a new problem, file an issue. Running the notebook If you have Jupyter installed, you can create a notebook using IRkernel from the dropdown menu. You can also start other interfaces with an R kernel: # “ir” is the kernel name installed by the above `IRkernel::installspec()` # change if you used a different name! jupyter qtconsole --kernel=ir jupyter console --kernel=ir Run in a Docker container If you have a Docker daemon running, e.g. reachable on localhost, start a container with: git clone https://github.com/IRkernel/IRkernel.git cd IRkernel docker build -t irkernel . cd <path to your notebooks> docker run -itp 8888:8888 -v $(pwd):/notebooks/ irkernel In your browser open the URL http://localhost:8888/. All notebooks from your session will be saved in the current directory. On other platforms without docker, this can be started using docker-machine by replacing “localhost” with an IP from docker-machine ip <MACHINE>. With the deprecated boot2docker, this IP will be boot2docker ip. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/IRkernel/IRkernel"	"R kernel for Jupyter."	"true"
"Integrated Development Environments"	"Deducer"	"http://www.deducer.org/pmwiki/pmwiki.php?n=Main.DeducerManual?from=Main.HomePage"	"A Menu driven data analysis GUI with a spreadsheet like data editor."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Deducer: A GUI for R - Deducer Manual Deducer Manual: Home Download Viewer Teaching Plug-in Development Poker AI Research: Home AAAI 2007 AAAI 2008 Download Statistical Consulting Blog es Search: View Edit History Print Deducer Manual (redirected from Main.HomePage) An R Graphical User Interface (GUI) for Everyone Deducer is designed to be a free easy to use alternative to proprietary data analysis software such as SPSS, JMP, and Minitab. It has a menu system to do common data manipulation and analysis tasks, and an excel-like spreadsheet in which to view and edit data frames. The goal of the project is two fold. Provide an intuitive graphical user interface (GUI) for R, encouraging non-technical users to learn and perform analyses without programming getting in their way. Increase the efficiency of expert R users when performing common tasks by replacing hundreds of keystrokes with a few mouse clicks. Also, as much as possible the GUI should not get in their way if they just want to do some programming. Deducer is designed to be used with the Java based R console JGR, though it supports a number of other R environments (e.g. Windows RGUI and RTerm). Download and Install Join the Help/Discussion Group Screen shots Video introduction: New Users Existing R users Menu Structure File Data Analysis Packages & Data Plots Open Data Edit Factor Frequencies Data Viewer Plot Builder Save Data Recode Variables Descriptives   Import Template   Transform Contingency Tables   Open Plot   Reset Row Names One Sample Test   Templates   Sort Two Sample Test   Interactive   Transpose K-Sample Test   Merge Data Correlation   Subset Linear Model     Logistic Model     Generalized Linear Model Videos Analysis Do people lie about their weight? (Descriptives, One sample tests, Two Sample Tests) Variables predicting low baby birth weight (Recode Variables, Logistic Regression) Paired t-test Visualization Examining infant mortality (Plot builder tutorial): Part 1 Part 2 Examining wind farm geographic data using the plot builder Exploring data with interactive plots Advanced plot builder customization: Part 1 Part 2 Data Import excel data Plug-ins Spatial data analysis Text mining Examples Are smoking and/or race associated with low baby birth weight (Contingency tables) Are people better tippers at dinner time? (Two Sample Tests) Do counseling treatments of anorexia work? (K-Sample Tests) What is the relationship between reported height and weight and actual height and weight? (Correlation) Extension Packages DeducerExtras An add-on package containing a variety of additional analysis dialogs. These include: Distribution quantiles, single/multiple sample proportion tests, paired t-test, Wilcoxon signed rank test, Levene's test, Bartlett's test, k-means clustering, Hierarchical clustering, factor analysis, and multi-dimensional scaling DeducerPlugInScaling Reliability and factor analysis DeducerMMR Moderated multiple regression and simple slopes analysis DeducerSpatial A GUI for Spatial Data Analysis and Visualization RDSAnalyst Respondent Driven Sampling gMCP (Experimental) A graphical approach to sequentially rejective multiple test procedures RGG (Experimental) A GUI Generator DeducerText (Experimental) Text Mining DeducerHansel (Experimental) An add-on package which covers many methods common in econometrics, including binary logit, binary probit, and tobit estimates, and various time-series, panel, and spatial data methods. The time-series methods include cointegration analysis. Developer Information Building Deducer from the source Plug-in Development Function Documentation Page last modified on October 20, 2015, at 08:18 AM ▲ Top ▲ Search Recent Changes All Recent Changes"	"null"	"null"	"A Menu driven data analysis GUI with a spreadsheet like data editor."	"true"
"Integrated Development Environments"	"Radiant"	"http://vnijs.github.io/radiant/"	"A platform-independent browser-based interface for business analytics in R, based on the Shiny."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Radiant – Business analytics using R and Shiny Radiant Home News Data Manage View Visualize Pivot Explore Transform Combine Quantitative Analysis Sample Sampling Sample size (single) Sample size (compare) Base Probability calculator Central Limit Theorem Single mean Compare means Single proportion Compare proportions Cross-tabs Regression Correlation Linear regression (OLS) Logistic regression (GLM) Decide Decision tree Simulate Marketing Research Sample Sampling Sample size (single) Sample size (compare) Base Probability calculator Central Limit Theorem Single mean Compare means Single proportion Compare proportion Cross-tabs Regression Correlation Linear regression (OLS) Logistic regression (GLM) Decide Decision tree Simulate Maps (Dis)similarity Attributes Factor Pre-factor Factor Cluster Hierarchical K-means Conjoint Create profiles Conjoint Customer Analytics Sample Sampling Sample size (single) Sample size (compare) Base Probability calculator Central Limit Theorem Single mean Compare means Single proportion Compare proportion Cross-tabs Regression Correlation Linear regression (OLS) Logistic regression (GLM) Model Neural Network (ANN) Collaborative Filtering Design of Experiments (DOE) Model performance Factor Pre-factor Factor Cluster Hierarchical K-means R Report Code Programming Resources Tutorials About Radiant – Business analytics using R and Shiny Radiant development has been moved to https://github.com/radiant-rstats. Updated documentation is available at https://radiant-rstats.github.io/docs/ Radiant is a platform-independent browser-based interface for business analytics in R, based on the Shiny package. Developed by Vincent Nijs. Please use the issue tracker on GitHub to suggest enhancements or report problems: https://github.com/vnijs/radiant/issues. For other questions and comments please use radiant@rady.ucsd.edu. Key features Explore: Quickly and easily summarize, visualize, and analyze your data Cross-platform: It runs in a browser on Windows, Mac, and Linux Reproducible: Recreate results and share work with others as a state-file or an Rmarkdown report Programming: Integrate Radiant’s analysis functions into your own R-code Context: Data and examples focus on business applications Explore Radiant is interactive. Results update immediately when inputs are changed (i.e., no separate dialog boxes) and/or when a button is pressed (e.g., Estimate in Regression > Logistic regression (GLM)). This greatly facilitates exploration and understanding of the data. Cross-platform Radiant works on Windows, Mac, or Linux. It can run without an Internet connection and no data will leave your computer. You can also run the app as a web application on a server. Note: For Windows users with data that contain multibyte characters please make sure your data are in ANSI format so R(adiant) can load characters correctly. Reproducible To conduct high-quality analysis, simply saving output is not enough. You need the ability to recreate results for the same data and/or when new data become available. Moreover, others may want to review your analysis and results. Save and load the state of the application to continue your work at a later time or on another computer. Share state-files with others and create reproducible reports using Rmarkdown. See also the section on Saving and loading state below If you are using Radiant on a server you can even share the url (include the SSUID) with others so they can see what you are working on. Thanks for this feature go to Joe Cheng. Programming Although Radiant’s web-interface can handle quite a few data and analysis tasks, you may prefer to write your own code. Radiant provides a bridge to programming in R(studio) by exporting the functions used for analysis. For more information about programming with Radiant see the programming page on the documentation site. Context Radiant focuses on business data and decisions. It offers tools, examples, and documentation relevant for that context, effectively reducing the business analytics learning curve. How to install Radiant Required: R version 3.2.4 or later Required: A modern browser (e.g., Chrome or Safari). Internet Explorer (version 11 or higher) should work as well Recommended: Rstudio If you use Rstudio (version 0.99.893 or later) you can start and update Radiant through the Addins menu at the top of the screen. For Quantitative Analysis or Business Analytics click Radiant - Quant, for Marketing Research click Radiant - Marketing, and for Customer Analytics click Radiant - Analytics: To install the latest version of Radiant for Windows or Mac with complete documentation for off-line access open R(studio) and copy-and-paste the command below: install.packages(""radiant"", repos = ""http://vnijs.github.io/radiant_miniCRAN/"", type = 'binary') Once all packages are installed use the command below to launch the app (use either “base”, “quant”, “marketing”, or “analytics”), or use the Addins menu in Rstudio: radiant::radiant(""analytics"") See the installing radiant page for more details. You can also create a launcher on your Desktop to start Radiant by typing radiant::launcher(""analytics"") in the R(studio) console and pressing return. Again, enter either “base”, “quant”, “marketing” or “analytics” depending on the app you want to use. A file called radiant.bat (windows) or radiant.command (mac) will be created that you can double-click to start Radiant in your default browser. The launcher command will also create a file called update_radiant.bat (windows) or update_radiant.command (mac) that you can double-click to update Radiant to the latest release. When Radiant starts you will see data on diamond prices. To close the application click the icon in the navigation bar and then click Stop. The Radiant process will stop and the browser window will close (Chrome) or gray-out. Documentation Documentation and tutorials are available at http://vnijs.github.io/radiant/ and in the Radiant web interface (the icons on each page and the icon in the navigation bar). Want some help getting started? Watch the tutorials on the documentation site. Reporting issues Please use the GitHub issue tracker at github.com/vnijs/radiant/issues if you have any problems using Radiant. Online Not ready to install Radiant on your computer? Try it online at the links below: vnijs.shinyapps.io/analytics vnijs.shinyapps.io/marketing vnijs.shinyapps.io/quant vnijs.shinyapps.io/base Running Radiant on shinyapps.io / shiny-server You can run Radiant on shinyapps.io or a (linux) server supported by Shiny server. To run your own server instance copy/fork the repo from github and deploy to shinyapps.io as usual. Shinyapps.io may complain about paths but you shouldn’t have any trouble if you know how to deploy to shinyapps.io. If you do run into difficulties, also clone the repo at https://github.com/vnijs/shinyapps and run the deploy2shinyapp.R file in the Radiant/build folder. You can also host Radiant using shiny-server. Just point shiny-server to the directory in inst/ you want to use. As a courtesy, please let me know if you intend to use Radiant on a server. Saving and loading state To save your analyses save the state of the app to a file by clicking on the icon in the navbar and then on Save state (see also the Data > Manage tab). You can open this state-file at a later time or on another computer to continue where you left off. You can also share the file with others that may want to replicate your analyses. As an example, load the state_file radiant-state.rda through the Data > Manage tab. Go to Data > View, Data > Visualize to see some of the settings. There is also a report in R > Report that was created using the Radiant interface. The html file radiant-state.html contains the output. A related feature in Radiant is that state is maintained if you accidentally navigate to another page, close (and reopen) the browser, and/or hit refresh. Use Reset in the menu in the navigation bar to return to a clean/new state. Loading and saving state also works with Rstudio. If you start Radiant from Rstudio and use > Stop to stop the app, lists called r_data and r_state will be put into Rstudio’s global workspace. If you start radiant again using radiant() it will use these lists to restore state. This can be convenient if you want to make changes to a data file in Rstudio and load it back into Radiant. Also, if you load a state-file directly into Rstudio it will be used when you start Radiant to recreate a previous state. Technical note: Loading state works as follows in Radiant: When an input is initialized in a Shiny app you set a default value in the call to, for example, numericInput. In Radiant, when a state-file has been loaded and an input is initialized it looks to see if there is a value for an input of that name in a list called r_state. If there is, this value is used. The r_state list is created when saving state using reactiveValuesToList(input). An example of a call to numericInput is given below where the state_init function from radiant.R is used to check if a value from r_state can be used. sm_args$comp_value is the default value specified in the single_mean function call. numericInput(""sm_comp_value"", ""Comparison value:"", state_init('sm_comp_value',sm_args$comp_value)) Source code The source code is available on GitHub at https://github.com/vnijs/radiant. Three (related) apps are included in the inst/ directory. Base, offers data loading, saving, viewing, visualizing, merging, and transforming tools. The quant app sources the code from base and extends it. This app is used in the Quantitative Analysis class at the Rady School of Management (UCSD). Finally, the marketing app sources the code from base and quant and extends it with additional tools. The quant app focuses on (basic) quantitative analysis (e.g., comparing means, regression, etc.). The marketing app focuses on marketing analytics by adding clustering, principle component analysis, conjoint analysis, etc. This app is used in the Business Analytics, Quantitative Analysis, Research for Marketing Decisions, and Customer Analytics classes at the Rady School of Management (UCSD). Credits Radiant would not be possible without R and Shiny. I would like to thank Joe Cheng, Winston Chang, and Yihui Xie for answering questions, providing suggestions, and creating amazing tools for the R community. Other key components used in Radiant are ggplot2, dplyr, tidyr, magrittr, broom, shinyAce, knitr, and DT. For an overview of other packages that Radiant relies on please see the about page. License Radiant is licensed under the AGPLv3. The documentation and videos on this site and the radiant help files are licensed under the creative commons attribution, non-commercial, share-alike license CC-NC-SA. As a summary, the AGPLv3 license requires, attribution, including copyright and license information in copies of the software, stating changes if the code is modified, and disclosure of all source code. Details are in the COPYING file. If you are interested in using Radiant please email me at radiant@rady.ucsd.edu © Vincent Nijs (2016)"	"null"	"null"	"A platform-independent browser-based interface for business analytics in R, based on the Shiny."	"true"
"Integrated Development Environments"	"Vim-R"	"https://github.com/vim-scripts/Vim-R-plugin"	"Vim plugin for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"102"	"18"	"62"	"GitHub - vim-scripts/Vim-R-plugin: Plugin to work with R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 18 Star 102 Fork 62 vim-scripts/Vim-R-plugin Code Pull requests 3 Pulse Graphs Plugin to work with R http://www.vim.org/scripts/script.php?script_id=2628 64 commits 1 branch 64 releases Fetching contributors VimL 95.7% Python 4.3% VimL Python Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 111114 111014@1 111014 110805 110614 110222 110208 110203 110117 101217 101121 101118 101107 101025 101023 101016 101015 100923 100917 100825 100803 100801 100730 100728 100719 100710 100707 100521 100512 091223 091016 091004 090828 090811 090810 090610 090523 090519 090516 090507 1.2.7 1.2.6 1.2.5 1.2.4 1.2.3 1.2.2 1.2.1 1.2 1.1 1.0 0.9.9.9 0.9.9.8 0.9.9.7 0.9.9.6 0.9.9.5 0.9.9.4 0.9.9.3 0.9.9.2 0.9.9.1 0.9.9 0.9.8 0.9.7 0.9.6 0.9.5 Nothing to show New pull request Latest commit 0addf16 Nov 27, 2015 jalvesaq committed with vim-scripts Version 1.2.7: * Fix incompatibility with Tmux 2.1. Permalink Failed to load latest commit information. autoload Version 1.2.7: * Fix incompatibility with Tmux 2.1. Nov 28, 2015 doc Version 1.2.7: * Fix incompatibility with Tmux 2.1. Nov 29, 2015 ftdetect Version 0.9.8 Oct 21, 2012 ftplugin Version 1.2.7: * Fix incompatibility with Tmux 2.1. Nov 29, 2015 r-plugin Version 1.2.7: * Fix incompatibility with Tmux 2.1. Nov 29, 2015 syntax Version 1.2.6 Jun 13, 2015 README Version 1.2.5 May 7, 2015 README This is a mirror of http://www.vim.org/scripts/script.php?script_id=2628  This plugin improves Vim's support for editing R code and makes it possible to integrate Vim with R. The functionality is similar to what you can find in Tinn-R and ESS mode of Emacs. This filetype plugin uses Tmux (Linux, OS X, or other Unix) or a C library (Microsoft Windows) or Apple Script (Mac OS X) to send commands to R. The communication with R also depends on the R package vimcom.  Screenshots and Debian package: http://www.lepem.ufc.br/jaa/vim-r-plugin.html Comments and general questions: https://groups.google.com/forum/#!forum/vim-r-plugin Development code and bug report: https://github.com/jcfaria/Vim-R-plugin  MAIN FEATURES:    * Communication with R.   * Omni completion (auto-completion) for R objects and function arguments.   * Ability to see R's documentation in a Vim's buffer.   * Object Browser.   * Syntax highlighting for R, RHelp, RMarkdown and RreStructuredText code.   * Smart indentation for R, RHelp, RMarkdown and RreStructuredText syntax.   * Most of the plugin's behavior is customizable.      For a detailed list of features, see: http://www.lepem.ufc.br/jaa/r-plugin.html#r-plugin-features  USE:     See http://www.lepem.ufc.br/jaa/r-plugin.html#r-plugin-use  FILES:     See http://www.lepem.ufc.br/jaa/r-plugin.html#r-plugin-files   Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/vim-scripts/Vim-R-plugin"	"Vim plugin for R."	"true"
"Integrated Development Environments"	"Nvim-R"	"https://github.com/jalvesaq/Nvim-R"	"Neovim plugin for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"84"	"10"	"18"	"GitHub - jalvesaq/Nvim-R: Vim plugin to work with R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 84 Fork 18 jalvesaq/Nvim-R Code Issues 11 Pull requests 0 Pulse Graphs Vim plugin to work with R 281 commits 1 branch 5 releases 6 contributors VimL 66.5% C 16.6% R 13.0% Python 3.0% Other 0.9% VimL C R Python Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.9.5 v0.9.4 v0.9.3 v0.9.2 v0.9.1 Nothing to show New pull request Latest commit cc1330b Jul 4, 2016 jalvesaq Do not save the file during either \aa or \ae … Close #83 Permalink Failed to load latest commit information. R Do not save the file during either \aa or \ae Jul 4, 2016 doc Do not save the file during either \aa or \ae Jul 4, 2016 ftdetect Add ftdetect/r.vim Apr 20, 2015 ftplugin Improve Zathura support for non-rnoweb files Jun 14, 2016 syntax Delete unnecessary trailing spaces May 17, 2016 .gitignore Automatically install and update nvimcom Mar 11, 2016 LICENSE Initial commit Dec 26, 2014 Makefile Version 0.9.5 May 18, 2016 Nvim-R.gif Upload Nvim-R.gif and update links Feb 7, 2016 README.md Update documentation Jun 19, 2016 list_for_vimball Delete no longer used R/nvimcom/src/apps/nvimr.c Mar 14, 2016 nvimrcom.png Add support to Vim Mar 10, 2016 README.md Nvim-R This is the development code of Nvim-R which improves Vim's support to edit R code. It started as a copy of the Vim-R-plugin adapted to Neovim, but now also supports Vim. The R package nvimcom is included in the source code and is automatically installed and updated whenever necessary. The Nvim-R plugin sets the environment variable R_DEFAULT_PACKAGES, including nvimcom in the list of packages to be loaded on R startup. Installation If you use a plugin manager, such as vim-plug, Vundle or Pathogen, follow its instructions on how to install plugins from github. To install a stable version of the plugin, download the Vimball file Nvim-R.vmb from Nvim-R/releases, open it and do: :so %  Then, press the space bar a few time to ensure the installation of all files. The Nvim-R source code includes the R package nvimcom, which has C code that needs compilation. Nvim-R will build and install nvimcom automatically, and it will also update it automatically whenever necessary. A C compiler (e.g. gcc or clang) is necessary. On Windows, you have to install Rtools. Please, read the plugin's documentation for instructions on usage. Below is a sample init.vim: syntax on filetype plugin indent on  ""------------------------------------ "" Behavior ""------------------------------------ let maplocalleader = "","" let mapleader = "";""  ""------------------------------------ "" Appearance ""------------------------------------ "" www.vim.org/scripts/script.php?script_id=3292 colorscheme southernlights  ""------------------------------------ "" Search ""------------------------------------ set infercase set hlsearch set incsearch  ""------------------------------------ "" Nvim-R ""------------------------------------ if has(""gui_running"")     inoremap <C-Space> <C-x><C-o> else     inoremap <Nul> <C-x><C-o> endif vmap <Space> <Plug>RDSendSelection nmap <Space> <Plug>RDSendLine Please, read the file doc/Nvim-R.txt for usage details. Screenshots The animated GIF below shows R running in a Neovim terminal buffer. We can note: The editor has some code to load Afrobarometer data on Mozambique, R is running below the editor and the Object Browser is on the right side. On the R Console, we can see messages inform the packages setwidth and nvimcom were loaded. The messages are in blue because they were colorized by the package colorout. When the command library(""foreign"") is sent to R, the string read.spss turns blue because it is immediately recognized as a loaded function (the Vim color scheme used is southernlights). When Mozambique's data.frame is created, it is automatically displayed in the Object Browser. Messages about unrecognized types are in blue because they were sent to stderr, and the line Warning messages is in red because colorout recognized it as a warning. When the ""label"" attributes are applied to the data.frame elements, the labels show up in the Object Browser. The last slide shows the output of summary. It also features omni completion in action: we can see the elements of m that start with ""D"". The communication between R and either Vim or Neovim In addition to sending lines of code to R Console, Nvim-R and R communicate with each other through TCP connections. The R package nvimcom runs a TCP server that receives messages from either Vim/Neovim, and it also sends messages through a TCP connection to Vim/Neovim. Moreover, nvimcom includes the application nclientserver which is never used by R itself, but is run by Vim/Neovim, providing both a TCP client and a TCP server. The Diagram below shows the three paths of communication between Vim/Neovim and R: The black path is followed by all commands that you trigger in the editor and that you can see being pasted into R Console. There are three different ways of sending the commands to R Console: When running R in a Neovim built-in terminal, the function jobsend() is used to send code to R Console. When running R in an external terminal emulator, Tmux is used to send commands to R Console. On Windows operating system, Nvim-R sends a message to R (nvimcom) which forwards the command to R Console. The blue path is followed by the few commands that you trigger, but that are not pasted into R Console and do not output anything in R Console; their results are seen in the editor itself. These are the commands to do omnicompletion (of names of objects and function arguments), start and manipulate the Object Browser (\ro, \r= and \r-), call R help (\rh or :Rhelp), insert the output of an R command (:Rinsert) and format selected text (:Rformat). The red path is followed by R messages that tell the editor to update the Object Browser, update the syntax highlight to include newly loaded libraries and open the PDF output after weaving an Rnoweb file and compiling the LaTeX result. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jalvesaq/Nvim-R"	"Neovim plugin for R."	"true"
"Integrated Development Environments"	"JASP"	"https://jasp-stats.org/"	"A complete package for both Bayesian and Frequentist methods, that is familiar to users of SPSS."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"126"	"21"	"54"	"GitHub - jasp-stats/jasp-desktop: JASP aims to be a complete statistical package for both Bayesian and Frequentist statistical methods, that is easy to use and familiar to users of SPSS Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 126 Fork 54 jasp-stats/jasp-desktop Code Issues 189 Pull requests 2 Wiki Pulse Graphs JASP aims to be a complete statistical package for both Bayesian and Frequentist statistical methods, that is easy to use and familiar to users of SPSS http://jasp-stats.org 2,556 commits 2 branches 33 releases 21 contributors C++ 47.7% R 38.9% JavaScript 8.2% C 2.6% QMake 1.2% NSIS 0.5% Other 0.9% C++ R JavaScript C QMake NSIS Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: development Switch branches/tags Branches Tags development master Nothing to show v0.8.0.0Beta2 v0.7.5.6 v0.7.5.5 v0.7.5.4 v0.7.5.3 v.0.7.5 v0.7.5 v0.7.5Beta3 v0.7.5Beta2 v0.7.5Beta1 v0.7.1.12 v0.7.1.11 v0.7.1.9 v0.7.1.8 v0.7.1.7 v0.7.1.6 v0.7.1.2 v0.7.1.1 v0.7.1 v0.7.1Beta1 v0.7 v0.7Beta4 v0.7Beta3 v0.7Beta2 v0.7Beta v0.6.6 v0.6.5 v0.6 v0.5 v0.4 v0.3 v0.2 0.7.1Beta2 Nothing to show New pull request Latest commit b3e407f Jul 14, 2016 FransTestAccount Changes to Summary Statistics Binomial Bayesian for Windows Permalink Failed to load latest commit information. Docs Updating the user guide Dec 10, 2015 JASP-Common Prepare 0.8.0 Beta 2 release Jul 14, 2016 JASP-Desktop Changes to Summary Statistics Binomial Bayesian for Windows Jul 14, 2016 JASP-Engine Summary Stats: Tweaks to UI and table names Jul 12, 2016 JASP-Tests Remove warnings Jun 21, 2016 Resources initial commit boxplots descriptives Jul 12, 2016 Tools JASP release 0.7.5.6 Apr 20, 2016 .gitattributes Update to .gitattributes Aug 9, 2013 .gitignore Principal Component Analysis May 19, 2016 CHANGES.md Updates to Release notes Dec 28, 2014 COPYING.txt Added Changes and Copying (license) files Nov 7, 2014 JASP.pro Removed ICU dependency May 10, 2016 README.md Added JASP licensing info Nov 16, 2015 README.md JASP JASP aims to be a complete statistical package for both Bayesian and Frequentist statistical methods, that is easy to use and familiar to users of SPSS https://jasp-stats.org User Guide JASP User Guide Development Guide to Building JASP The JASP Guide for Implementing Analyses in R Guide to Adding Analyses JASP Licensing The JASP Error List The JASP Guide to Writing Analyses for Humans The JASP R style guide Guide to Rebasing Your Repo The JASP R Package List Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jasp-stats/jasp-desktop"	"A complete package for both Bayesian and Frequentist methods, that is familiar to users of SPSS."	"true"
"Integrated Development Environments"	"Bio7"	"http://www.bio7.org/"	"A IDE contains tools for model creation, scientific image analysis and statistical analysis for ecological modelling."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Menu Skip to content Home Bio7 FAQ Download Documents Screenshots Tutorials Links Forum Impressum New R Editor Features in Bio7 Leave a reply 12.07.2016 Bio7 2.4 has been released for Windows, MacOSX and Linux and this release comes with a plethora of new R editor features. The editor now supports the dynamic code analysis of R scripts, refactoring methods, improved code completions, more key shortcuts for a faster editing and improved quick fixes which now can be opened and applied directly where the warnings or errors occur. The video below gives an overview of some new and noteworthy functions: This entry was posted in R on July 12, 2016 by admin. Bio7 2.4 for Linux Released Leave a reply 04.07.2016 A new Bio7 Linux release is available at http://bio7.org. The general release note for Bio7 2.4 can be found here! Installation: Bio7 for Linux comes bundled with the latest Java Runtime Environment. To use R with Bio7 you have to install R for Linux. In addition you have to install Rserve configured to use ‘cooperative mode’ (shared workspace in Rserve and R mode) which can be downloaded here: https://bitbucket.org/maustenfeld/bio7-new/downloads In the R prompt type the following command to install the compiled package (replace with your file path!): install.packages(“Users/yourName/Downloads/Rserve_1.8-4_Linux_cooperative.tar.gz”, repos=NULL) You can also compile Rserve by yourself. For an HowTo please consult the Bio7 documentation here. Miscellaneous: Added a tiny script to install useful default R packages for Bio7 to use all available GUI functionalities (e.g. rmarkdown, rgdal, spatstat, formatR, knitr, etc.). To install the packages start Rserve and execute the action Scripts->RScripts->Install_R_Packages in the Bio7 main menu. Please note that this only works if all dependencies for the packages are installed for compilation. Troubleshooting Layout: Linux comes in different flavours and it might be that you have to correct the Bio7 GTK *.css file for a little improved layout. If you see an artefact like this (‘Maximize’ button) just increase the size of the *.css toolbar variables. The default CSS file can be found here: /Bio7/plugins/com.eco.bio7.themes_2.0.0.201607050754/css/e4_default_gtk.css The following changed css attributes will correct the height of the toolbars (changed attributes are bold): .MPartStack { …………………………………… color: ‘#org-eclipse-ui-workbench-INACTIVE_TAB_TEXT_COLOR’;  swt-tab-height: 36.0px; } .MPartStack.active { ………………………………….. swt-shadow-visible: false;  swt-tab-height: 36.0px; } /*Important to set height for the view menus!*/ CTabFolder { swt-corner-radius: 15.0; swt-tab-height: 36.0px; } Of course you can change other attributes as well, e.g.,  if you want to change a color, etc. If you have good suggestions let me know. Screenshots: This entry was posted in R on July 5, 2016 by admin. Bio7 2.4 for Windows and Mac Released 2 Replies A new release of Bio7 is available for Windows and MacOSX. The Linux version will be released soon, too. This release comes with a plethora of new functions, especially for the R editor. Download at: http://bio7.org Release notes: General Updated Bio7 to use Eclipse 4.6 (Neon) as RCP basis Updated the embedded Java Runtime Environment to version 1.8.92 Updated embedded R for Windows to R 3.3.1 Improved the toolbar layout and action alignments (CSS can be edited!) Added a new ImageJ R analysis perspective Added a new R debug perspective Added a new and easy to use text preference field to execute Groovy script commands at startup (beside any scripts in the startup folder!) to open, e.g., a custom perspective, or startup R  if enabled. The Quadgrid, Linechart, Piechart and the Points view are now embedded in a Swt JavaFX panel and can be fullscreened (F1, F2, F3, F4, F5 – F1 key is Windows only!) Added a terminate (Java controlled) and kill R process (OS controlled) action to the main toolbar of Bio7. At R/Rserve startup a new check for a running R instance is executed with an option to kill all running R instances (to avoid a wrong connection to a running instance from an crashed Bio7 R session). Added  many new Bio7 R command key shortcuts Added an install R packages script to install some useful default R packages for Bio7 R editor: The R editor has been transferred to it’s own Github repository and can be updated as a plugin Improved and formatted the display of the error messages Improved massively the speed for parsing and marker creation Added many new R editor key shortcuts to speed up editing Added an action to the context menu to open the plot preferences Added an action to the context menu to open the font preferences Added a RServe formatR action to the context menu Added a Profile script action for the profvis package to the context menu Added a Profile script selection action for the profvis package to the context menu Added a color dialog to the context menu. A selected R,G,B color will be displayed and set in the editor Added an “Reload Package Completion” action to the context menu to load completion help for loaded packages (decrease warnings by known methods, increase available code completion templates – The same action is available in the R-Shell view evaluation textfield). The Load/Remove packages(s) dialog has a new action to transfer available selected package names to the R editor (as ‘library(package)’) Now warnings and errors are displayed more consistently. If a quick fix is available it will be indicated with a warning/error quick fix icon instead of a default warning/error icon Added new quick fixes to the R editor Quick fixes and warning messages can now be displayed and fixed by hoovering over the underlined editor marker Added the automatic close of {braces}, (parentheses), [brackets], “strings” and ‘strings’. It can be disabled in the preferences Improved the speed of the ‘Mark selected word’ action (scope independant) which can be enabled in the preferences R editor refactoring Added an ‘Extract Method’ action which parses and extract a method from a selected text if valid Added an ‘Extract Variable’ action which parses and extracts a variable from a selected text if valid Added a ‘Create new File from Clipboard’ action which parses and creates a new file from the clipboard text if valid in the project folder and opens the R file for editing Added an ‘Extract Editor Selection to File’ action which parses and creates a new file from a selection if valid in the project folder and opens the R file for editing R editor code analysis: Added an analysis function to detect Unused Functions Added an analysis function to detect if a function is available Added an analysis function to detect if a variable is used Added an analysis function to detect if a variable is available Added an analysis function to check for wrong constants (na, true, false, null) Added an analysis function to check for functions if a function (or variable) with that name is already defined Added an analysis function to check for variables if a variable (or function) with that name is already defined Added an analysis function to check if a function call argument is missing Added an analysis function to check if a function call has to many arguments Added an analysis function to check if the name of a variable assignment in a function call is wrong Added an analysis function to check a function call with parameter on a parameterless function Added an analysis function to check variables in function calls and square brackets Added options in the preferences to enable/disable the code analysis functions R Outline View Added the display of loop variables to the outline view Added the display of function call variable assignments to the outline view Added the display of S3,S4, References and R6 classes to the outline view (S3 classes are only detected with class(x), References classes and R6 classes functions are not displayed nested!) R editor code completion The sorting of the code completion dialog has been improved The code completion dialog now displays local defined variables and methods available in the current scope Added a new function in the code completion popup dialog to open the template preferences faster If the code completion is opened in a method call the arguments of the function will be displayed in a new table dialog. However if an function or variable is started within the method call the regular code completion is shown (for nested functions or variables call) Added two actions in the hoover help dialog to open the help browser (?) or search in the Rdocumentation website The code completion dialog can now be configured in the preferences to open automatically on key typing  (number of typed chars and chars can be configured, too). R-Shell view The R text is now validated with the Bio7 default R code parser Added an error marker to the textfield if a parsing error occurs Added code completions to the evaluate expression textfield (Ctrl+Space). Code completion is only available in nested calls after open parentheses A help file browser can now be opened from selected text (e.g., nested function). Native connection commands can now be executed in the evaluate expression textfield R Markdown Now JavaScript is enabled for the HTML-Browser by default Added a new option to scale the JavaFX browser content if enabled  (handy for R markdown presentations). The JavaFX  browser can be fullscreened (F1,F2,F3 – secondary monitor…..) Table view Improved massively the speed of the close operation of a table sheet Improved the CSV importer with more options to import data with a dynamic preview The CSV importer now accepts clipboard data if selected The preview table is now updated dynamically if changes occur ImageJ Updated ImageJ to version 1.51d Added a subset of ImageJ2 libraries in a new ImageJ2 Eclipse plugin Improved the ROI image pixel data transfer methods. Now selected ROI’s pixels are transferred. If no selection is available all ROI‘s will be transferred! The ROI transfer methods now also accept points and lines (please note that line pixels are interpolated in the ImageJ results table by default) The Bio7 ImageJ plugin can now be updated or installed individually ImageJ panels can now be opened in a JavaFX panel embedded in SWT (experimental) if enabled in the preferences Other Updated all Java libraries Update the JavaFX SceneBuilder to version 2.2 The JavaFX SceneBuilder controller class created variables and methods are now ‘public’ by default. Added support for LibreOffice 5. Now the Bio7 LibreOffice functions work again with LibreOffice 5. Eclipse Neon features Toogle fullscreen available (Alt+F11) Toggle toolbar visibility (You have to define the key in the key preferences) Autosave is available for all editors (enable in the preferences) Word wrap is available for all editors (Alt+Shift+Y) New Eclipse Neon Java features New Eclipse Neon Platform features Installation: Windows: Just download the *.zip distribution file from http://bio7.org and unzip it in your preferred location. Bio7 comes bundled with the latest Java Runtime Environment, R and Rserve distribution and works out of the box. MacOSX: Just download and execute the *.dmg installation file from http://bio7.org. To use R and Rserve you have to install R for MacOSX. In addition you have to install Rserve configured to use ‘cooperative mode’ (shared workspace in Rserve and R mode) which can be downloaded here: https://bitbucket.org/maustenfeld/bio7-new/downloads In the R prompt type the following command to install the compiled package (replace with your file path!): install.packages(“Users/yourName/Downloads/Rserve_1.8-4_Mac_cooperative.tgz”, repos=NULL) You can also compile Rserve by yourself. For an HowTo please consult the Bio7 documentation here. Miscellaneous: Added a tiny script to install useful default R packages for Bio7 to use all available GUI functionalities (e.g. rmarkdown, rgdal, spatstat, formatR, knitr, etc.). To install the scripts start Rserve and execute the action Scripts->RScripts->Install_R_Packages. The script will install the R packages. For MacOSX it could be that you have to select a mirror in the Bio7 Console (shell). Type in a number (1- …) and press return to start the installation if no shell message is displayed. The R installation script can be edited in /plugins/com.eco.bio7_2.4.0/r_scripts. Suggestions for improvements are welcome.     This entry was posted in R on July 1, 2016 by admin. R editor improvements for the next release of Bio7 Leave a reply 20.04.2016 For the upcoming release of Bio7 I worked hard to improve the R editor features. So I added some new features and improvements to assist in the creation of R scripts in Bio7. One of the highlights is the newly integrated dynamic code analysis when writing an R script. Here a short overview of some new R editor features I integrated so far: Detect and display unused variables and functions Detect missing functions and variables Added a new code assist list when triggered in function calls Check of function arguments Check of wrong function argument Available help for mistyped functions (% similarity) Improved Code Completion in general Added a toolbar with two HTML help actions to the context help dialog (if you hover over a method) Improved Code Completion to list local scope self defined variables and functions Added  an refactor action to extract variables Added an refactor action to extract functions Added more Quickfixes Quickfixes can now be opened by hovering over a problem or error marker Added an automatic close action of parentheses, brackets, braces and strings in the editor Improved the general parsing speed Added new key shortcuts to faster perform R editor actions New action and key shortcut to open the plot preferences faster Added new on/off preferences for the new features Improved the display of the Outline view for variables and functions There is of course some room for improvements and there are some rough edges in the implementation of the dynamic code analysis since the R language is a highly dynamic language. However I hope that this features will be a help in the creation of correct R scripts in the R editor of the next Bio7 release. This entry was posted in R on April 20, 2016 by admin. Another Useful Eclipse Plugin Leave a reply 13.04.2016 I recently discovered another useful plugin for Bio7 which offers a nice outline view for all opened editors: https://github.com/jeeeyul/pde-tools#crazy-outline Here a screenshot: To install it just open the update manager and add the site: http://jeeeyul.github.io/update/ This entry was posted in Uncategorized on April 14, 2016 by admin. Post navigation ← Older posts Recent Posts New R Editor Features in Bio7 Bio7 2.4 for Linux Released Bio7 2.4 for Windows and Mac Released R editor improvements for the next release of Bio7 Another Useful Eclipse Plugin Ecological Modeling Dispersal distance determines the exponent of the spatial Taylor’s power law July 14, 2016 Evaluating long-term monitoring of temperate reef fishes: A simulation testing framework to compare methods July 14, 2016 Modelling the community size-spectrum: recent developments and new directions July 14, 2016 Proudly powered by WordPress"	"null"	"null"	"A IDE contains tools for model creation, scientific image analysis and statistical analysis for ecological modelling."	"true"
"Integrated Development Environments"	"RTVS"	"http://microsoft.github.io/RTVS-docs/"	"R Tools for Visual Studio."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"· R Tools for Visual Studio        R Tools for Visual Studio Documentation and examples for R Tools for Visual Studio Home Download Docs GitHub Code GitHub Report issues © 2016 Microsoft. All rights reserved. Welcome to R Tools for Visual Studio Preview! About this release THANK YOU for trying out this third preview release of R Tools for Visual Studio (RTVS)! We welcome your feedback and comments; we’re actively monitoring our Github issue tracker and triage new incoming issues every Friday. Of course, we remind you that this release is meant for evaluation purposes only and not for production use. If you already have VS2015 with Update 2 (or higher) installed and R installed, you can download RTVS from the link below - but we highly recommend following the Installation guide: Download R Tools for Visual Studio Key features in Version 0.4 For an overview of what is new in 0.4, please see our What’s New in 0.4 page. If you want to see what we added in 0.3, please see our What’s New in 0.3 page. Existing and Improved Features Variable Explorer - we now support multiple Data Table Viewer windows, and sorting. We also support viewing variables in different scopes, as well as searching within Variable Explorer. Editor - we added support for light bulbs in the editor window, and now support go-to-definition and peek for library functions in addition to user-defined functions. Collapsible code regions are also available now. History window - we have added support for generating PDFs from RMarkdown documents as well as IntelliSense within RMarkdown code blocks. Help - you can now search for help online by placing your cursor on top of a token in the editor and pressing F1. Plotting - plot windows respect global DPI settings, and the locator API. R Interactive Window - work with the R console directly from within Visual Studio IntelliSense - (aka Completion) available in both the editor and the Interactive R window Debugging - breakpoints, stepping, watch windows, call stacks and more! R Markdown - R Markdown/knitter support with export to Word and HTML Git - Source code control via Git and Github Extensions - over 6,000 Extensions from Data to Languages to Productivity Polyglot IDE - VS supports R, Python, C++, C#, Node.js, SQL projects simultaneously Video feature walk-throughs Here’s the video for 0.4: Here’s the video for 0.3: Installation and first steps The pre-requisites for RTVS are: Visual Studio 2015 Community, Professional or Enterprise Visual Studio 2015 Update 2 An R interpreter: CRAN-R or Microsoft R Open Please check out the installation steps, especially if you are new to Visual Studio RTVS Installation Once installed, create a project and code away! How to start a new project in RTVS Feedback, bugs, etc. Please file bugs and feature requests directly on: RTVS on Github To send us bug repros (which are highly appreciated) try the built in Smile/Frown feature: Go to: R Tools / Send a frown (or smile) This will collect logs, start your mail client and attach the log file. You can then examine the contents and click Send. The logs are zipped into %TEMP%/RTVSlogs.zip in case you want to send it yourself. Finally you can send direct feedback to the team at rtvsuserfeedback@microsoft.com. FAQ Q. Should I use RTVS in production? A. No. This is a public preview. As such, there are bugs and missing features which will be addressed in the next few months. This release is only recommended for evaluation purposes and usage in production is strongly advised against. Q. Is RTVS going to be free? A. Yes! RTVS when combined with free Visual Studio Community Edition is a complete and perpetually free IDE. Please make sure that you read the software license terms to see if you qualify for using the free edition of Visual Studio Community Edition. Q. Is RTVS Open Source? A. Yes! The source code for RTVS is available on Github and is released under the terms of the MIT license. There is a second component of RTVS, called RHost, which links to the R Interpreter binaries. Its source code is also available on Github and is released under the terms of the GNU Public License V2. Q. What versions of Visual Studio does RTVS run on? A. Visual Studio 2015 Update 2 and higher. Community, Pro, and Enterprise Editions. Q. Does RTVS work with Visual Studio Express editions? A. No. Q. What R interpreters does RTVS work with? A. CRAN R, Microsoft R Client, and Microsoft R Server. Q. Where can I download these interpreters? A. See the installation instructions. Q. Since RTVS is in VS, does it mean that R can be easily used with C#, C++ and other Microsoft languages? A. No. RTVS is a tool for developing R code, and uses the standard native R interpreters. We do not have any support currently for interop between R and other languages. Q. Feature X is missing, but RStudio has it! A. RStudio is a fantastic and mature IDE for R that’s been under development for years. RTVS is a long way from RStudio, because we’ve only been developing it since July, 2015. We hope to have all the critical features that you need to be successful this summer. Please help us prioritize the TODO list by taking the RTVS survey. Q. Will RTVS work on MacOS / Linux? A. No. RTVS is built on top of Visual Studio, which is a Windows-only implementation. However, we are looking at porting RTVS to run on top of Visual Studio Code, which is the new cross-platform IDE from Microsoft. Q. Can I contribute to RTVS? A. Absolutely! The source code lives on Github. Please use our issue tracker to submit / vote / comment on bugs! Q. Does RTVS work with my source control system? A. Yes, you can use any source control system that is integrated into Visual Studio. e.g., TFS, git, SVN, hg etc. Q. I don’t use a US English locale in Windows or in VS. Will RTVS work? A. It should. However, we haven’t done extensive testing in non-US English locales. For the best experience with the Preview bits, please set your local to English in Visual Studio. You can do so through Tools / Options dialog box, setting International Settings Language to English. If English is not available in the drop-down, you’ll need to install the Visual Studio Language pack. Q. Will RTVS work with 32-bit editions of R? A. No. RTVS only supports 64-bit editions of R. Q. What are the key missing features of RTVS currently? A. There a number of these. For example: Refactoring in the Editor Rendering Shiny apps or ggviz plots in a VS window. We currently render using the default browser Running your R session on another computer R scripts in SQL Server Integration We’ll be addressing these in the near future. Q. I really like my current Visual Studio settings, but I want to try out the new Data Science settings. What should I do? A. You can always save your current Visual Studio settings through Tools -> Import and Export Settings… command. You can also use this command to restore one of the default Visual Studio settings (e.g., C++ or General). Q. What is the recommended .gitignore settings for an RTVS project? A. Github maintains a master repository of recommended .gitignore files. You can see it here: R .gitignore Q. Can I store my Visual Studio project on a network share? A. No. This is not a supported scenario for Visual Studio. Feedback We’re looking for your feedback! Please use the R Tools / Feedback menu to send us smiles and frowns! Contributing If you’re interested in contributing to the docs or samples, feel free to clone the repository and submit a pull request. More instructions can be found in our contribution guide."	"null"	"null"	"R Tools for Visual Studio."	"true"
"Syntax"	"magrittr"	"https://github.com/smbache/magrittr"	"Let's pipe it."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"391"	"46"	"57"	"GitHub - smbache/magrittr: R package to bring forward-piping features ala F#'s |> operator. Ceci n'est pas un pipe. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 46 Star 391 Fork 57 smbache/magrittr Code Issues 16 Pull requests 13 Pulse Graphs R package to bring forward-piping features ala F#'s |> operator. Ceci n'est pas un pipe. http://cran.r-project.org/web/packages/magrittr/index.html 156 commits 9 branches 1 release 16 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bruyere dev lambda master minor nesting partialize simplified tee Nothing to show v.1.5 Nothing to show New pull request Latest commit 00a1fe3 Sep 12, 2015 smbache Added small note to readme Permalink Failed to load latest commit information. R Simplified `freduce` and added `set_class` Sep 12, 2015 inst Add (non-hex) logo, put logos in inst/, closes #96 Aug 12, 2015 man Simplified `freduce` and added `set_class` Sep 12, 2015 tests Updated docs, vignette, and removed naming option in lambdas. Readme … Nov 20, 2014 vignettes Minor grammatical edits Nov 23, 2014 .Rbuildignore Add (non-hex) logo, put logos in inst/, closes #96 Aug 13, 2015 .gitignore Modification to vignette structure (and title) Feb 24, 2014 .travis.yml travis fix ? Nov 10, 2014 DESCRIPTION URL in description file May 30, 2015 LICENSE Change to title, etc Feb 25, 2014 NAMESPACE Simplified `freduce` and added `set_class` Sep 12, 2015 NEWS.md CRAN Comments, NEWS, etc. Nov 22, 2014 README.md Added small note to readme Sep 12, 2015 cran-comments.md Trying once again to please CRAN Nov 22, 2014 magrittr.Rproj spaces for tabs Aug 25, 2014 README.md magrittr - Ceci n'est pas un pipe. Introduction The magrittr package offers a set of operators which promote semantics that will improve your code by structuring sequences of data operations left-to-right (as opposed to from the inside and out), avoiding nested function calls, minimizing the need for local variables and function definitions, and making it easy to add steps anywhere in the sequence of operations. The operators pipe their left-hand side values forward into expressions that appear on the right-hand side, i.e. one can replace f(x) with x %>% f, where %>% is the (main) pipe-operator. When coupling several function calls with the pipe-operator, the benefit will become more apparent. Consider this pseudo example the_data <-   read.csv('/path/to/data/file.csv') %>%   subset(variable_a > x) %>%   transform(variable_c = variable_a/variable_b) %>%   head(100)  Four operations are performed to arrive at the desired data set, and they are written in a natural order: the same as the order of execution. Also, no temporary variables are needed. If yet another operation is required, it is straight-forward to add to the sequence of operations wherever it may be needed. Installation To install the current development version use devtools: devtools::install_github(""smbache/magrittr"")  To install the CRAN version: install.packages(""magrittr"")  Features Basic piping: x %>% f is equivalent to f(x) x %>% f(y) is equivalent to f(x, y) x %>% f %>% g %>% h is equivalent to h(g(f(x))) Here, ""equivalent"" is not technically exact: evaluation is non-standard, and the left-hand side is evaluated before passed on to the right-hand side expression. However, in most cases this has no practical implication. The argument placeholder x %>% f(y, .) is equivalent to f(y, x) x %>% f(y, z = .) is equivalent to f(y, z = x) Re-using the placeholder for attributes It is straight-forward to use the placeholder several times in a right-hand side expression. However, when the placeholder only appears in a nested expressions magrittr will still apply the first-argument rule. The reason is that in most cases this results more clean code. x %>% f(y = nrow(.), z = ncol(.)) is equivalent to f(x, y = nrow(x), z = ncol(x)) The behavior can be overruled by enclosing the right-hand side in braces: x %>% {f(y = nrow(.), z = ncol(.))} is equivalent to f(y = nrow(x), z = ncol(x)) More advanced right-hand sides and lambdas To define a unary function on the fly in the pipeline, enclose the body of such function in braces, and refer to the argument as ., e.g. iris %>%    {     n <- sample(1:10, size = 1)     H <- head(., n)     T <- tail(., n)     rbind(H, T)   } %>%   summary  Building (unary) functions Any pipeline starting with the . will return a function which can later be used to apply the pipeline to values. Building functions in magrittr is therefore similar to building other values. f <- . %>% cos %>% sin  # is equivalent to  f <- function(.) sin(cos(.))   Tee operations Some right-hand sides are used for their side effect (e.g. plotting, printing to a file, etc) and it may be convenient to be able to subsequently continue the pipeline. The ""tee"" operator, %T>% can be used for this purpose and works exactly like %>%, except it returns the left-hand side value, rather than the potential result of the right-hand side operation: rnorm(200) %>% matrix(ncol = 2) %T>% plot %>% # plot usually does not return anything. colSums  Pipe with exposition of variables Many functions accept a data argument, e.g. lm and aggregate, which is very useful in a pipeline where data is first processed and then passed into such a function. There are also functions that do not have a data argument, for which it is useful to expose the variables in the data. This is done with the %$% operator: iris %>%   subset(Sepal.Length > mean(Sepal.Length)) %$%   cor(Sepal.Length, Sepal.Width)  data.frame(z = rnorm(100)) %$%   ts.plot(z)  Compound assignment pipe operations There is also a pipe operator which can be used as shorthand notation in situations where the left-hand side is being ""overwritten"": iris$Sepal.Length <-    iris$Sepal.Length %>%   sqrt  To avoid the repetition of the left-hand side immediately after the assignment operator, use the %<>% operator: iris$Sepal.Length %<>% sqrt   This operator works exactly like %>%, except the pipeline assigns the result rather than returning it. It must be the first pipe operator in a longer chain. Further information For more detail, see the package vignette vignette(""magrittr"")  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/smbache/magrittr"	"Let's pipe it."	"true"
"Syntax"	"pipeR"	"https://github.com/renkun-ken/pipeR"	"Multi-paradigm Pipeline Implementation."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"103"	"23"	"26"	"GitHub - renkun-ken/pipeR: Multi-Paradigm Pipeline Implementation Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 23 Star 103 Fork 26 renkun-ken/pipeR Code Issues 1 Pull requests 0 Pulse Graphs Multi-Paradigm Pipeline Implementation https://renkun.me/pipeR 334 commits 2 branches 6 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v0.6 v0.5 v0.4 v0.3 v0.2 v0.1 Nothing to show New pull request Latest commit 69348ed Apr 4, 2016 renkun-ken fix url for CRAN policy Permalink Failed to load latest commit information. R refine Pipe mechanism by using attributes Dec 17, 2015 inst ignore inst/doc Jun 16, 2014 man upgrade roxygen2 Oct 30, 2015 tests refine test cases for latest release of testthat Apr 2, 2016 .Rbuildignore add windows build status Jul 24, 2015 .gitignore update ignore Oct 29, 2014 .travis.yml use codecov.io Sep 9, 2015 DESCRIPTION refine for CRAN Apr 4, 2016 LICENSE license adapt to CRAN format May 31, 2014 NAMESPACE upgrade roxygen2 Oct 30, 2015 NEWS bump to 0.6 Jan 23, 2015 README.Rmd fix url for CRAN policy Apr 4, 2016 README.ja.Rmd fix url for CRAN policy Apr 4, 2016 README.ja.md fix url for CRAN policy Apr 4, 2016 README.md fix url for CRAN policy Apr 4, 2016 appveyor.yml add windows build status Jul 24, 2015 pipeR.Rproj update project settings Jul 8, 2015 README.md pipeR pipeR provides various styles of function chaining methods: Pipe operator Pipe object pipeline function Each of them represents a distinct pipeline model but they share almost a common set of features. A value can be piped to the next expression As the first unnamed argument of the function As dot symbol (.) in the expression As a named variable defined by a formula For side-effect that carries over the input to the next For assignment that saves an intermediate value The syntax is designed to make the pipeline more readable and friendly to a wide variety of operations. pipeR Tutorial is a highly recommended complete guide to pipeR. This document is also translated into 日本語 (by @hoxo_m). Installation Install the latest development version from GitHub: devtools::install_github(""renkun-ken/pipeR"") Install from CRAN: install.packages(""pipeR"") Getting started The following code is an example written in traditional approach: It basically performs bootstrap on mpg values in built-in dataset mtcars and plots its density function estimated by Gaussian kernel. plot(density(sample(mtcars$mpg, size = 10000, replace = TRUE),    kernel = ""gaussian""), col = ""red"", main=""density of mpg (bootstrap)"") The code is deeply nested and can be hard to read and maintain. In the following examples, the traditional code is rewritten by Pipe operator, Pipe() function and pipeline() function, respectively. Operator-based pipeline mtcars$mpg %>>%   sample(size = 10000, replace = TRUE) %>>%   density(kernel = ""gaussian"") %>>%   plot(col = ""red"", main = ""density of mpg (bootstrap)"") Object-based pipeline (Pipe()) Pipe(mtcars$mpg)$   sample(size = 10000, replace = TRUE)$   density(kernel = ""gaussian"")$   plot(col = ""red"", main = ""density of mpg (bootstrap)"") Argument-based pipeline pipeline(mtcars$mpg,   sample(size = 10000, replace = TRUE),   density(kernel = ""gaussian""),   plot(col = ""red"", main = ""density of mpg (bootstrap)"")) Expression-based pipeline pipeline({   mtcars$mpg   sample(size = 10000, replace = TRUE)   density(kernel = ""gaussian"")   plot(col = ""red"", main = ""density of mpg (bootstrap)"")   }) Usage %>>% Pipe operator %>>% basically pipes the left-hand side value forward to the right-hand side expression which is evaluated according to its syntax. Pipe to first-argument of function Many R functions are pipe-friendly: they take some data by the first argument and transform it in a certain way. This arrangement allows operations to be streamlined by pipes, that is, one data source can be put to the first argument of a function, get transformed, and put to the first argument of the next function. In this way, a chain of commands are connected, and it is called a pipeline. On the right-hand side of %>>%, whenever a function name or call is supplied, the left-hand side value will always be put to the first unnamed argument to that function. rnorm(100) %>>%   plot rnorm(100) %>>%   plot(col=""red"") Sometimes the value on the left is needed at multiple places. One can use . to represent it anywhere in the function call. rnorm(100) %>>%   plot(col=""red"", main=length(.)) There are situations where one calls a function in a namespace with ::. In this case, the call must end up with (). rnorm(100) %>>%   stats::median()  rnorm(100) %>>%   graphics::plot(col = ""red"") Pipe to . in an expression Not all functions are pipe-friendly in every case: You may find some functions do not take your data produced by a pipeline as the first argument. In this case, you can enclose your expression by {} or () so that %>>% will use . to represent the value on the left. mtcars %>>%   { lm(mpg ~ cyl + wt, data = .) } mtcars %>>%   ( lm(mpg ~ cyl + wt, data = .) ) Pipe by formula as lambda expression Sometimes, it may look confusing to use . to represent the value being piped. For example, mtcars %>>%   (lm(mpg ~ ., data = .)) Although it works perfectly, it may look ambiguous if . has several meanings in one line of code. %>>% accepts lambda expression to direct its piping behavior. Lambda expression is characterized by a formula enclosed within (), for example, (x ~ f(x)). It contains a user-defined symbol to represent the value being piped and the expression to be evaluated. mtcars %>>%   (df ~ lm(mpg ~ ., data = df)) mtcars %>>%   subset(select = c(mpg, wt, cyl)) %>>%   (x ~ plot(mpg ~ ., data = x)) Pipe for side effect In a pipeline, one may be interested not only in the final outcome but sometimes also in intermediate results. To print, plot or save the intermediate results, it must be a side-effect to avoid breaking the mainstream pipeline. For example, calling plot() to draw scatter plot returns NULL, and if one directly calls plot() in the middle of a pipeline, it would break the pipeline by changing the subsequent input to NULL. One-sided formula that starts with ~ indicates that the right-hand side expression will only be evaluated for its side-effect, its value will be ignored, and the input value will be returned instead. mtcars %>>%   subset(mpg >= quantile(mpg, 0.05) & mpg <= quantile(mpg, 0.95)) %>>%   (~ cat(""rows:"",nrow(.),""\n"")) %>>%   # cat() returns NULL   summary mtcars %>>%   subset(mpg >= quantile(mpg, 0.05) & mpg <= quantile(mpg, 0.95)) %>>%   (~ plot(mpg ~ wt, data = .)) %>>%    # plot() returns NULL   (lm(mpg ~ wt, data = .)) %>>%   summary() With ~, side-effect operations can be easily distinguished from mainstream pipeline. An easier way to print the intermediate value it to use (? expr) syntax like asking question. mtcars %>>%    (? ncol(.)) %>>%   summary Pipe with assignment In addition to printing and plotting, one may need to save an intermediate value to the environment by assigning the value to a variable (symbol). If one needs to assign the value to a symbol, just insert a step like (~ symbol), then the input value of that step will be assigned to symbol in the current environment. mtcars %>>%   (lm(formula = mpg ~ wt + cyl, data = .)) %>>%   (~ lm_mtcars) %>>%   summary If the input value is not directly to be saved but after some transformation, then one can use =, <-, or more natural -> to specify a lambda expression to tell what to be saved (thanks @yanlinlin82 for suggestion). mtcars %>>%   (~ summ = summary(.)) %>>%  # side-effect assignment   (lm(formula = mpg ~ wt + cyl, data = .)) %>>%   (~ lm_mtcars) %>>%   summary mtcars %>>%   (~ summary(.) -> summ) %>>%  mtcars %>>%   (~ summ <- summary(.)) %>>% An easier way to saving intermediate value that is to be further piped is to use (symbol = expression) syntax: mtcars %>>%   (~ summ = summary(.)) %>>%  # side-effect assignment   (lm_mtcars = lm(formula = mpg ~ wt + cyl, data = .)) %>>%  # continue piping   summary or (expression -> symbol) syntax: mtcars %>>%   (~ summary(.) -> summ) %>>%  # side-effect assignment   (lm(formula = mpg ~ wt + cyl, data = .) -> lm_mtcars) %>>%  # continue piping   summary Extract element from an object x %>>% (y) means extracting the element named y from object x where y must be a valid symbol name and x can be a vector, list, environment or anything else for which [[]] is defined, or S4 object. mtcars %>>%   (lm(mpg ~ wt + cyl, data = .)) %>>%   (~ lm_mtcars) %>>%   summary %>>%   (r.squared) Compatibility Working with dplyr: library(dplyr) mtcars %>>%   filter(mpg <= mean(mpg)) %>>%     select(mpg, wt, cyl) %>>%   (~ plot(.)) %>>%   (model = lm(mpg ~ wt + cyl, data = .)) %>>%   (summ = summary(.)) %>>%   (coefficients) Working with ggvis: library(ggvis) mtcars %>>%   ggvis(~mpg, ~wt) %>>%   layer_points() Working with rlist: library(rlist) 1:100 %>>%   list.group(. %% 3) %>>%   list.mapv(g ~ mean(g)) Pipe() Pipe() creates a Pipe object that supports light-weight chaining without any external operator. Typically, start with Pipe() and end with $value or [] to extract the final value of the Pipe. Pipe object provides an internal function .(...) that work exactly in the same way with x %>>% (...), and it has more features than %>>%. NOTE: .() does not support assignment with = but supports ~, <- and ->. Piping Pipe(rnorm(1000))$   density(kernel = ""cosine"")$   plot(col = ""blue"") Pipe(mtcars)$   .(mpg)$   summary() Pipe(mtcars)$   .(~ summary(.) -> summ)$   lm(formula = mpg ~ wt + cyl)$   summary()$   .(coefficients) Subsetting and extracting pmtcars <- Pipe(mtcars) pmtcars[c(""mpg"",""wt"")]$   lm(formula = mpg ~ wt)$   summary() pmtcars[[""mpg""]]$mean() Assigning values plist <- Pipe(list(a=1,b=2)) plist$a <- 0 plist$b <- NULL Side effect Pipe(mtcars)$   .(? ncol(.))$   .(~ plot(mpg ~ ., data = .))$    # side effect: plot   lm(formula = mpg ~ .)$   .(~ lm_mtcars)$                  # side effect: assign   summary()$ Compatibility Working with dplyr: Pipe(mtcars)$   filter(mpg >= mean(mpg))$   select(mpg, wt, cyl)$   lm(formula = mpg ~ wt + cyl)$   summary()$   .(coefficients)$   value Working with ggvis: Pipe(mtcars)$   ggvis(~ mpg, ~ wt)$   layer_points() Working with rlist: Pipe(1:100)$   list.group(. %% 3)$   list.mapv(g ~ mean(g))$   value pipeline() pipeline() provides argument-based and expression-based pipeline evaluation mechanisms. Its behavior depends on how its arguments are supplied. If only the first argument is supplied, it expects an expression enclosed in {} in which each line represents a pipeline step. If, instead, multiple arguments are supplied, it regards each argument as a pipeline step. For all pipeline steps, the expressions will be transformed to be connected by %>>% so that they behave exactly the same. One notable difference is that in pipeline()'s argument or expression, the special symbols to perform specially defined pipeline tasks (e.g. side-effect) does not need to be enclosed within () because no operator priority issues arise as they do in using %>>%. pipeline({   mtcars   lm(formula = mpg ~ cyl + wt)   ~ lmodel   summary   ? .$r.squared   coef }) Thanks @hoxo_m for the idea presented in this post. License This package is under MIT License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/renkun-ken/pipeR"	"Multi-paradigm Pipeline Implementation."	"true"
"Syntax"	"lambda.r"	"https://github.com/zatonovo/lambda.r"	"Functional programming and simple pattern matching in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"83"	"16"	"7"	"GitHub - zatonovo/lambda.r: Functional programming in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 16 Star 83 Fork 7 zatonovo/lambda.r Code Issues 9 Pull requests 0 Pulse Graphs Functional programming in R 94 commits 9 branches 10 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags R3/compat/v1.1.0 R3/compat/v1.1.1 b1.1.2 b1.1.4 b1.1.7 master v1.0.0/compat/R3.0.0 v1.1.0 v1.1.1 Nothing to show v1.1.9 v1.1.8 v1.1.6 v1.1.5 v1.1.4 v1.1.0 tag_1.1.3 tag_1.1.2 tag_1.1.1 R3v1.1.0 Nothing to show New pull request Latest commit 3d3cec0 Jul 10, 2016 Brian Lee Yung Rowe Bump version to 1.1.9 Permalink Failed to load latest commit information. R Fix setting multiple attributes May 10, 2016 inst/unitTests Fix setting multiple attributes May 10, 2016 man Bump version to 1.1.9 Jul 10, 2016 tests Cleaned up test directories Oct 8, 2013 .Rbuildignore Added more type constraint forms Oct 9, 2013 .gitignore Package maintenance Oct 8, 2013 .travis.yml Use Travis-supported R build env Jul 10, 2016 DESCRIPTION Bump version to 1.1.9 Jul 10, 2016 NAMESPACE Add import from Jul 10, 2016 README.md Clean up some syntax Mar 20, 2015 README.md Description Provides a syntax for writing functional programs in R. Lambda.r has a clean syntax for defining multi-part functions with optional guard statements. Simple pattern matching is also supported. Types can be easily defined and instantiated using the same functional notation. Type checking is integrated and optional, giving the programmer complete flexibility over their application or package. Basic Usage Defining a function Functions are defined using %as% notation. Any block of code can be in the function definition. fib(n) %as% { fib(n-1) + fib(n-2) } Pattern matching Multi-part function definitions are easily constructed. For simple criteria, pattern matching of literals can be used directly in lambda.r. fib(0) %as% 1 fib(1) %as% 1 Strings can also be pattern matched within definitions. Guard statements Executing different function variants within a multi-part function sometimes requires more detail than simple pattern matching. For these scenarios a guard statement is used to define the condition for execution. Guards are simply an additional clause in the function definition. fib(n) %when% { n >= 0 } %as% { fib(n-1) + fib(n-2) } A function variant only executes if the guard statements all evaluate to true. As many guard statements as desired can be added in the block. Just separate them with either a new line or a semi-colon. fib(n) %when% {   is.numeric(n)   n >= 0 } %as% { fib(n-1) + fib(n-2) } Note that in the above example the type check can be handled using a type declaration, which is discussed below. For functions defined in multiple parts, each separate function variant is evaluated in the same order as they are defined. Hence a less restrictive variant that evaluates to true defined early in the chain of function definitions will take precedence over variants defined later. (If you are following along in sequence, the pattern matches for fib(0) and fib(1) will never be called since the first definition fib(n) will always evaulate to true). Types Lambda.R introduces types as an alternative to classes. Types are data structures with type information attached to it. Like classes, constructors exist for types and one type can inherit from another type. The difference is that types do not have embedded methods. In functional programming, functions are first class so there is no need to embed them within the data structure. Using types provides type safety, which means that a function variant will only execute if the types are correct. Defining a type Types are defined by defining their constructor. The return value of the constructor is automatically typed. Hence the value x will be of type Integer. Integer(x) %as% x Instantiating the type is as simple as calling the function. Check the type using the standard S3 introspection function class. The %isa% operator can also be used to test whether an object is a particular type. x <- Integer(5) x %isa% Integer Type declarations Type constraints can be added to a function. These constraints specify the type of each input argument in addition to the return type. Using this approach ensures that the arguments can only have compatible types when the function is called. The final type in the constraint is the return type, which is checked after a function is called. If the result does not have the correct return type, then the call will fail. fib(n) %::% Integer : Integer fib(0) %as% Integer(1) fib(1) %as% Integer(1) fib(n) %as% { fib(n-1) + fib(n-2) }  fib(x) The call fib(1) will fail because 1 is not of type Integer. > fib(1) Error in UseFunction(""fib"", ...) : No valid function for 'fib(1)' Properly typing the argument by calling fib(Integer(1)) will give the correct output. Note that pattern matching works even with the custom type. > fib(Integer(1)) [1] 1 attr(,""class"") [1] ""Integer"" ""numeric"" Type constraints must be declared prior to the function implementation. Once declared, the type declaration will retain scope until another type declaration with the same number of parameters is declared (see tests/types.R for an example). Legacy types There are plenty of built-in types that are supported just like custom types defined in lambda.r. Use the same syntax for these types. In the example above we can just as easily declare fib(n) %::% numeric : numeric or even fib(n) %::% Integer : numeric NOTE: For objects of type function, due to the precedence rules of the parser, you cannot specify 'function' in a type constraint. Instead use 'Function'. # Do this make.gen(n) %::% numeric : Function  # Don't do this make.gen(n) %::% numeric : function  Type Variables Type constraints are useful, but too specific of a constraint can destroy the polymorphism of a function. To preserve this while still retaining some type safety you can use a type variable. With type variables the actual type is not checked. Instead it is the relationship between types that are checked. fib(n) %::% a : a fib(0) %as% 1 fib(1) %as% 1 fib(n) %as% { fib(n-1) + fib(n-2) }  In this type constraint, both the input and output types must match. Note that the only characters valid for a type variable are the lowercase letters (i.e. a-z). If you need more than this for a single function definition, you've got other problems. The Ellipsis Type The ellipsis can be inserted in a type constraint. This has interesting properties as the ellipsis represents a set of arguments. To specify that input values should be captured by the ellipsis, use ... within the type constraint. For example, suppose you want a function that multiplies the sum of a set of numbers. The ellipsis type tells lambda.r to bind the types associated with the ellipsis type. sumprod(x, ..., na.rm=TRUE) %::% numeric : ... : logical : numeric sumprod(x, ..., na.rm=TRUE) %as% { x * sum(..., na.rm=na.rm) }  > sumprod(4, 1,2,3,4) [1] 40 Alternatively, suppose you want all the values bound to the ellipsis to be of a certain type. Then you can append ... to a concrete type. sumprod(x, ..., na.rm=TRUE) %::% numeric : numeric... : logical : numeric sumprod(x, ..., na.rm=TRUE) %as% { x * sum(..., na.rm=na.rm) }  > sumprod(4, 1,2,3,4) [1] 40 > sumprod(4, 1,2,3,4,'a') Error in UseFunction(sumprod, ""sumprod"", ...) :   No valid function for 'sumprod(4,1,2,3,4,a)' If you want to preserve polymorphism but still constrain values bound to the ellipsis to a single type, you can use a type variable. Note that the same rules for type variables apply. Hence a type variable represents a type that is not specified elsewhere. sumprod(x, ..., na.rm=TRUE) %::% a : a... : logical : a sumprod(x, ..., na.rm=TRUE) %as% { x * sum(..., na.rm=na.rm) }  > sumprod(4, 1,2,3,4) [1] 40 > sumprod(4, 1,2,3,4,'a') Error in UseFunction(sumprod, ""sumprod"", ...) :   No valid function for 'sumprod(4,1,2,3,4,a)' The Don't-Care Type Sometimes it is useful to ignore a specific type in a constraint. Since we are not inferring all types in a program, this is an acceptable action. Using the . within a type constraint tells lambda.r to not check the type for the given argument. For example in R f(x, y) %::% . : numeric : numeric, the type of x will not be checked. One Shot Here is the complete example using built-in types: fib(n) %::% numeric : numeric fib(0) %as% 1 fib(1) %as% 1 fib(n) %as% { fib(n-1) + fib(n-2) }  fib(5) seal(fib) To ignore types altogether, just omit the type declaration in the above listing and the code will evaluate the same. Here is the same example with custom types: Integer(x) %as% x  fib(n) %::% Integer : Integer fib(0) %as% Integer(1) fib(1) %as% Integer(1) fib(n) %as% { fib(n-1) + fib(n-2) }  x <- Integer(5) fib(x) The seal command in the first example prevents new statements from being added to an existing function definition. Instead new definitions reset the function. Typically you don't need this function as lambda.r will auto-replace function definitions that have the same signature. Sugar Coating All the great features of R function calls are still supported in lambda.r. In addition, lambda.r provides some parse transforms to add some extra features to make application development even faster. Object Attributes Attributes are a form of meta data that decorate an object. This information can be used to simplify type structures retaining polymorphism and compatibility with existing functions while providing the detail needed for your application. Lambda.R provides convenient syntax for interacting with attributes via the @ symbol. Temperature(x, system, units) %as% {   x@system <- system   x@units <- units   x } These attributes can then be accessed in guards and function bodies using the same syntax. freezing(x) %::% Temperature : logical freezing(x) %when% {   x@system == 'metric'   x@units == 'celsius' } %as% {   if (x < 0) { TRUE }   else { FALSE } } Note that outside of lambda.r you must use the standard attr() function to access specific attributes. Also note that attributes have not been tested with S4 objects. Optional Arguments A nice convenience in R is the ability to specify optional arguments with default values. Lambda.R preserves this feature in multipart function definitions. Functions are matched based on the order in which they are defined, and this holds true with functions with optional arguments. Temperature(x, system=""metric"", units='celsius') %as% {   x@system <- system   x@units <- units   x }  > ctemp <- Temperature(20) > ctemp [1] 20 attr(,""system"") [1] ""metric"" attr(,""units"") [1] ""celsius"" attr(,""class"") [1] ""Temperature"" ""numeric"" The Ellipsis Argument Support for the ellipsis argument is built into lambda.r. Required arguments must still be matched, while any additional arguments will be enclosed in the ellipsis. Here's an example using the plant data included in R's lm help page. regress(formula, ..., na.action='na.fail') %as% {   lm(formula, ..., na.action=na.action) }  ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14) trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69) data <- data.frame(group=gl(2,10,20,labels=c(""Ctl"",""Trt"")), weight=c(ctl, trt)) lm.D9 <- regress(weight ~ group, data=data) Care does need to be used with the ellipsis as it behaves like a greedy match, so subsequent definitions may not work as you intend when using the ellipsis argument in a function variant. Named Arguments The examples above all hint at supporting named arguments. Named arguments can be mixed and matched with positional arguments just as in legacy function definitions. lm.D9 <- regress(data=data, weight ~ group) Auto Replace and Sealing Definitions As of version 1.1.0, lambda.r can detect a duplicate function signature and update an existing definition. This means development is more efficient since you can re-source files and the existing definitions will update as you expect. This process is compatible with multi-part function definitions and type constraints. Do note that when using type constraints, only functions associated with the active type constraint can be auto replaced. The reason is that there can be two identical function signatures and lambda.r really has no way of knowing which one you mean. Hence, you have to tell lambda.r via the type constraint. For example take this simple reciprocal function. It has two three clauses and two type constraints. There is an explicit bug in the body of the second variant. Note that the signatures for variants 2 and 3 are identical and the only thing that distinguishes them are ther type constraints. reciprocal(n) %::% numeric : numeric reciprocal(0) %as% stop(""Reciprocal of 0 is undefined"") reciprocal(n) %as% { 2/n }  reciprocal(n) %::% character : numeric reciprocal(n) %as% { reciprocal(as.numeric(n)) }  To change the definition of the second function variant, you must re-declare the first type constraint. reciprocal(n) %::% numeric : numeric reciprocal(n) %as% { 1/n } Lambda.R has no way of knowing whether a function definition is complete or not. Explicitly telling lambda.r will ensure that any new function definitions will reset the function as opposed to append another definition. seal(freezing) If providing a broad interface, be careful not to seal the function. Sealing is analogous to making a variable final in Java, such that no further modifications can be made. The key difference is that attempting to add further defintions to the sealed function will overwrite the existing definition. This behavior is intended to make application and package development more iterative. Introspection A function in lambda.r has a lot of meta data attached to it. Accessing the raw data can be overwhelming, so lambda.r provides facilities to extract the useful bits. Viewing basic information about a function is accomplished by just typing out the function in the shell. This results in a dump of the type declarations and function signatures for the function. > fib <function> [[1]] fib(n) %::% Integer:Integer  fib(0) %as% ... [[2]] fib(n) %::% Integer:Integer  fib(1) %as% ... [[3]] fib(n) %::% Integer:Integer  fib(n) %as% ... Actual function bodies are not displayed to minimize clutter. Examining Functions To view a full function definition, use the 'describe' function to get the definition of a specific function variant. The numbers separating each variant is the index to use. > describe(fib,3) function(n) { Integer ( fib ( n - 1 ) + fib ( n - 2 ) ) } <environment: 0x10488ed10> Examining Types A type constructor is similar to a normal function, and the same technique works to view a type body. > describe(Integer,1) function(x) { x } <environment: 0x10494aca8> Debugging The standard debug function will not work with lambda.r functions. Instead, use the included functions debug.lr and undebug.lr. These functions will allow you to debug through a complete multipart function call. Known Limitations If you try to break lambda r, you will most likely succeed. There are things that won't work, but most use cases should work fine. Do let me know if you find something that fails, but don't break it just to break it. Below are some things that won't work. Complex mix and match of named and positional arguments lm.D9 <- regress(data=data, formula=weight ~ group, NULL) Don't do this, please. It's bad style. What's New Version 1.1.5 Support the ellipsis (...) in type constraints Support a typed ellipsis (numeric...) in type constraints Support ellipsis type variable (a...) in type constraints Support debug.lr in functions defined in packages (currently locked) Show which functions are being debugged Handle default arguments that execute a function Support more pattern matching (like empty lists) Support guards of the form f(a,b,c) %when% { sum(a,b,c) == 1 } %as% { 1 } Support guards of the form f(x) %when% { length(grep('foo',x)) > 0 } %as% { 1 } Support proper import namespace for packages Install from github using devtools: install_github('lambda.r','zatonovo') Travis CI integration: https://travis-ci.org/zatonovo/lambda.r Version 1.1.1 Support Function in every type position (only supported for return type) Auto-replacing a function with 0 arguments fails Fix type inheritance Functions that return non-scalar values work as default values on arguments Support pattern matching on NULL and NA Support pattern matching on special symbol EMPTY Version 1.1.0 Handle function types in type declarations Support type variables Auto-replace function definitions with a matching signature (no need for seal) Handle 0 argument functions Future Support *apply and lambda expressions in guard statements Support defining operators Lock functions by default (check when next function is different name). Use public() as way to indicate function can be globally modified Think about supporting namespaces Support take, drop, cycle Support partial function application Check for side effects Support tail recursion Support type inference Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/zatonovo/lambda.r"	"Functional programming and simple pattern matching in R."	"true"
"Syntax"	"purrr"	"https://github.com/hadley/purrr"	"A FP package for R in the spirit of underscore.js."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"286"	"33"	"48"	"GitHub - hadley/purrr: Make your pure R function purrr with functional programming Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 33 Star 286 Fork 48 hadley/purrr Code Issues 34 Pull requests 5 Pulse Graphs Make your pure R function purrr with functional programming 447 commits 1 branch 4 releases 24 contributors R 71.8% C++ 17.7% C 10.5% R C++ C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.2.2 v0.2.1 v0.2.0 v0.1.0 Nothing to show New pull request Latest commit ee29e87 Jul 3, 2016 hadley committed on GitHub Merge pull request #204 from dandermotj/master … Added pmap examples Permalink Failed to load latest commit information. R Merge pull request #204 from dandermotj/master Jul 3, 2016 man pmap examples documented Jun 15, 2016 revdep Prepare for release Jun 17, 2016 src Rename extract_ to fix tidyr clash. May 5, 2016 tests Better test for promises in invoke() Jun 9, 2016 .Rbuildignore Don't ignore NEWS Feb 12, 2016 .gitignore Initial commit Nov 29, 2014 .travis.yml Travis needs sudo: false to use container based builds Mar 29, 2016 DESCRIPTION Use development version Jun 18, 2016 LICENSE Prepare for release Sep 28, 2015 NAMESPACE Rename extract_ to fix tidyr clash. May 5, 2016 NEWS.md Use development version Jun 18, 2016 README.md Fix typos in README.md Feb 20, 2016 cran-comments.md Prepare for release Jun 17, 2016 purrr.Rproj Rename to purrr Feb 7, 2015 README.md purrr Purrr makes your pure functions purr by completing R's functional programming tools with important features from other languages, in the style of the JS packages underscore.js, lodash and lazy.js. Installation Get the released version from CRAN: install.packages(""purrr"") Or the development version from github with: # install.packages(""devtools"") devtools::install_github(""hadley/purrr"") Examples The following example uses purrr to solve a fairly realistic problem: split a data frame into pieces, fit a model to each piece, summarise and extract R^2. library(purrr)  mtcars %>%   split(.$cyl) %>%   map(~ lm(mpg ~ wt, data = .)) %>%   map(summary) %>%   map_dbl(""r.squared"") Note the three types of input to map(): a function, a formula (converted to an anonymous function), or a string (used to extract named components). The following more complicated example shows how you might generate 100 random test-training splits, fit a model to each training split then evaluate based on the test split: library(dplyr) random_group <- function(n, probs) {   probs <- probs / sum(probs)   g <- findInterval(seq(0, 1, length = n), c(0, cumsum(probs)),     rightmost.closed = TRUE)   names(probs)[sample(g)] } partition <- function(df, n, probs) {   replicate(n, split(df, random_group(nrow(df), probs)), FALSE) %>%     transpose() %>%     as_data_frame() }  msd <- function(x, y) sqrt(mean((x - y) ^ 2))  # Generate 100 random test-training splits boot <- partition(mtcars, 100, c(training = 0.8, test = 0.2)) boot  boot <- boot %>% mutate(   # Fit the models   models = map(training, ~ lm(mpg ~ wt, data = .)),   # Make predictions on test data   preds = map2(models, test, predict),   diffs = map2(preds, test %>% map(""mpg""), msd) )  # Evaluate mean-squared difference between predicted and actual mean(unlist(boot$diffs)) API Transformation Apply a function to each element: map() returns a list; map_lgl()/map_int()/map_dbl()/map_chr() return a vector; walk() invisibly returns original list, calling the function for its side effects; map2() and pmap() vectorise over multiple inputs; at_depth() maps a function at a specified level of nested lists. Apply a function conditionally with map_if() (where a predicate returns TRUE) and map_at() (at specific locations). Apply a function to slices of a data frame with by_slice(), or to each row with by_row() or map_rows(). Apply a function to list-elements of a list with lmap(), lmap_if() and lmap_at(). Compared to traditional mapping, the function is applied to x[i] instead of x[[i]], preserving the surrounding list and attributes. Reduce a list to a single value by iteratively applying a binary function: reduce() and reduce_right(). Figure out if a list contains an object: contains(). Order, sort and split a list based on its components with split_by(), order_by() and sort_by(). List manipulation and creation Transpose a list with transpose(). Create the cartesian product of the elements of several lists with cross_n() and cross_d(). Flatten a list with flatten(). Splice lists and other objects with splice(). Predicate functions (A predicate function is a function that either returns TRUE or FALSE) keep() or discard() elements that satisfy the predicate.. Does every() element or some() elements satisfy the predicate? Find the value (detect()) and index (detect_index()) of the first element that satisfies the predicate. Find the head/tail that satisfies a predicate: head_while(), tail_while(). Lists of functions invoke() every function in a list with given arguments and returns a list, invoke_lgl()/invoke_int()/invoke_dbl()/invoke_chr() returns vectors. Function operators Fill in function arguments with partial(). Change the way your function takes input with lift() and the lift_xy() family of composition helpers. Compose multiple functions into a single function with compose(). Negate a predicate funtion with negate(). Objects coercion Convert an array or matrix to a list with array_tree() and array_branch(). Convert a list to a vector with as_vector(). Philosophy The goal is not to try and simulate Haskell in R: purrr does not implement currying or destructuring binds or pattern matching. The goal is to give you similar expressiveness to an FP language, while allowing you to write code that looks and works like R. Instead of point free style, use the pipe, %>%, to write code that can be read from left to right. Instead of currying, we use ... to pass in extra arguments. Anonymous functions are verbose in R, so we provide two convenient shorthands. For unary functions, ~ .x + 1 is equivalent to function(.x) .x + 1. For chains of transformations functions, . %>% f() %>% g() is equivalent to function(.) . %>% f() %>% g(). R is weakly typed, we need variants map_int(), map_dbl(), etc since we don't know what .f will return. R has named arguments, so instead of providing different functions for minor variations (e.g. detect() and detectLast()) I use a named argument, .first. Type-stable functions are easy to reason about so additional arguments will never change the type of the output. Related work rlist, another R package to support working with lists. Similar goals but somewhat different philosophy. List operations defined in the Haskell prelude Scala's list methods. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/purrr"	"A FP package for R in the spirit of underscore.js."	"true"
"Data Manipulation"	"dplyr"	"https://github.com/hadley/dplyr"	"Fast data frames manipulation and database query."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1323"	"206"	"518"	"GitHub - hadley/dplyr: Dplyr: A grammar of data manipulation Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 206 Star 1,323 Fork 518 hadley/dplyr Code Issues 99 Pull requests 12 Pulse Graphs Dplyr: A grammar of data manipulation 3,209 commits 17 branches 13 releases 89 contributors R 52.8% C++ 46.8% C 0.4% R C++ C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags array as_tbl_matrix bigquery colwise cpp-default do feature_bind_rows hybrid join_names lazyeval master more_data_frame postgresql select simple-sql tbl v0.3.0.2 Nothing to show v0.5.0 v0.4.3 v0.4.2 v0.4.1 v0.4.0 v0.3.0.1 v0.3 v0.2.0 v0.1.3 v0.1.2 v0.1.2-cran-rc v0.1.1 v0.1 Nothing to show New pull request Latest commit 8b28b0b Jun 27, 2016 Robinlovelace committed with hadley Fix typo in NEWS (#1967) Permalink Failed to load latest commit information. R New argument ignore for test_frame() (#1941) Jun 23, 2016 data Recompress nasa data Dec 6, 2013 inst Support zero-column corner case in vector visitors (#1959) Jun 23, 2016 man-roxygen Remove outdated show_sql and explain_sql. Sep 4, 2014 man Prepare for release Jun 23, 2016 revdep Prepare for release Jun 23, 2016 src Support zero-column corner case in vector visitors (#1959) Jun 23, 2016 tests Prepare for release Jun 23, 2016 vignettes Typo in window functions vignette (#1933) Jun 16, 2016 .Rbuildignore Prepare for release Jun 23, 2016 .gitattributes add .gitattributes Nov 25, 2015 .gitignore Run revdep checks and inform maintainers Jun 9, 2016 .travis.yml improve Travis checks (#1859) May 26, 2016 DESCRIPTION Use development version Jun 24, 2016 LICENSE update copyright years Apr 14, 2015 NAMESPACE Fix S3 generic incompatiblity & update docs Jun 14, 2016 NEWS.md Fix typo in NEWS (#1967) Jun 27, 2016 README.Rmd minor grammar/typo fix May 19, 2016 README.md Add code coverage Mar 7, 2016 codecov.yml Supress codecov comments Jun 20, 2016 cran-comments.md Prepare for release Jun 23, 2016 dplyr.Rproj For speed, don't build vignettes when checking Sep 4, 2014 README.md dplyr dplyr is the next iteration of plyr, focussed on tools for working with data frames (hence the d in the name). It has three main goals: Identify the most important data manipulation tools needed for data analysis and make them easy to use from R. Provide blazing fast performance for in-memory data by writing key pieces in C++. Use the same interface to work with data no matter where it's stored, whether in a data frame, a data table or database. You can install: the latest released version from CRAN with install.packages(""dplyr"") the latest development version from github with if (packageVersion(""devtools"") < 1.6) {   install.packages(""devtools"") } devtools::install_github(""hadley/lazyeval"") devtools::install_github(""hadley/dplyr"") You'll probably also want to install the data packages used in most examples: install.packages(c(""nycflights13"", ""Lahman"")). If you encounter a clear bug, please file a minimal reproducible example on github. For questions and other discussion, please use the manipulatr mailing list. Learning dplyr To get started, read the notes below, then read the intro vignette: vignette(""introduction"", package = ""dplyr""). To make the most of dplyr, I also recommend that you familiarise yourself with the principles of tidy data: this will help you get your data into a form that works well with dplyr, ggplot2 and R's many modelling functions. If you need more, help I recommend the following (paid) resources: dplyr on datacamp, by Garrett Grolemund. Learn the basics of dplyr at your own pace in this interactive online course. Introduction to Data Science with R: How to Manipulate, Visualize, and Model Data with the R Language, by Garrett Grolemund. This O'Reilly video series will teach you the basics needed to be an effective analyst in R. Key data structures The key object in dplyr is a tbl, a representation of a tabular data structure. Currently dplyr supports: data frames data tables SQLite PostgreSQL/Redshift MySQL/MariaDB Bigquery MonetDB data cubes with arrays (partial implementation) You can create them as follows: library(dplyr) # for functions library(nycflights13) # for data flights #> Source: local data frame [336,776 x 16] #>  #>     year month   day dep_time dep_delay arr_time arr_delay carrier tailnum #>    (int) (int) (int)    (int)     (dbl)    (int)     (dbl)   (chr)   (chr) #> 1   2013     1     1      517         2      830        11      UA  N14228 #> 2   2013     1     1      533         4      850        20      UA  N24211 #> 3   2013     1     1      542         2      923        33      AA  N619AA #> 4   2013     1     1      544        -1     1004       -18      B6  N804JB #> 5   2013     1     1      554        -6      812       -25      DL  N668DN #> 6   2013     1     1      554        -4      740        12      UA  N39463 #> 7   2013     1     1      555        -5      913        19      B6  N516JB #> 8   2013     1     1      557        -3      709       -14      EV  N829AS #> 9   2013     1     1      557        -3      838        -8      B6  N593JB #> 10  2013     1     1      558        -2      753         8      AA  N3ALAA #> ..   ...   ...   ...      ...       ...      ...       ...     ...     ... #> Variables not shown: flight (int), origin (chr), dest (chr), air_time #>   (dbl), distance (dbl), hour (dbl), minute (dbl).  # Caches data in local SQLite db flights_db1 <- tbl(nycflights13_sqlite(), ""flights"")  # Caches data in local postgres db flights_db2 <- tbl(nycflights13_postgres(), ""flights"") Each tbl also comes in a grouped variant which allows you to easily perform operations ""by group"": carriers_df  <- flights %>% group_by(carrier) carriers_db1 <- flights_db1 %>% group_by(carrier) carriers_db2 <- flights_db2 %>% group_by(carrier) Single table verbs dplyr implements the following verbs useful for data manipulation: select(): focus on a subset of variables filter(): focus on a subset of rows mutate(): add new columns summarise(): reduce each group to a smaller number of summary statistics arrange(): re-order the rows They all work as similarly as possible across the range of data sources. The main difference is performance: system.time(carriers_df %>% summarise(delay = mean(arr_delay))) #>    user  system elapsed  #>   0.040   0.001   0.043 system.time(carriers_db1 %>% summarise(delay = mean(arr_delay)) %>% collect()) #>    user  system elapsed  #>   0.348   0.302   1.280 system.time(carriers_db2 %>% summarise(delay = mean(arr_delay)) %>% collect()) #>    user  system elapsed  #>   0.015   0.000   0.142 Data frame methods are much much faster than the plyr equivalent. The database methods are slower, but can work with data that don't fit in memory. system.time(plyr::ddply(flights, ""carrier"", plyr::summarise,   delay = mean(arr_delay, na.rm = TRUE))) #>    user  system elapsed  #>   0.104   0.029   0.134 do() As well as the specialised operations described above, dplyr also provides the generic do() function which applies any R function to each group of the data. Let's take the batting database from the built-in Lahman database. We'll group it by year, and then fit a model to explore the relationship between their number of at bats and runs: by_year <- lahman_df() %>%    tbl(""Batting"") %>%   group_by(yearID) by_year %>%    do(mod = lm(R ~ AB, data = .)) #> Source: local data frame [144 x 2] #> Groups: <by row> #>  #>    yearID     mod #>     (int)  (list) #> 1    1871 <S3:lm> #> 2    1872 <S3:lm> #> 3    1873 <S3:lm> #> 4    1874 <S3:lm> #> 5    1875 <S3:lm> #> 6    1876 <S3:lm> #> 7    1877 <S3:lm> #> 8    1878 <S3:lm> #> 9    1879 <S3:lm> #> 10   1880 <S3:lm> #> ..    ...     ... Note that if you are fitting lots of linear models, it's a good idea to use biglm because it creates model objects that are considerably smaller: by_year %>%    do(mod = lm(R ~ AB, data = .)) %>%   object.size() %>%   print(unit = ""MB"") #> 22.7 Mb  by_year %>%    do(mod = biglm::biglm(R ~ AB, data = .)) %>%   object.size() %>%   print(unit = ""MB"") #> 0.8 Mb Multiple table verbs As well as verbs that work on a single tbl, there are also a set of useful verbs that work with two tbls at a time: joins and set operations. dplyr implements the four most useful joins from SQL: inner_join(x, y): matching x + y left_join(x, y): all x + matching y semi_join(x, y): all x with match in y anti_join(x, y): all x without match in y And provides methods for: intersect(x, y): all rows in both x and y union(x, y): rows in either x or y setdiff(x, y): rows in x, but not y Plyr compatibility You'll need to be a little careful if you load both plyr and dplyr at the same time. I'd recommend loading plyr first, then dplyr, so that the faster dplyr functions come first in the search path. By and large, any function provided by both dplyr and plyr works in a similar way, although dplyr functions tend to be faster and more general. Related approaches Blaze |Stat Pig Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/dplyr"	"Fast data frames manipulation and database query."	"true"
"Data Manipulation"	"data.table"	"https://github.com/Rdatatable/data.table"	"Fast data manipulation in a short and flexible syntax."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"740"	"136"	"514"	"GitHub - Rdatatable/data.table: R's data.table package extends data.frame. HOMEPAGE: Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 136 Star 740 Fork 514 Rdatatable/data.table Code Issues 414 Pull requests 6 Wiki Pulse Graphs R's data.table package extends data.frame. HOMEPAGE: https://github.com/Rdatatable/data.table/wiki 2,462 commits 6 branches 0 releases 27 contributors C 62.2% R 36.0% Batchfile 1.4% Other 0.4% C R Batchfile Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags as.data.table.array gh-pages groupingsets master non-equi-joins oseiskar-fwrite Nothing to show Nothing to show New pull request Latest commit 5a58596 Jul 14, 2016 arunsrinivasan Closes #1771. uniqueN handles sorted inputs with na.rm=TRUE correctly. Permalink Failed to load latest commit information. R Closes #1771. uniqueN handles sorted inputs with na.rm=TRUE correctly. Jul 14, 2016 inst/tests Closes #1771. uniqueN handles sorted inputs with na.rm=TRUE correctly. Jul 14, 2016 man renamed anywhere() to inrange(), more efficient, #679. Jul 14, 2016 src renamed anywhere() to inrange(), more efficient, #679. Jul 13, 2016 tests R 2.15.0 minor tests fixes towards #1641 Apr 12, 2016 vignettes minor update to FAQ Apr 26, 2016 .Rbuildignore Extended CI, including R 2.15.0, closes #1641 Jun 10, 2016 .gitignore rewrite all.equal.data.table, added ignore.row.order and ignore.col.o… Mar 5, 2016 .gitlab-ci.yml upgrade R dep to meet current devel since 6d6b50e Jul 3, 2016 .travis.yml increase travis timeout for covr CI step Jul 3, 2016 CRAN_Release.cmd Attempt to workaround AIX compile error #1351 Sep 21, 2015 Contributing.md README.md -> NEWS.md, closes #1662. Thanks @MichaelChirico. Apr 20, 2016 DESCRIPTION upgrade R dep to meet current devel since 6d6b50e Jul 3, 2016 LICENSE LICENSE file contents replaced with URL to the canonical copy. I didn… Nov 25, 2015 NAMESPACE renamed anywhere() to inrange(), more efficient, #679. Jul 13, 2016 NEWS.md Closes #1771. uniqueN handles sorted inputs with na.rm=TRUE correctly. Jul 14, 2016 README.md Heading size README.md Apr 14, 2016 appveyor.yml light win builds Jul 12, 2016 deploy.sh wont hurt for security, test re-run CI Apr 11, 2016 README.md Project overview is on the GitHub Wiki tab, our HOMEPAGE Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/Rdatatable/data.table"	"Fast data manipulation in a short and flexible syntax."	"true"
"Data Manipulation"	"reshape2"	"https://github.com/hadley/reshape"	"Flexible rearrange, reshape and aggregate data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"134"	"20"	"41"	"GitHub - hadley/reshape: An R package to flexible rearrange, reshape and aggregate data Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 20 Star 134 Fork 41 hadley/reshape Code Issues 19 Pull requests 7 Pulse Graphs An R package to flexible rearrange, reshape and aggregate data http://had.co.nz/reshape 217 commits 3 branches 7 releases 10 contributors R 78.7% C++ 21.3% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master reshape0.8 reshape2 Nothing to show v1.4.1 v1.4 v0.8.5 reshape2-1.2.2 reshape2-1.2 reshape2-1.1 reshape2-1.0 Nothing to show New pull request Latest commit d38539d Aug 25, 2015 hadley Merge pull request #69 from kevinushey/bugfix/melt-POSIXlt … melt.data.frame no longer barfs with POSIXlt Permalink Failed to load latest commit information. R Update data doc style Dec 5, 2014 bench Trim trailing whitespace Dec 4, 2012 data Initial check in of everything except ggplot Nov 6, 2007 inst Use new testthat structure Apr 22, 2014 man Update data doc style Dec 5, 2014 po Korean translation is updated. Apr 9, 2013 revdep Update summary style Dec 5, 2014 src melt.data.frame throws when encountering POSIXlt Aug 25, 2015 tests melt.data.frame throws when encountering POSIXlt Aug 25, 2015 .Rbuildignore Draft cran-comments.md Dec 5, 2014 .gitignore Add a C++-implemented melt Feb 18, 2014 .travis.yml Install from hadley/plyr Aug 25, 2015 DESCRIPTION Version bump Dec 6, 2014 LICENSE Fix license typo Apr 23, 2014 NAMESPACE Upgrade roxygen Dec 5, 2014 NEWS.md melt.data.frame throws when encountering POSIXlt Aug 25, 2015 README.md Update README.md Sep 16, 2014 cran-comments.md Update url & desc Dec 5, 2014 reshape.Rproj Use standard pkg opts Feb 19, 2014 README.md Reshape2 Reshape2 is a reboot of the reshape package. It's been over five years since the first release of reshape, and in that time I've learned a tremendous amount about R programming, and how to work with data in R. Reshape2 uses that knowledge to make a new package for reshaping data that is much more focused and much much faster. This version improves speed at the cost of functionality, so I have renamed it to reshape2 to avoid causing problems for existing users. Based on user feedback I may reintroduce some of these features. What's new in reshape2: considerably faster and more memory efficient thanks to a much better underlying algorithm that uses the power and speed of subsetting to the fullest extent, in most cases only making a single copy of the data. cast is replaced by two functions depending on the output type: dcast produces data frames, and acast produces matrices/arrays. multidimensional margins are now possible: grand_row and grand_col have been dropped: now the name of the margin refers to the variable that has its value set to (all). some features have been removed such as the | cast operator, and the ability to return multiple values from an aggregation function. I'm reasonably sure both these operations are better performed by plyr. a new cast syntax which allows you to reshape based on functions of variables (based on the same underlying syntax as plyr): better development practices like namespaces and tests. the function melt now names the columns of its returned data frame Var1, Var2, ..., VarN instead of X1, X2, ..., XN. the argument variable.name of melt replaces the old argument variable_name. Initial benchmarking has shown melt to be up to 10x faster, pure reshaping cast up to 100x faster, and aggregating cast() up to 10x faster. This work has been generously supported by BD (Becton Dickinson). Installation Get the released version from cran: install.packages(""reshape2"") Get the dev version from github: devtools::install_github(""hadley/reshape"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/reshape"	"Flexible rearrange, reshape and aggregate data."	"true"
"Data Manipulation"	"readr"	"https://github.com/hadley/readr"	"A fast and friendly way to read tabular data into R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"405"	"44"	"91"	"GitHub - hadley/readr: Read flat files (csv, tsv, fwf) into R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 44 Star 405 Fork 91 hadley/readr Code Issues 14 Pull requests 2 Pulse Graphs Read flat files (csv, tsv, fwf) into R 942 commits 5 branches 4 releases 31 contributors R 39.4% C++ 36.1% C 24.5% R C++ C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags linker-error master nonmen refactor revert-436-bugfix/BOM Nothing to show v0.2.2 v0.2.1 v0.2.0 v0.1.0 Nothing to show New pull request Latest commit fec00fd Jul 15, 2016 jimhester committed on GitHub Merge pull request #480 from jimhester/479 … Add an na argument to read_lines() Permalink Failed to load latest commit information. R Change na default to empty character vector Jul 15, 2016 data-raw Add challenging data for guessing column types Jul 10, 2016 inst/extdata Allow skipping lines in fwf based on a comment string Jul 14, 2016 man Change na default to empty character vector Jul 15, 2016 notes Ignore the correct vignette. Oct 16, 2015 revdep Modernise revdep check script Jul 13, 2016 src Add an na argument to read_lines() Jul 15, 2016 tests Change na default to empty character vector Jul 15, 2016 vignettes Tweaks to col types vignette Jul 14, 2016 .Rbuildignore Add codecov config file Jun 8, 2016 .gitattributes Set merge strategy for the news file Jun 8, 2016 .gitignore just one simpler `write_rds()` to wrap `saveRDS()` May 1, 2015 .travis.yml Build travis on all 3 versions Jun 15, 2016 DESCRIPTION Start preparing news for release Jul 14, 2016 LICENSE Add license file May 21, 2015 NAMESPACE Implement write_file and write_file_raw (#478) Jul 14, 2016 NEWS.md Add an na argument to read_lines() Jul 15, 2016 README.md Fix and warn on duplicate & missing col names Jul 13, 2016 codecov.yml Add codecov config file Jun 8, 2016 cran-comments.md Prepare for release Oct 21, 2015 readr.Rproj Don't build vignettes (to save time when checking) Sep 3, 2015 README.md readr The goal of readr is to provide a fast and friendly way to read tabular data into R. The most important functions are: Read delimited files: read_delim(), read_csv(), read_tsv(), read_csv2(). Read fixed width files: read_fwf(), read_table(). Read lines: read_lines(). Read whole file: read_file(). Re-parse existing data frame: type_convert(). Installation readr is now available from CRAN. install.packages(""readr"") You can try out the dev version with: # install.packages(""devtools"") devtools::install_github(""hadley/readr"") Usage library(readr) library(dplyr)  mtcars_path <- tempfile(fileext = "".csv"") write_csv(mtcars, mtcars_path)  # Read a csv file into a data frame read_csv(mtcars_path) # Read lines into a vector read_lines(mtcars_path) # Read whole file into a single string read_file(mtcars_path) See vignette(""column-types"") on how readr parses columns, and how you can override the defaults. Output read_csv() produces a data frame with the following properties: Characters are never automatically converted to factors (i.e. no more stringsAsFactors = FALSE). Valid column names are left as is, not munged into valid R identifiers (i.e. there is no check.names = TRUE). Missing column names are filled in with X1, X2 etc, and duplicated column names are deduplicated. The data frame is given class c(""tbl_df"", ""tbl"", ""data.frame"") so if you also use dplyr you'll get an enhanced display. Row names are never set. Problems If there are any problems parsing the file, the read_ function will throw a warning telling you how many problems there are. You can then use the problems() function to access a data frame that gives information about each problem: df <- read_csv(col_types = ""dd"", col_names = c(""x"", ""y""), skip = 1, "" 1,2 a,b "") #> Warning message: There were 2 problems. See problems(x) for more details problems(df) #>   row col expected actual #> 1   2   1 a double      a #> 2   2   2 a double      b It's likely that there will be cases that you can never load without some manual regexp-based munging in R. Load those columns with col_character(), fix them up as needed, then use convert_types() to re-run the automated conversion on every character column in the data frame. Alternatively, you can use parse_integer(), parse_numeric(), parse_date() etc to parse a single character vector at a time. Compared to base functions Compared to the corresponding base functions, readr functions: Use a consistent naming scheme for the parameters (e.g. col_names and col_types not header and colClasses). Are much faster (up to 10x faster). Have a helpful progress bar if loading is going to take a while. All functions work exactly the same way regardless of the current locale. To override the US-centric defaults, use locale(). Compared to fread() data.table has a function similar to read_csv() called fread. Compared to fread, readr: Is slower (currently ~1.2-2x slower. If you want absolutely the best performance, use data.table::fread(). Readr has a slightly more sophisticated parser, recognising both doubled ("""""""") and backslash escapes (""\""""). Readr allows you to read factors and date times directly from disk. fread() saves you work by automatically guessing the delimiter, whether or not the file has a header, how many lines to skip by default and more. Readr forces you to supply these parameters. The underlying designs are quite different. Readr is designed to be general, and dealing with new types of rectangular data just requires implementing a new tokenizer. fread() is designed to be as fast as possible. fread() is pure C, readr is C++ (and Rcpp). Acknowledgements Thanks to: Joe Cheng for showing me the beauty of deterministic finite automata for parsing, and for teaching me why I should write a tokenizer. JJ Allaire for helping me come up with a design that makes very few copies, and is easy to extend. Dirk Eddelbuettel for coming up with the name! Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/readr"	"A fast and friendly way to read tabular data into R."	"true"
"Data Manipulation"	"haven"	"https://github.com/hadley/haven"	"Improved methods to import SPSS, Stata and SAS files in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"155"	"22"	"38"	"GitHub - hadley/haven: Read SPSS, Stata and SAS files from R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 22 Star 155 Fork 38 hadley/haven Code Issues 10 Pull requests 0 Pulse Graphs Read SPSS, Stata and SAS files from R 348 commits 3 branches 3 releases Fetching contributors C 85.5% R 7.8% C++ 6.7% C R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags boost-function master tagged-na Nothing to show v0.2.0 v0.1.1 v0.1.0 Nothing to show New pull request Latest commit 876a4f9 Jun 25, 2016 hadley Merge branch 'master' of github.com:hadley/haven Permalink Failed to load latest commit information. R Printing also the type of labelled objects (#188) Jun 24, 2016 inst/examples Add sample data and examples Jun 10, 2016 man Add sample data and examples Jun 10, 2016 revdep Update revdeps Jun 6, 2016 src Update ReadStat Jun 25, 2016 tests Printing also the type of labelled objects (#188) Jun 24, 2016 vignettes Ignore rsconnect info for vignette Jun 10, 2016 .Rbuildignore Suppress codecov comments Jun 6, 2016 .gitignore Add vignette describing dates and times Feb 27, 2015 .travis.yml Don't include readstat in test coverage May 31, 2016 DESCRIPTION Import tibble Jun 3, 2016 LICENSE Clarify licensing a bit more Feb 22, 2015 NAMESPACE Import type_sum generic Jun 9, 2016 NEWS.md Printing also the type of labelled objects (#188) Jun 24, 2016 README.md Import tibble Jun 3, 2016 codecov.yml Suppress codecov comments Jun 6, 2016 cran-comments.md Point to actual results Apr 8, 2015 haven.Rproj Rename to haven Feb 4, 2015 README.md Haven Haven allows you to load foreign data formats (SAS, Spss and Stata) in to R by wrapping the fantastic ReadStat C library written by Evan Miller. Haven offers similar functionality to the base foreign package but: Can read SAS's proprietary binary format (SAS7BDAT). The one other package on CRAN that does that, sas7bdat, was created to document the reverse-engineering effort. Thus its implementation is designed for experimentation, rather than efficiency. Haven is significantly faster and should also support a wider range of SAS files (including compressed), and works with SAS7BCAT files. It can be faster. Some spss files seem to load about 4x faster, but others load slower. If you have a lot of SPSS files to import, you might want to benchmark both and pick the fastest. Works with Stata 13 and 14 files (foreign only works up to Stata 12). Can also write SPSS and Stata files (This is hard to test so if you run into any problems, please let me know). Can only read the data from the most common statistical packages (SAS, Stata and SPSS). All functions return tibbles. Date times are converted to corresponding R classes and labelled vectors are returned as a new labelled class. You can easily coerce to factors or replace labelled values with missings as appropriate. Uses underscores instead of dots ;) Haven is still a work in progress so please file an issue if it fails to correctly load a file that you're interested in. Installation # Install the released version from CRAN: install.packages(""haven"")  # Install the cutting edge development version from GitHub: # install.packages(""devtools"") devtools::install_github(""hadley/haven"") Usage SAS: read_sas(""path/to/file"") SPSS: read_sav(""path/to/file"") Stata: read_dta(""path/to/file"") Updating readstat If you're working on the development version of haven, and you'd like to update the embedded ReadStat library, you can run the following code. It is not necessary if you're just using the package. tmp <- tempfile() download.file(""https://github.com/WizardMac/ReadStat/archive/master.zip"", tmp,    method = ""wget"") unzip(tmp, exdir = tempdir())  src <- dir(file.path(tempdir(), ""ReadStat-master"", ""src""), ""\\.[ch]$"", full.name = TRUE) file.copy(src, ""src/"", overwrite = TRUE) unlink(c(""src/readstat_rdata.c"", ""src/readstat_rdata.h"")) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/haven"	"Improved methods to import SPSS, Stata and SAS files in R."	"true"
"Data Manipulation"	"tidyr"	"https://github.com/hadley/tidyr"	"Easily tidy data with spread and gather functions."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"336"	"43"	"108"	"GitHub - hadley/tidyr: Easily tidy data with spread and gather functions. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 43 Star 336 Fork 108 hadley/tidyr Code Issues 18 Pull requests 3 Pulse Graphs Easily tidy data with spread and gather functions. 339 commits 1 branch 8 releases Fetching contributors R 84.9% C++ 15.1% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.5.1 v0.5.0 v0.4.1 v0.4.0 v0.3.1 v0.3.0 v0.2.0 v0.1 Nothing to show New pull request Latest commit 76f1109 Jun 14, 2016 hadley Use development version Permalink Failed to load latest commit information. R Use get() instead of getS3method() for R < 3.3 (#205) Jun 14, 2016 data-raw Add Smiths dataset from reshape May 16, 2016 data Add Smiths dataset from reshape May 16, 2016 demo Add demo index Jun 10, 2014 man Add nest_string()/unnest_string() functions (#69) May 24, 2016 revdep Run revdeps and prepare for release Jun 10, 2016 src Merge branch 'master' of github.com:hadley/tidyr May 18, 2016 tests Allow test to work with dev and released dplyr Jun 9, 2016 vignettes Use new vignette style for vignette. May 13, 2015 .Rbuildignore Prepare for release May 26, 2016 .gitignore Prepare for release May 26, 2016 .travis.yml test oldrel in Travis CI (#204) Jun 13, 2016 DESCRIPTION Use development version Jun 14, 2016 LICENSE Change license to MIT Jun 17, 2014 NAMESPACE Add nest_string()/unnest_string() functions (#69) May 24, 2016 NEWS.md Use development version Jun 14, 2016 README.md Fix spreadsheet synonyms. May 16, 2016 cran-comments.md Submit point release to CRAN Jun 14, 2016 tidyr.Rproj Don't use --as-cran Jun 10, 2014 README.md tidyr tidyr is a reframing of reshape2 designed to accompany the tidy data framework, and to work hand-in-hand with magrittr and dplyr to build a solid pipeline for data analysis. Just as reshape2 did less than reshape, tidyr does less than reshape2. It's designed specifically for tidying data, not the general reshaping that reshape2 does, or the general aggregation that reshape did. In particular, built-in methods only work for data frames, and tidyr provides no margins or aggregation. There are two fundamental verbs of data tidying: gather() takes multiple columns, and gathers them into key-value pairs: it makes ""wide"" data longer. spread(). takes two columns (key & value) and spreads in to multiple columns, it makes ""long"" data wider. These verbs have a number of synonyms: tidyr gather spread reshape(2) melt cast spreadsheets unpivot pivot databases fold unfold tidyr also provides separate() and extract() functions which makes it easier to pull apart a column that represents multiple variables. The complement to separate() is unite(). Installation tidyr is available from CRAN. Install it with: install.packages(""tidyr"") The development version can be installed using: # install.packages(""devtools"") devtools::install_github(""hadley/tidyr"") Getting started To get started, read the tidy data vignette (vignette(""tidy-data"")) and check out the demos, demo(package = ""tidyr"")). Note that tidyr is designed for use in conjunction with dplyr, so you should always load both: library(tidyr) library(dplyr) References If you'd like to learn more about these data reshaping operators, I'd recommend the following papers: Wrangler: Interactive visual specification of data transformation scripts An interactive framework for data cleaning (Potter's wheel) On efficiently implementing SchemaSQL on a SQL database system Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/tidyr"	"Easily tidy data with spread and gather functions."	"true"
"Data Manipulation"	"broom"	"https://github.com/dgrtwo/broom"	"Convert statistical analysis objects into tidy data frames."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"433"	"40"	"80"	"GitHub - dgrtwo/broom: Convert statistical analysis objects from R into tidy format Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 40 Star 433 Fork 80 dgrtwo/broom Code Issues 46 Pull requests 6 Pulse Graphs Convert statistical analysis objects from R into tidy format 336 commits 2 branches 9 releases 26 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master mle Nothing to show v0.4.0 v0.3.7 v0.3.6 v0.3.5 v0.3.4 v0.3 v0.2 v0.1 0.3.4 Nothing to show New pull request Latest commit defdf42 Jun 29, 2016 dgrtwo committed on GitHub Merge pull request #140 from jimhester/cache_packages … Cache package dependencies Permalink Failed to load latest commit information. R Added tidiers for `lsmobj` and `ref.grid` objects from the lsmeans pa… Jun 27, 2016 inst/extdata Various edits to MCMC tidiers; mostly style changes. Added 8schools.s… Nov 28, 2015 man-roxygen Overhaul of how augmenting works across many objects. In particular t… Nov 21, 2014 man Version bump Jun 27, 2016 tests Fixed to be compatible with dplyr 0.5 Jun 23, 2016 vignettes update bootstrap vignette Feb 16, 2016 .Rbuildignore Added codecov.io Jun 23, 2016 .gitignore Update cran comments. Jan 2, 2015 .travis.yml Cache package dependencies Jun 28, 2016 CONDUCT.md Added Code of Conduct May 12, 2016 DESCRIPTION Version bump Jun 28, 2016 LICENSE Fixes for CRAN submission May 5, 2015 NAMESPACE Added tidiers for `lsmobj` and `ref.grid` objects from the lsmeans pa… Jun 28, 2016 NEWS.md Version bump Jun 28, 2016 README.Rmd Added codecov.io Jun 23, 2016 README.md Added codecov.io Jun 23, 2016 appveyor.yml Merge remote-tracking branch 'dgrtwo/master' into rstanarm-tidiers May 14, 2016 broom.Rproj Changed NumSpacesForTab from 2 to 4 Mar 19, 2015 codecov.yml Added codecov.io Jun 23, 2016 cran-comments.md Version bump to prepare for CRAN Jun 24, 2016 README.md broom: let's tidy up a bit The broom package takes the messy output of built-in functions in R, such as lm, nls, or t.test, and turns them into tidy data frames. The concept of ""tidy data"", as introduced by Hadley Wickham, offers a powerful framework for data manipulation and analysis. That paper makes a convincing statement of the problem this package tries to solve (emphasis mine): While model inputs usually require tidy inputs, such attention to detail doesn't carry over to model outputs. Outputs such as predictions and estimated coefficients aren't always tidy. This makes it more difficult to combine results from multiple models. For example, in R, the default representation of model coefficients is not tidy because it does not have an explicit variable that records the variable name for each estimate, they are instead recorded as row names. In R, row names must be unique, so combining coefficients from many models (e.g., from bootstrap resamples, or subgroups) requires workarounds to avoid losing important information. This knocks you out of the flow of analysis and makes it harder to combine the results from multiple models. I'm not currently aware of any packages that resolve this problem. broom is an attempt to bridge the gap from untidy outputs of predictions and estimations to the tidy data we want to work with. It centers around three S3 methods, each of which take common objects produced by R statistical functions (lm, t.test, nls, etc) and convert them into a data frame. broom is particularly designed to work with Hadley's dplyr package (see the ""broom and dplyr"" vignette for more). broom should be distinguished from packages like reshape2 and tidyr, which rearrange and reshape data frames into different forms. Those packages perform critical tasks in tidy data analysis but focus on manipulating data frames in one specific format into another. In contrast, broom is designed to take format that is not in a data frame (sometimes not anywhere close) and convert it to a tidy data frame. Tidying model outputs is not an exact science, and it's based on a judgment of the kinds of values a data scientist typically wants out of a tidy analysis (for instance, estimates, test statistics, and p-values). You may lose some of the information in the original object that you wanted, or keep more information than you need. If you think the tidy output for a model should be changed, or if you're missing a tidying function for an S3 class that you'd like, I strongly encourage you to open an issue or a pull request. Installation and Documentation The broom package is available on CRAN: install.packages(""broom"")  You can also install the development version of the broom package using devtools: library(devtools) install_github(""dgrtwo/broom"")  For additional documentation, please browse the vignettes: browseVignettes(package=""broom"")  Tidying functions This package provides three S3 methods that do three distinct kinds of tidying. tidy: constructs a data frame that summarizes the model's statistical findings. This includes coefficients and p-values for each term in a regression, per-cluster information in clustering applications, or per-test information for multtest functions. augment: add columns to the original data that was modeled. This includes predictions, residuals, and cluster assignments. glance: construct a concise one-row summary of the model. This typically contains values such as R^2, adjusted R^2, and residual standard error that are computed once for the entire model. Note that some classes may have only one or two of these methods defined. Consider as an illustrative example a linear fit on the built-in mtcars dataset. lmfit <- lm(mpg ~ wt, mtcars) lmfit ##  ## Call: ## lm(formula = mpg ~ wt, data = mtcars) ##  ## Coefficients: ## (Intercept)           wt   ##      37.285       -5.344  summary(lmfit) ##  ## Call: ## lm(formula = mpg ~ wt, data = mtcars) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -4.5432 -2.3647 -0.1252  1.4096  6.8727  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  37.2851     1.8776  19.858  < 2e-16 *** ## wt           -5.3445     0.5591  -9.559 1.29e-10 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 3.046 on 30 degrees of freedom ## Multiple R-squared:  0.7528, Adjusted R-squared:  0.7446  ## F-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10  This summary output is useful enough if you just want to read it. However, converting it to a data frame that contains all the same information, so that you can combine it with other models or do further analysis, is not trivial. You have to do coef(summary(lmfit)) to get a matrix of coefficients, the terms are still stored in row names, and the column names are inconsistent with other packages (e.g. Pr(>|t|) compared to p.value). Instead, you can use the tidy function, from the broom package, on the fit: library(broom) tidy(lmfit) ##          term  estimate std.error statistic      p.value ## 1 (Intercept) 37.285126  1.877627 19.857575 8.241799e-19 ## 2          wt -5.344472  0.559101 -9.559044 1.293959e-10  This gives you a data.frame representation. Note that the row names have been moved into a column called term, and the column names are simple and consistent (and can be accessed using $). Instead of viewing the coefficients, you might be interested in the fitted values and residuals for each of the original points in the regression. For this, use augment, which augments the original data with information from the model: head(augment(lmfit)) ##           .rownames  mpg    wt  .fitted   .se.fit     .resid       .hat ## 1         Mazda RX4 21.0 2.620 23.28261 0.6335798 -2.2826106 0.04326896 ## 2     Mazda RX4 Wag 21.0 2.875 21.91977 0.5714319 -0.9197704 0.03519677 ## 3        Datsun 710 22.8 2.320 24.88595 0.7359177 -2.0859521 0.05837573 ## 4    Hornet 4 Drive 21.4 3.215 20.10265 0.5384424  1.2973499 0.03125017 ## 5 Hornet Sportabout 18.7 3.440 18.90014 0.5526562 -0.2001440 0.03292182 ## 6           Valiant 18.1 3.460 18.79325 0.5552829 -0.6932545 0.03323551 ##     .sigma      .cooksd  .std.resid ## 1 3.067494 1.327407e-02 -0.76616765 ## 2 3.093068 1.723963e-03 -0.30743051 ## 3 3.072127 1.543937e-02 -0.70575249 ## 4 3.088268 3.020558e-03  0.43275114 ## 5 3.097722 7.599578e-05 -0.06681879 ## 6 3.095184 9.210650e-04 -0.23148309  Note that each of the new columns begins with a . (to avoid overwriting any of the original columns). Finally, several summary statistics are computed for the entire regression, such as R^2 and the F-statistic. These can be accessed with the glance function: glance(lmfit) ##   r.squared adj.r.squared    sigma statistic      p.value df    logLik ## 1 0.7528328     0.7445939 3.045882  91.37533 1.293959e-10  2 -80.01471 ##        AIC      BIC deviance df.residual ## 1 166.0294 170.4266 278.3219          30  This distinction between the tidy, augment and glance functions is explored in a different context in the k-means vignette. Other Examples Generalized linear and non-linear models These functions apply equally well to the output from glm: glmfit <- glm(am ~ wt, mtcars, family=""binomial"") tidy(glmfit) ##          term estimate std.error statistic     p.value ## 1 (Intercept) 12.04037  4.509706  2.669879 0.007587858 ## 2          wt -4.02397  1.436416 -2.801396 0.005088198  head(augment(glmfit)) ##           .rownames am    wt    .fitted   .se.fit     .resid       .hat ## 1         Mazda RX4  1 2.620  1.4975684 0.9175750  0.6353854 0.12577908 ## 2     Mazda RX4 Wag  1 2.875  0.4714561 0.6761141  0.9848344 0.10816226 ## 3        Datsun 710  1 2.320  2.7047594 1.2799233  0.3598458 0.09628500 ## 4    Hornet 4 Drive  0 3.215 -0.8966937 0.6012064 -0.8271767 0.07438175 ## 5 Hornet Sportabout  0 3.440 -1.8020869 0.7486164 -0.5525972 0.06812194 ## 6           Valiant  0 3.460 -1.8825663 0.7669573 -0.5323012 0.06744101 ##      .sigma     .cooksd .std.resid ## 1 0.8033182 0.018405616  0.6795582 ## 2 0.7897742 0.042434911  1.0428463 ## 3 0.8101256 0.003942789  0.3785304 ## 4 0.7973421 0.017706938 -0.8597702 ## 5 0.8061915 0.006469973 -0.5724389 ## 6 0.8067014 0.005901376 -0.5512128  glance(glmfit) ##   null.deviance df.null    logLik      AIC      BIC deviance df.residual ## 1      43.22973      31 -9.588042 23.17608 26.10756 19.17608          30  Note that the statistics computed by glance are different for glm objects than for lm (e.g. deviance rather than R^2): These functions also work on other fits, such as nonlinear models (nls): nlsfit <- nls(mpg ~ k / wt + b, mtcars, start=list(k=1, b=0)) tidy(nlsfit) ##   term  estimate std.error statistic      p.value ## 1    k 45.829488  4.249155 10.785554 7.639162e-12 ## 2    b  4.386254  1.536418  2.854858 7.737378e-03  head(augment(nlsfit, mtcars)) ##           .rownames  mpg cyl disp  hp drat    wt  qsec vs am gear carb ## 1         Mazda RX4 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 ## 2     Mazda RX4 Wag 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 ## 3        Datsun 710 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 ## 4    Hornet 4 Drive 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 ## 5 Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 ## 6           Valiant 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 ##    .fitted     .resid ## 1 21.87843 -0.8784251 ## 2 20.32695  0.6730544 ## 3 24.14034 -1.3403437 ## 4 18.64115  2.7588507 ## 5 17.70878  0.9912203 ## 6 17.63177  0.4682291  glance(nlsfit) ##     sigma isConv      finTol    logLik      AIC      BIC deviance ## 1 2.77405   TRUE 2.87694e-08 -77.02329 160.0466 164.4438 230.8606 ##   df.residual ## 1          30  Hypothesis testing The tidy function can also be applied to htest objects, such as those output by popular built-in functions like t.test, cor.test, and wilcox.test. tt <- t.test(wt ~ am, mtcars) tidy(tt) ##   estimate estimate1 estimate2 statistic     p.value parameter  conf.low ## 1 1.357895  3.768895     2.411  5.493905 6.27202e-06  29.23352 0.8525632 ##   conf.high                  method alternative ## 1  1.863226 Welch Two Sample t-test   two.sided  Some cases might have fewer columns (for example, no confidence interval): wt <- wilcox.test(wt ~ am, mtcars) tidy(wt) ##   statistic      p.value                                            method ## 1     230.5 4.347026e-05 Wilcoxon rank sum test with continuity correction ##   alternative ## 1   two.sided  Since the tidy output is already only one row, glance returns the same output: glance(tt) ##   estimate estimate1 estimate2 statistic     p.value parameter  conf.low ## 1 1.357895  3.768895     2.411  5.493905 6.27202e-06  29.23352 0.8525632 ##   conf.high                  method alternative ## 1  1.863226 Welch Two Sample t-test   two.sided  glance(wt) ##   statistic      p.value                                            method ## 1     230.5 4.347026e-05 Wilcoxon rank sum test with continuity correction ##   alternative ## 1   two.sided  There is no augment function for htest objects, since there is no meaningful sense in which a hypothesis test produces output about each initial data point. Available Tidiers Currently broom provides tidying methods for many S3 objects from the built-in stats package, including lm glm htest anova nls kmeans manova TukeyHSD arima It also provides methods for S3 objects in popular third-party packages, including lme4 glmnet boot gam survival lfe zoo multcomp sp maps A full list of the tidy, augment and glance methods available for each class is as follows: Class tidy glance augment aareg x x anova x aov x aovlist x Arima x x biglm x x binDesign x x binWidth x boot x btergm x cch x x character x cld x coeftest x confint.glht x coxph x x x cv.glmnet x x data.frame x x x default x x x density x dgCMatrix x dgTMatrix x dist x ergm x x felm x x x fitdistr x x ftable x gam x x gamlss x geeglm x glht x glmnet x x gmm x x htest x x kappa x kde x kmeans x x x Line x Lines x list x x lm x x x lme x x x lmodel2 x x logical x manova x map x matrix x x Mclust x x x merMod x x x mle2 x multinom x x nlrq x x x nls x x x NULL x x x numeric x pairwise.htest x plm x x x poLCA x x x Polygon x Polygons x power.htest x prcomp x x pyears x x rcorr x ridgelm x x rjags x roc x rowwise_df x x x rq x x x rqs x x x sparseMatrix x SpatialLinesDataFrame x SpatialPolygons x SpatialPolygonsDataFrame x spec x stanfit x stanreg x x summary.glht x summary.lm x x summaryDefault x x survexp x x survfit x x survreg x x x table x tbl_df x x x ts x TukeyHSD x zoo x Conventions In order to maintain consistency, we attempt to follow some conventions regarding the structure of returned data. All functions The output of the tidy, augment and glance functions is always a data frame. The output never has rownames. This ensures that you can combine it with other tidy outputs without fear of losing information (since rownames in R cannot contain duplicates). Some column names are kept consistent, so that they can be combined across different models and so that you know what to expect (in contrast to asking ""is it pval or PValue?"" every time). The examples below are not all the possible column names, nor will all tidy output contain all or even any of these columns. tidy functions Each row in a tidy output typically represents some well-defined concept, such as one term in a regression, one test, or one cluster/class. This meaning varies across models but is usually self-evident. The one thing each row cannot represent is a point in the initial data (for that, use the augment method). Common column names include: term: the term in a regression or model that is being estimated. p.value: this spelling was chosen (over common alternatives such as pvalue, PValue, or pval) to be consistent with functions in R's built-in stats package statistic a test statistic, usually the one used to compute the p-value. Combining these across many sub-groups is a reliable way to perform (e.g.) bootstrap hypothesis testing estimate estimate of an effect size, slope, or other value std.error standard error conf.low the low end of a confidence interval on the estimate conf.high the high end of a confidence interval on the estimate df degrees of freedom augment functions augment(model, data) adds columns to the original data. If the data argument is missing, augment attempts to reconstruct the data from the model (note that this may not always be possible, and usually won't contain columns not used in the model). Each row in an augment output matches the corresponding row in the original data. If the original data contained rownames, augment turns them into a column called .rownames. Newly added column names begin with . to avoid overwriting columns in the original data. Common column names include: .fitted: the predicted values, on the same scale as the data. .resid: residuals: the actual y values minus the fitted values .cluster: cluster assignments glance functions glance always returns a one-row data frame. The only exception is that glance(NULL) returns an empty data frame. We avoid including arguments that were given to the modeling function. For example, a glm glance output does not need to contain a field for family, since that is decided by the user calling glm rather than the modeling function itself. Common column names include: r.squared the fraction of variance explained by the model adj.r.squared R^2 adjusted based on the degrees of freedom sigma the square root of the estimated variance of the residuals Code of Conduct Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dgrtwo/broom"	"Convert statistical analysis objects into tidy data frames."	"true"
"Data Manipulation"	"rlist"	"https://github.com/renkun-ken/rlist"	"A toolbox for non-tabular data manipulation with lists."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"75"	"12"	"11"	"GitHub - renkun-ken/rlist: A Toolbox for Non-Tabular Data Manipulation Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 12 Star 75 Fork 11 renkun-ken/rlist Code Issues 17 Pull requests 0 Pulse Graphs A Toolbox for Non-Tabular Data Manipulation https://renkun.me/rlist 544 commits 4 branches 4 releases 5 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages jsonpath master recursive-query Nothing to show v0.4 v0.3 v0.2 v0.1 Nothing to show New pull request Latest commit 6fe73a2 Apr 4, 2016 renkun-ken fix url for CRAN policy Permalink Failed to load latest commit information. R refine for CRAN Apr 4, 2016 data-raw refine for CRAN Apr 4, 2016 data include nyweather data (#2) Nov 23, 2014 inst add vignettes Jun 16, 2014 man refine for CRAN Apr 4, 2016 tests refine test cases for latest release of testthat Apr 2, 2016 .Rbuildignore add build ignore for .o files Sep 27, 2015 .gitignore update ignore Oct 22, 2014 .travis.yml use codecov.io Sep 9, 2015 DESCRIPTION refine for CRAN Apr 4, 2016 LICENSE package created Jun 1, 2014 NAMESPACE upgrade roxygen2 Oct 30, 2015 NEWS list.table will directly call table upon data if ... is missing Oct 9, 2015 README.Rmd fix url for CRAN policy Apr 4, 2016 README.ja.Rmd fix url for CRAN policy Apr 4, 2016 README.ja.md fix url for CRAN policy Apr 4, 2016 README.md fix url for CRAN policy Apr 4, 2016 appveyor.yml add windows build status Jul 24, 2015 rlist.Rproj package created Jun 1, 2014 README.md rlist rlist is a set of tools for working with list objects. Its goal is to make it easier to work with lists by providing a wide range of functions that operate on non-tabular data stored in them. This package supports list mapping, filtering, grouping, sorting, updating, searching, file input/output, and many other functions. Most functions in the package are designed to be pipeline friendly so that data processing with lists can be chained. rlist Tutorial is a highly recommended complete guide to rlist. This document is also translated into 日本語 (by @teramonagi). Installation Install the latest version from GitHub: devtools::install_github(""renkun-ken/rlist"") Install from CRAN: install.packages(""rlist"") Motivation In R, there are numerous powerful tools to deal with structured data stored in tabular form such as data frame. However, a variety of data is non-tabular: different records may have different fields; for each field they may have different number of values. It is hard or no longer straightforward to store such data in data frame, but the list object in R is flexible enough to represent such records of diversity. rlist is a toolbox to deal with non-structured data stored in list objects, providing a collection of high-level functions which are pipeline friendly. Getting started Suppose we have a list of developers, each of whom has a name, age, a few interests, a list of programming languages they use and the number of years they have been using them. library(rlist) devs <-    list(     p1=list(name=""Ken"",age=24,       interest=c(""reading"",""music"",""movies""),       lang=list(r=2,csharp=4)),     p2=list(name=""James"",age=25,       interest=c(""sports"",""music""),       lang=list(r=3,java=2,cpp=5)),     p3=list(name=""Penny"",age=24,       interest=c(""movies"",""reading""),       lang=list(r=1,cpp=4,python=2))) This type of data is non-relational since it does not well fit the shape of a data frame, yet it can be easily stored in JSON or YAML format. In R, list objects are flexible enough to represent a wide range of non-relational datasets like this. This package provides a wide range of functions to query and manipulate this type of data. The following examples use str() to show the structure of the output. Filtering Filter those who like music and has been using R for more than 3 years. str( list.filter(devs, ""music"" %in% interest & lang$r >= 3) ) List of 1  $ p2:List of 4   ..$ name    : chr ""James""   ..$ age     : num 25   ..$ interest: chr [1:2] ""sports"" ""music""   ..$ lang    :List of 3   .. ..$ r   : num 3   .. ..$ java: num 2   .. ..$ cpp : num 5  Selecting Select their names and ages. str( list.select(devs, name, age) ) List of 3  $ p1:List of 2   ..$ name: chr ""Ken""   ..$ age : num 24  $ p2:List of 2   ..$ name: chr ""James""   ..$ age : num 25  $ p3:List of 2   ..$ name: chr ""Penny""   ..$ age : num 24  Mapping Map each of them to the number of interests. str( list.map(devs, length(interest)) ) List of 3  $ p1: int 3  $ p2: int 2  $ p3: int 2  More functions In addition to these basic functions, rlist also supports various types of grouping, joining, searching, sorting, updating, etc. For the introduction to more functionality, please go through the rlist Tutorial. Lambda expression In this package, almost all functions that work with expressions accept the following forms of lambda expressions: Implicit lambda expression: expression Univariate lambda expressions: x ~ expression f(x) ~ expression Multivariate lambda expressions: f(x,i) ~ expression f(x,i,name) ~ expression where x refers to the list member itself, i denotes the index, name denotes the name. If the symbols are not explicitly declared, ., .i and .name will by default be used to represent them, respectively. nums <- list(a=c(1,2,3),b=c(2,3,4),c=c(3,4,5)) list.map(nums, c(min=min(.),max=max(.))) list.filter(nums, x ~ mean(x)>=3) list.map(nums, f(x,i) ~ sum(x,i)) Using pipeline Working with pipeR Query the name of each developer who likes music and uses R, and put the results in a data frame. library(pipeR) devs %>>%    list.filter(""music"" %in% interest & ""r"" %in% names(lang)) %>>%   list.select(name,age) %>>%   list.stack    name age 1   Ken  24 2 James  25  The example above uses pipeR(http://renkun.me/pipeR/) package for pipeline operator %>>% that chains commands in a fluent style. List environment List() function wraps a list within an environment where almost all list functions are defined. Here is the List-environment version of the previous example. ldevs <- List(devs) ldevs$filter(""music"" %in% interest & ""r"" %in% names(lang))$   select(name,age)$   stack()$   data    name age 1   Ken  24 2 James  25  Help overview help(package = rlist) or view the documentation on CRAN License This package is under MIT License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/renkun-ken/rlist"	"A toolbox for non-tabular data manipulation with lists."	"true"
"Data Manipulation"	"jsonlite"	"https://github.com/jeroenooms/jsonlite"	"A robust and quick way to parse JSON files in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"107"	"10"	"36"	"GitHub - jeroenooms/jsonlite: A Robust, High Performance JSON Parser and Generator for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 107 Fork 36 jeroenooms/jsonlite forked from duncantl/RJSONIO Code Issues 18 Pull requests 1 Pulse Graphs A Robust, High Performance JSON Parser and Generator for R http://arxiv.org/abs/1403.2805 817 commits 1 branch 21 releases Fetching contributors HTML 87.9% C 5.9% R 3.9% TeX 2.2% C++ 0.1% HTML C R TeX C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.9.22 v0.9.20 v0.9.19 v0.9.18 v0.9.17 v0.9.16 v0.9.15 v0.9.14 v0.9.13.1 v0.9.13 v0.9.12 v0.9.11 v0.9.10 v0.9.8 v0.9.7 v0.9.5 v0.9.4 v0.9.3 v0.9.1 v0.9.0 1.0 Nothing to show New pull request Pull request Compare This branch is 766 commits ahead, 36 commits behind duncantl:master. Latest commit a7a5d99 Jul 8, 2016 jeroenooms Enable Valgrind on Travis Permalink Failed to load latest commit information. R Document digits = NA Jun 30, 2016 docs Test Apr 14, 2016 inst Update vignettes May 9, 2016 man Document digits = NA Jun 30, 2016 paper Knit fix Jun 1, 2015 revdep Save failure notes Jun 30, 2016 src Fix always_decimal method Jun 30, 2016 stuff This is no longer used Jul 10, 2015 tests Fix always_decimal method Jun 30, 2016 vignettes Update vignettes May 9, 2016 .Rbuildignore Ignore revdep Jun 30, 2016 .gitignore Clean up Makevars Jun 14, 2016 .travis.yml Enable Valgrind on Travis Jul 8, 2016 COPYING Add MIT license Sep 4, 2015 DESCRIPTION Bump for release Jun 29, 2016 LICENSE 2016 bump Jan 3, 2016 NAMESPACE Rename base64 encoder to prevent name conflict with openssl pkg Jun 29, 2016 NEWS Fix always_decimal method Jun 30, 2016 README.md Badges and stuff Mar 30, 2016 appveyor.yml Badges and stuff Mar 30, 2016 jsonlite.Rproj Start with push parser interface Feb 20, 2015 tidy.R tidy R code (again) Dec 6, 2013 README.md jsonlite A Robust, High Performance JSON Parser and Generator for R A fast JSON parser and generator optimized for statistical data and the web. Started out as a fork of 'RJSONIO', but has been completely rewritten in recent versions. The package offers flexible, robust, high performance tools for working with JSON in R and is particularly powerful for building pipelines and interacting with a web API. The implementation is based on the mapping described in the vignette (Ooms, 2014). In addition to converting JSON data from/to R objects, 'jsonlite' contains functions to stream, validate, and prettify JSON data. The unit tests included with the package verify that all edge cases are encoded and decoded consistently for use with dynamic data in systems and applications. Have a look at the vignette to get started! Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jeroenooms/jsonlite"	"A robust and quick way to parse JSON files in R."	"true"
"Data Manipulation"	"ff"	"http://ff.r-forge.r-project.org/"	"Data structures designed to store large datasets."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"ff Welcome to Large objects for R project! Package 'ff' supports fast on-disk objects: standard and packed atomics, ffdf data.frames, csv import/export, chunking and indexing. Integrated package 'bit' supports fast in-memory booleans: 'bit' (1-bit boolean), 'bitwhich' (asymetric booleans). The project summary page you can find here. presentations on available functionality Oehlschlägel (2010) Managing large datasets in R - ff examples and concepts. Invited presentation at Institute for Statistics and Mathematics, Vienna University of Economics and Business. Example source code Oehlschlägel, Adler (2009) Coordinating package 'ff' for large objects with R base. Presentation at The sixth international workshop on Directions in Statistical Computing (DSC 2009), Copenhagen Oehlschlägel, Adler (2009) Managing data.frames with package 'ff' and fast filtering with package 'bit'. Presentation at UseR!2009, Agrocampus, Rennes Adler, Oehlschlägel, Nenadic, Zucchini (2008) Large atomic data in R package 'ff'. Presentation at UseR!2008, statistics department, University of Dortmund Adler, Oehlschlägel, Nenadic, Zucchini (2008) High-Performance Processing of Large Data Sets via Memory Mapping: A Case Study in R And C++. Presentation at Joint Statistical Meetings, Denver, Colorado. presentations on future functionality Oehlschlägel, Adler, Nenadic, Zucchini (2008) A first glimpse into 'R.ff'. Presentation at UseR!2008, statistics department, University of Dortmund"	"null"	"null"	"Data structures designed to store large datasets."	"true"
"Data Manipulation"	"lubridate"	"http://cran.r-project.org/web/packages/lubridate/index.html"	"A set of functions to work with dates and times."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"238"	"33"	"87"	"GitHub - hadley/lubridate: Make working with dates in R just that little bit easier Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 33 Star 238 Fork 87 hadley/lubridate Code Issues 31 Pull requests 1 Pulse Graphs Make working with dates in R just that little bit easier 1,164 commits 4 branches 11 releases 31 contributors R 82.8% TeX 13.9% C 3.2% Emacs Lisp 0.1% R TeX C Emacs Lisp Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags S4version coverage master travis-update Nothing to show v1.5.6 v1.5.0 v1.4.0 v1.3.3 v1.3.0 v1.2.0 v1.1.0 v0.2.6 v0.2.1 v0.2.0 v0.2 Nothing to show New pull request Latest commit 72a9081 Jul 14, 2016 vspinu committed on GitHub Merge pull request #431 from arneschillert/master … Fix typos in documentation. Permalink Failed to load latest commit information. R Fix typos in documentation. Jul 13, 2016 data Recompress data Jan 2, 2012 inst New testthat conventions - move tests into `test/testthat` Apr 28, 2015 man [Fix #420] Fix as.numeric on periods and don't show ""estimate only"" m… Jun 26, 2016 paper Refactor constructors and deprecate new_interval, new_period, new_dur… Nov 29, 2015 po Italian translation May 2, 2013 src [Fix #425] Restrict C parser Y format to 4 digits Jun 26, 2016 tests [Fix #425] Restrict C parser Y format to 4 digits Jun 25, 2016 vignettes Fix documentation Jan 30, 2015 .Rbuildignore Add CRAN_notes.md to .gitignore Apr 5, 2016 .dir-locals.el Update .dir-locals to remove white spaces on save Mar 13, 2016 .gitignore Add CRAN_notes.md to .gitignore Apr 5, 2016 .travis.yml Add covr to Suggests Mar 13, 2016 DESCRIPTION Bump version Apr 19, 2016 INSPIRATIONS added deprecation for internal function parse_date Jul 30, 2012 NAMESPACE Make a specialized C routine for make_date May 5, 2016 NEWS.md Update NEWS.md for recent changes Jun 26, 2016 README.md Use canonical CRAN link Apr 6, 2016 lubridate.Rproj Project file updates May 13, 2015 README.md lubridate Date-time data can be frustrating to work with in R. R commands for date-times are generally unintuitive and change depending on the type of date-time object being used. Moreover, the methods we use with date-times must be robust to time zones, leap days, daylight savings times, and other time related quirks, and R lacks these capabilities in some situations. Lubridate makes it easier to do the things R does with date-times and possible to do the things R does not. Specifically, lubridate provides: a set of intuitive date-time related functions that work the same way for all common date-time classes (including those from chron, timeDate, zoo, xts, its, tis, timeSeries, fts, and tseries) quick and easy parsing of date-times: ymd(), dmy(), mdy(), ... simple functions to extract and modify components of a date-time, such as years, months, days, hours, minutes, and seconds: year(), month(), day(), ... helper functions for handling time zones: with_tz(), force_tz() Lubridate also expands the type of mathematical operations that can be performed with date-time objects. It introduces three new time span classes borrowed from http://joda.org. durations, which measure the exact amount of time between two points periods, which accurately track clock times despite leap years, leap seconds, and day light savings time intervals, a protean summary of the time information between two points Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/lubridate"	"A set of functions to work with dates and times."	"true"
"Data Manipulation"	"stringi"	"http://www.rexamine.com/resources/stringi/"	"ICU based string processing package."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"64"	"13"	"10"	"GitHub - gagolews/stringi: THE string processing package for R with ICU Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 13 Star 64 Fork 10 gagolews/stringi Code Issues 44 Pull requests 0 Pulse Graphs THE string processing package for R with ICU http://stringi.rexamine.com/ 1,160 commits 2 branches 9 releases Fetching contributors C++ 62.9% C 22.9% HTML 9.4% R 4.5% M4 0.2% Objective-C 0.1% C++ C HTML R M4 Objective-C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags fix_for_176 master Nothing to show v1.0-1 v0.5-3 v0.5-2 v0.4-1 v0.3-1 v0.2-5 v0.2-4 v0.2-3 v0.1-25 Nothing to show New pull request Latest commit 9c5c972 May 25, 2016 gagolews v1.1.1 -> CRAN Permalink Failed to load latest commit information. R upd meta May 3, 2016 devel v1.1.1 -> CRAN May 25, 2016 inst prepping CRAN submission May 25, 2016 m4 autoconf upgrade Mar 1, 2015 man upd meta May 3, 2016 src close #175 Feb 7, 2016 .Rbuildignore remove src/icu52 Jun 25, 2015 .gitignore setDataDirectory no longer called if our ICU src bundle is not used Jun 23, 2015 .travis.yml Update NEWS May 3, 2016 DESCRIPTION prepping CRAN submission May 25, 2016 INSTALL v1.1.1 -> CRAN May 25, 2016 LICENSE copyright year 2016 Feb 2, 2016 NAMESPACE close #175 Feb 7, 2016 NEWS v1.1.1 -> CRAN May 25, 2016 README.md Update README May 3, 2016 aclocal.m4 autoconf upgrade Mar 1, 2015 cleanup #69: updating to ICU4C 55.1 Apr 2, 2015 configure upd meta May 9, 2016 configure.ac upd meta May 9, 2016 configure.win setDataDirectory no longer called if our ICU src bundle is not used Jun 23, 2015 README.md stringi THE string processing package for R stringi is THE R package for very fast, correct, consistent, and convenient string/text processing in each locale and any native character encoding. The use of the ICU library gives R users a platform-independent set of functions known to Java, Perl, Python, PHP and Ruby programmers. The package's API was inspired by Hadley Wickham's stringr package. Package maintainer: Marek Gagolewski Authors: Marek Gagolewski, with contributions from Bartlomiej Tartanus. This git repository also contains a custom subset of ICU4C 55.1 source code which is copyrighted by IBM and others. A binary version of the Unicode Character Database is included. For more details on copyright holders see the LICENSE file. Homepage: http://www.gagolewski.com/software/stringi/ CRAN entry: http://cran.r-project.org/web/packages/stringi/ Online manual: http://www.gagolewski.com/software/stringi/manual/ How to access the stringi C API from an Rcpp-based R package System requirements: R >= 2.13.1, ICU4C >= 50 (refer to the INSTALL file for more details) License: BSD-3-clause, for more details see the LICENSE file. stringi's source code itself is released under the BSD-3-clause license, which is 100% open source compatible. Such a license has been verified as GPL-compatible by the Free Software Foundation. The reason for using BSD-3-clause is that we include full source code of the ICU library, which has its own license. The ICU projects are covered by the ICU license, a simple, permissive non-copyleft free software license, compatible with the GNU GPL. The ICU license is intended to allow ICU to be included both in free software projects and in proprietary or commercial products. Changes: see the NEWS file. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/gagolews/stringi"	"ICU based string processing package."	"true"
"Data Manipulation"	"stringr"	"https://github.com/hadley/stringr"	"Consistent API for string processing, built on top of stringi."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"135"	"21"	"45"	"GitHub - hadley/stringr: Wrapper for R string functions to make them more consistent, simpler and easier to use Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 135 Fork 45 hadley/stringr Code Issues 12 Pull requests 0 Pulse Graphs Wrapper for R string functions to make them more consistent, simpler and easier to use 267 commits 2 branches 8 releases Fetching contributors R 99.3% Other 0.7% R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master stringi Nothing to show v1.0.0 stringr-0.6.2 stringr-0.6 stringr-0.5 stringr-0.4 stringr-0.3 stringr-0.2 string-0.1 Nothing to show New pull request Latest commit a67f8f0 Nov 5, 2015 hadley Add simplify arg to str_split Permalink Failed to load latest commit information. R Add simplify arg to str_split Nov 5, 2015 inst/htmlwidgets str_view html widget Oct 27, 2015 man Add simplify arg to str_split Nov 5, 2015 revdep Final revdep checks Apr 28, 2015 tests Style tweaks to string interpolation. Nov 2, 2015 vignettes Typo in vignette May 6, 2015 .Rbuildignore Start preparing cran notes Dec 5, 2014 .gitignore Convert R journal article to vignette Nov 28, 2014 .travis.yml Use code coverage Oct 30, 2015 DESCRIPTION Upgrade roxygen2 Oct 29, 2015 NAMESPACE Implement str_trunc. Nov 2, 2015 NEWS.md Add simplify arg to str_split Nov 5, 2015 README.md Add CRAN status badge Oct 30, 2015 cran-comments.md Use person(), not as.person() Apr 29, 2015 stringr.Rproj Set up package options Feb 10, 2014 README.md stringr Strings are not glamorous, high-profile components of R, but they do play a big role in many data cleaning and preparations tasks. R provides a solid set of string operations, but because they have grown organically over time, they can be inconsistent and a little hard to learn. Additionally, they lag behind the string operations in other programming languages, so that some things that are easy to do in languages like Ruby or Python are rather hard to do in R. The stringr package aims to remedy these problems by providing a clean, modern interface to common string operations. More concretely, stringr: Uses consistent functions and argument names. Simplifies string operations by eliminating options that you don't need 95% of the time. Produces outputs than can easily be used as inputs. This includes ensuring that missing inputs result in missing outputs, and zero length inputs result in zero length outputs. Is built on top of stringi which uses the ICU library to provide fast, correct implementations of common string manipulations Installation To get the current released version from CRAN: install.packages(""stringr"") To get the current development version from github: # install.packages(""devtools"") devtools::install_github(""Rexamine/stringi"") devtools::install_github(""hadley/stringr"") Piping stringr provides the pipe, %>%, from magrittr to make it easy to string together sequences of string operations: letters %>%   str_pad(5, ""right"") %>%   str_c(letters) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/stringr"	"Consistent API for string processing, built on top of stringi."	"true"
"Data Manipulation"	"bigmemory"	"http://cran.r-project.org/web/packages/bigmemory/index.html"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package bigmemory bigmemory: Manage Massive Matrices with Shared Memory and Memory-Mapped Files Create, store, access, and manipulate massive matrices. Matrices are allocated to shared memory and may use memory-mapped files. Packages 'biganalytics', 'bigtabulate', 'synchronicity', and 'bigalgebra' provide advanced functionality. Version: 4.5.19 Depends: R (≥ 3.2.0), methods, utils, bigmemory.sri Imports: Rcpp LinkingTo: BH, Rcpp Suggests: knitr, testthat Enhances: biganalytics, bigtabulate, synchronicity Published: 2016-03-28 Author: Michael J. Kane, John W. Emerson, Peter Haverty, and Charles Determan Jr. Maintainer: Michael J. Kane <bigmemoryauthors at gmail.com> Contact: Mike, Jay, and Charles <bigmemoryauthors@gmail.com> BugReports: NA License: LGPL-3 | Apache License 2.0 URL: http://www.bigmemory.org NeedsCompilation: yes Citation: bigmemory citation info Materials: NEWS In views: HighPerformanceComputing CRAN checks: bigmemory results Downloads: Reference manual: bigmemory.pdf Vignettes: The Bigmemory Project Overview Package source: bigmemory_4.5.19.tar.gz Windows binaries: r-devel: bigmemory_4.5.19.zip, r-release: bigmemory_4.5.19.zip, r-oldrel: bigmemory_4.5.19.zip OS X Mavericks binaries: r-release: bigmemory_4.5.19.tgz, r-oldrel: bigmemory_4.5.19.tgz Old sources: bigmemory archive Reverse dependencies: Reverse depends: bigalgebra, biganalytics, biglasso, bigpca, bigtabulate, GHap Reverse imports: CollapsABEL, geneSLOPE, mbest, multiplyr, Rdsm, s2dverification Reverse linking to: bigalgebra, biganalytics, biglasso, bigtabulate, sgd Reverse suggests: bio3d, filematrix, matpow, mlDNA, nat.nblast, NMF, polmineR, PopGenome, rsgcc, sgd Reverse enhances: bigmemory.sri"	"null"	"null"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"true"
"Data Manipulation"	"biglm"	"http://cran.r-project.org/web/packages/biglm/index.html"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package biglm biglm: bounded memory linear and generalized linear models Regression for data too large to fit in memory Version: 0.9-1 Depends: DBI, methods Suggests: RSQLite, RODBC Enhances: leaps Published: 2013-05-16 Author: Thomas Lumley Maintainer: Thomas Lumley <tlumley at u.washington.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: yes Materials: README NEWS In views: HighPerformanceComputing, SocialSciences CRAN checks: biglm results Downloads: Reference manual: biglm.pdf Package source: biglm_0.9-1.tar.gz Windows binaries: r-devel: biglm_0.9-1.zip, r-release: biglm_0.9-1.zip, r-oldrel: biglm_0.9-1.zip OS X Mavericks binaries: r-release: biglm_0.9-1.tgz, r-oldrel: biglm_0.9-1.tgz Old sources: biglm archive Reverse dependencies: Reverse depends: allan, biganalytics Reverse imports: cplm, freqweights, nhlscrapr Reverse suggests: broom, ff, ffbase, leaps, optmatch"	"null"	"null"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"true"
"Data Manipulation"	"bigrf"	"https://github.com/aloysius-lim/bigrf"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"76"	"9"	"25"	"GitHub - aloysius-lim/bigrf: Random forests for R for large data sets, optimized with parallel tree-growing and disk-based memory Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 9 Star 76 Fork 25 aloysius-lim/bigrf Code Issues 2 Pull requests 0 Pulse Graphs Random forests for R for large data sets, optimized with parallel tree-growing and disk-based memory 73 commits 1 branch 12 releases Fetching contributors R 62.8% C++ 37.2% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 0.1-12 0.1-11 0.1-10 0.1-9 0.1-8 0.1-7 0.1-6 0.1-5 0.1-4 0.1-3 0.1-2 0.1-1 Nothing to show New pull request Latest commit 8ea6c12 Oct 21, 2015 aloysius-lim Updated to version 0.1-12. Permalink Failed to load latest commit information. R The new version of bigmemory has a private function (getCType) that n… Oct 16, 2015 man Updated to version 0.1-12. Oct 21, 2015 src Fixed #3 - Segfault when building forest with only categorical data. Jun 28, 2013 .Rbuildignore Added README.md to .Rbuildignore. Updated version to 0.1-7. Sep 20, 2013 .gitignore First commit of bigrf project. Jan 31, 2013 DESCRIPTION Updated to version 0.1-12. Oct 21, 2015 NAMESPACE Removed BH package from Imports; now only in LinkingTo. Updated packa… May 16, 2014 NEWS Updated to version 0.1-12. Oct 21, 2015 README.md Updated package info. Updated to version 0.1-9. Feb 20, 2014 README.md bigrf This is an R implementation of Leo Breiman's and Adele Cutler's Random Forest algorithms for classification and regression, with optimizations for performance and for handling of data sets that are too large to be processed in memory. Forests can be built in parallel at two levels. First, trees can be grown in parallel on a single machine using foreach. Second, multiple forests can be built in parallel on multiple machines, then merged into one. For large data sets, disk-based big.matrix's may be used for storing data and intermediate computations, to prevent excessive virtual memory swapping by the operating system. Currently, only classification forests with a subset of the functionality in Breiman and Cutler's original code are implemented. More functionality and regression trees may be added in the future. Capabilities and Usage The main entry point for this package is bigrfc, which is used to build a classification random forest on the given training data and forest-building parameters. bigrfc returns the forest as an object of class ""bigcforest"", which contains the trees grown as objects of class ""bigctree"". After a forest is built, more trees can be grown using grow. Performance Optimizations For better performance, trees may be grown in parallel by registering an appropriate parallel backend for foreach. As an example, the following code uses the doParallel backend to enable tree-growing on all available cores on the machine. This code must be executed before calling bigrfc or grow. See the documentation for foreach for more details on supported parallel backends. library(doParallel) registerDoParallel(cores=detectCores(all.tests=TRUE))  Multiple random forests can also be built in parallel on multiple machines (using the same training data and parameters), then merged into one forest using merge. For large data sets, the training data, intermediate computations and some outputs (e.g. proximity matrices) may be cached on disk using ""big.matrix"" objects. This enables random forests to be built on fairly large data sets without hitting RAM limits, which will cause excessive virtual memory swapping by the operating system. Disk caching may be turned off for optimal performance on smaller data sets by setting function / method argument cachepath to NULL, causing the big.matrix's to be created in memory. Authors Original Fortran77 code by Leo Breiman and Adele Cutler. R port with disk caching and parallelization enhancements by Aloysius Lim. Licences bigrf is licensed under the GNU General Public License Version 3 (GPLv3). References Breiman, L. (2001). Random forests. Machine learning, 45(1), 5-32. Breiman, L. & Cutler, A. (n.d.). Random Forests. Retrieved from http://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm. Usage Examples # Classify cars in the Cars93 data set by type (Compact, Large, Midsize, # Small, Sporty, or Van).  # Load data. data(Cars93, package=""MASS"") x <- Cars93 y <- Cars93$Type  # Select variables with which to train model. vars <- c(4:22)  # Run model, grow 50 trees on the first 60 examples. forest1 <- bigrfc(x[1:60, ], y[1:60], ntree=50L, varselect=vars)  # Build a second forest. forest2 <- bigrfc(x[1:60, ], y[1:60], ntree=50L, varselect=vars)  # Merge the 2 forests. forest <- merge(forest1, forest2)  # Grow even more trees. forest <- grow(forest, x[1:60, ], ntree=30L)  # Get predictions for the remaining examples. predictions <- predict(forest, x[-(1:60), ], y[-(1:60)])  # Calculate variable importance, including those for each out-of-bag # example. importance <- varimp(forest, x[1:60, ], impbyexample=TRUE)  # Calculate variable importance using the fast (Gini) method. fastimportance <- fastimp(forest)  # Calculate variable interactions. inter <- interactions(forest)  # Calculate proximity matrix and first two scaling co-ordinates. prox <- proximities(forest) scale <- scaling(prox)  # Plot the 1st vs 2nd scaling co-ordinates. plot(scale, col=as.integer(y) + 2, pch=as.integer(y) + 2)  # Calculate outlier scores, and circle the top 20% percent of them in red. outscores <- outliers(forest) points(scale[outscores > quantile(outscores, probs=0.8), ], col=2, pch=1,        cex=1.5)  # Compute prototypes. prot <- prototypes(forest, prox, x=x[1:60, ])  # Plot first prototypes, using one colour for each class. plot(seq_along(vars), prot$prot.std[1, 1, , 2], type=""l"", col=1,      ylim=c(min(prot$prot.std[, 1, , 2]), max(prot$prot.std[, 1, , 2]))) for (i in 2:length(levels(y))) {     lines(seq_along(vars), prot$prot.std[i, 1, , 2], type=""l"", col=i) }  # Plot first prototype for class 1, including quartile values for numeric # variables. plot(seq_along(vars), prot$prot.std[1, 1, , 1], type=""l"", col=1,      ylim=c(min(prot$prot.std[1, 1, , ]), max(prot$prot.std[1, 1, , ]))) for (i in 2:3) {     lines(seq_along(vars), prot$prot.std[1, 1, , i], type=""l"", col=i) }  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/aloysius-lim/bigrf"	"Shared memory and memory-mapped matrices. The big* pacakges provide additional tools including linear models () and Random Forests ()."	"true"
"Data Manipulation"	"fuzzyjoin"	"https://github.com/dgrtwo/fuzzyjoin"	"Join tables together on inexact matching."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"152"	"11"	"14"	"GitHub - dgrtwo/fuzzyjoin: Join tables together on inexact matching Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 11 Star 152 Fork 14 dgrtwo/fuzzyjoin Code Issues 3 Pull requests 0 Pulse Graphs Join tables together on inexact matching 57 commits 1 branch 2 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.1.1 v0.1 Nothing to show New pull request Latest commit 8dec71d Jul 7, 2016 dgrtwo Whoops- actual fix of #13 Permalink Failed to load latest commit information. R Whoops- actual fix of #13 Jul 7, 2016 README-fig Used janeaustenr package on CRAN Apr 15, 2016 data Removed non-ASCII characters in misspellings dataset. Mar 21, 2016 man Fixed fuzzy_join operations to ignore groups, but to preserve groups … Jun 27, 2016 tests Added drop = TRUE, which for data.frames (rather than tbl_dfs) allows… Jul 7, 2016 vignettes Added NEWS, copied the stringdist example to the vignettes Apr 5, 2016 .Rbuildignore Added code of conduct Jun 27, 2016 .gitignore Added NEWS, copied the stringdist example to the vignettes Apr 5, 2016 .travis.yml Add codecov May 10, 2016 CONDUCT.md Added code of conduct Jun 27, 2016 DESCRIPTION Added version and NEWS bump Jul 7, 2016 LICENSE Fixed LICENSE Mar 21, 2016 NAMESPACE Few changes to handle CRAN Apr 5, 2016 NEWS.md Added version and NEWS bump Jul 7, 2016 README.Rmd Fixed canonical URL in README Jun 27, 2016 README.md Fixed canonical URL in README Jun 27, 2016 appveyor.yml Added AppVeyor continuous integration Jun 23, 2016 cran-comments.md Updated cran-comments.md Jun 27, 2016 fuzzyjoin.Rproj Initial draft of package Mar 8, 2016 README.md fuzzyjoin: Join data frames on inexact matching The fuzzyjoin package is a variation on dplyr's join operations that allows matching not just on values that match between columns, but on inexact matching. This allows matching on: Numeric values that are within some tolerance (difference_inner_join) Strings that are similiar in Levenshtein/cosine/Jaccard distance, or other metrics from the stringdist package (stringdist_inner_join) A regular expression in one column matching to another (regex_inner_join) Euclidean or Manhattan distance across multiple columns (distance_join) Geographic distance based on longitude and latitude (geo_join) One relevant use case is for classifying freeform text data (such as survey responses) against a finite set of options. The package also includes: For each of regex_, stringdist_, difference_, distance_ and geo_, variations for the six dplyr ""join"" operations- for example, regex_inner_join (include only rows with matches in each) regex_left_join (include all rows of left table) regex_right_join (include all rows of right table) regex_full_join (include all rows in each table) regex_semi_join (filter left table for rows with matches) regex_anti_join (filter left table for rows without matches) A general wrapper (fuzzy_join) that allows you to define your own custom fuzzy matching function. The option to include the calculated distance as a column in your output, using the distance_col argument Installation Install from CRAN with: install.packages(""fuzzyjoin"") You can also install the development version from GitHub using devtools: devtools::install_github(""dgrtwo/fuzzyjoin"") Example of stringdist_inner_join: Correcting misspellings against a dictionary Often you find yourself with a set of words that you want to combine with a ""dictionary""- it could be a literal dictionary (as in this case) or a domain-specific category system. But you want to allow for small differences in spelling or punctuation. The fuzzyjoin package comes with a set of common misspellings (from Wikipedia): library(dplyr) library(fuzzyjoin) data(misspellings)  misspellings #> Source: local data frame [4,505 x 2] #>  #>    misspelling    correct #>          (chr)      (chr) #> 1   abandonned  abandoned #> 2    aberation aberration #> 3     abilties  abilities #> 4       abilty    ability #> 5      abondon    abandon #> 6       abbout      about #> 7        abotu      about #> 8       abouta    about a #> 9      aboutit   about it #> 10    aboutthe  about the #> ..         ...        ... # use the dictionary of words from the qdapDictionaries package, # which is based on the Nettalk corpus. library(qdapDictionaries) words <- tbl_df(DICTIONARY)  words #> Source: local data frame [20,137 x 2] #>  #>     word syllables #>    (chr)     (dbl) #> 1     hm         1 #> 2    hmm         1 #> 3   hmmm         1 #> 4   hmph         1 #> 5  mmhmm         2 #> 6   mmhm         2 #> 7     mm         1 #> 8    mmm         1 #> 9   mmmm         1 #> 10   pff         1 #> ..   ...       ... As an example, we'll pick 1000 of these words (you could try it on all of them though), and use stringdist_inner_join to join them against our dictionary. set.seed(2016) sub_misspellings <- misspellings %>%   sample_n(1000) joined <- sub_misspellings %>%   stringdist_inner_join(words, by = c(misspelling = ""word""), max_dist = 1) By default, stringdist_inner_join uses optimal string alignment (Damerau–Levenshtein distance), and we're setting a maximum distance of 1 for a join. Notice that they've been joined in cases where misspelling is close to (but not equal to) word: joined #> Source: local data frame [728 x 4] #>  #>    misspelling correct    word syllables #>          (chr)   (chr)   (chr)     (dbl) #> 1        sould  should   could         1 #> 2        sould  should  should         1 #> 3        sould  should    sold         1 #> 4        sould  should    soul         1 #> 5        sould  should   sound         1 #> 6        sould  should   would         1 #> 7        fiels   feels   field         1 #> 8        fiels   feels    fils         1 #> 9     conscent consent consent         2 #> 10       fleed   freed   bleed         1 #> ..         ...     ...     ...       ... Classification accuracy Note that there are some redundancies; words that could be multiple items in the dictionary. These end up with one row per ""guess"" in the output. How many words did we classify? joined %>%   count(misspelling, correct) #> Source: local data frame [455 x 3] #> Groups: misspelling [?] #>  #>    misspelling      correct     n #>          (chr)        (chr) (int) #> 1    abritrary    arbitrary     1 #> 2    accademic     academic     1 #> 3    accension    ascension     2 #> 4   accessable   accessible     1 #> 5     accidant     accident     1 #> 6  accidentaly accidentally     1 #> 7    accordeon    accordion     1 #> 8       addopt        adopt     1 #> 9    addtional   additional     1 #> 10  admendment    amendment     1 #> ..         ...          ...   ... So we found a match in the dictionary for about half of the misspellings. In how many of the ones we classified did we get at least one of our guesses right? which_correct <- joined %>%   group_by(misspelling, correct) %>%   summarize(guesses = n(), one_correct = any(correct == word))  which_correct #> Source: local data frame [455 x 4] #> Groups: misspelling [?] #>  #>    misspelling      correct guesses one_correct #>          (chr)        (chr)   (int)       (lgl) #> 1    abritrary    arbitrary       1        TRUE #> 2    accademic     academic       1        TRUE #> 3    accension    ascension       2        TRUE #> 4   accessable   accessible       1        TRUE #> 5     accidant     accident       1        TRUE #> 6  accidentaly accidentally       1       FALSE #> 7    accordeon    accordion       1        TRUE #> 8       addopt        adopt       1        TRUE #> 9    addtional   additional       1        TRUE #> 10  admendment    amendment       1        TRUE #> ..         ...          ...     ...         ...  # percentage of guesses getting at least one right mean(which_correct$one_correct) #> [1] 0.8527473  # number uniquely correct (out of the original 1000) sum(which_correct$guesses == 1 & which_correct$one_correct) #> [1] 294 Not bad. Reporting distance in the joined output If you wanted to include the distance as a column in your output, you can use the distance_col argument. For example, we may be interested in how many words were two letters apart. joined_dists <- sub_misspellings %>%   stringdist_inner_join(words, by = c(misspelling = ""word""), max_dist = 2,                         distance_col = ""distance"")  joined_dists #> Source: local data frame [7,427 x 5] #>  #>    misspelling    correct       word syllables distance #>          (chr)      (chr)      (chr)     (dbl)    (dbl) #> 1   charactors characters  character         3        2 #> 2   charactors characters charactery         4        2 #> 3        sould     should       auld         1        2 #> 4        sould     should       bold         1        2 #> 5        sould     should      bound         1        2 #> 6        sould     should       cold         1        2 #> 7        sould     should      could         1        1 #> 8        sould     should       fold         1        2 #> 9        sould     should       foul         1        2 #> 10       sould     should      found         1        2 #> ..         ...        ...        ...       ...      ... Note the extra distance column, which in this case will always be less than or equal to 2. We could then pick the closest match for each, and examine how many of our closest matches were 1 or 2 away: closest <- joined_dists %>%   group_by(misspelling) %>%   top_n(1, desc(distance))  closest #> Source: local data frame [1,437 x 5] #> Groups: misspelling [721] #>  #>     misspelling      correct        word syllables distance #>           (chr)        (chr)       (chr)     (dbl)    (dbl) #> 1    charactors   characters   character         3        2 #> 2    charactors   characters  charactery         4        2 #> 3         sould       should       could         1        1 #> 4         sould       should      should         1        1 #> 5         sould       should        sold         1        1 #> 6         sould       should        soul         1        1 #> 7         sould       should       sound         1        1 #> 8         sould       should       would         1        1 #> 9  incorportaed incorporated incorporate         4        2 #> 10         awya         away          aa         2        2 #> ..          ...          ...         ...       ...      ...  closest %>%   count(distance) #> Source: local data frame [3 x 2] #>  #>   distance     n #>      (dbl) (int) #> 1        0     1 #> 2        1   725 #> 3        2   711 Other joining functions Note that stringdist_inner_join is not the only function we can use. If we're interested in including the words that we couldn't classify, we could have use stringdist_left_join: left_joined <- sub_misspellings %>%   stringdist_left_join(words, by = c(misspelling = ""word""), max_dist = 1)  left_joined #> Source: local data frame [1,273 x 4] #>  #>     misspelling      correct   word syllables #>           (chr)        (chr)  (chr)     (dbl) #> 1    charactors   characters     NA        NA #> 2    Brasillian    Brazilian     NA        NA #> 3         sould       should  could         1 #> 4         sould       should should         1 #> 5         sould       should   sold         1 #> 6         sould       should   soul         1 #> 7         sould       should  sound         1 #> 8         sould       should  would         1 #> 9   belligerant  belligerent     NA        NA #> 10 incorportaed incorporated     NA        NA #> ..          ...          ...    ...       ...  left_joined %>%   filter(is.na(word)) #> Source: local data frame [545 x 4] #>  #>     misspelling      correct  word syllables #>           (chr)        (chr) (chr)     (dbl) #> 1    charactors   characters    NA        NA #> 2    Brasillian    Brazilian    NA        NA #> 3   belligerant  belligerent    NA        NA #> 4  incorportaed incorporated    NA        NA #> 5          awya         away    NA        NA #> 6      occuring    occurring    NA        NA #> 7   surveilence surveillance    NA        NA #> 8     abondoned    abandoned    NA        NA #> 9      alledges      alleges    NA        NA #> 10  deliberatly deliberately    NA        NA #> ..          ...          ...   ...       ... (To get just the ones without matches immediately, we could have used stringdist_anti_join). If we increase our distance threshold, we'll increase the fraction with a correct guess, but also get more false positive guesses: left_joined2 <- sub_misspellings %>%   stringdist_left_join(words, by = c(misspelling = ""word""), max_dist = 2)  left_joined2 #> Source: local data frame [7,691 x 4] #>  #>    misspelling    correct       word syllables #>          (chr)      (chr)      (chr)     (dbl) #> 1   charactors characters  character         3 #> 2   charactors characters charactery         4 #> 3   Brasillian  Brazilian         NA        NA #> 4        sould     should       auld         1 #> 5        sould     should       bold         1 #> 6        sould     should      bound         1 #> 7        sould     should       cold         1 #> 8        sould     should      could         1 #> 9        sould     should       fold         1 #> 10       sould     should       foul         1 #> ..         ...        ...        ...       ...  left_joined2 %>%   filter(is.na(word)) #> Source: local data frame [264 x 4] #>  #>      misspelling       correct  word syllables #>            (chr)         (chr) (chr)     (dbl) #> 1     Brasillian     Brazilian    NA        NA #> 2    belligerant   belligerent    NA        NA #> 3       occuring     occurring    NA        NA #> 4      abondoned     abandoned    NA        NA #> 5   correponding corresponding    NA        NA #> 6  archeaologist archaeologist    NA        NA #> 7    emmediately   immediately    NA        NA #> 8     possessess     possesses    NA        NA #> 9        unahppy       unhappy    NA        NA #> 10        Guilio        Giulio    NA        NA #> ..           ...           ...   ...       ... Most of the missing words here simply aren't in our dictionary. You can try other distance thresholds, other dictionaries, and other distance metrics (see [stringdist-metrics] for more). This function is especially useful on a domain-specific dataset, such as free-form survey input that is likely to be close to one of a handful of responses. Example of regex_inner_join: Classifying text based on regular expressions Consider the book Pride and Prejudice, by Jane Austen, which we can access through the janeaustenr package. We could split the books up into ""passages"" of 50 lines each. library(dplyr) library(stringr) library(janeaustenr)  passages <- data_frame(text = prideprejudice) %>%   group_by(passage = 1 + row_number() %/% 50) %>%   summarize(text = paste(text, collapse = "" ""))  passages #> Source: local data frame [249 x 2] #>  #>    passage #>      (dbl) #> 1        1 #> 2        2 #> 3        3 #> 4        4 #> 5        5 #> 6        6 #> 7        7 #> 8        8 #> 9        9 #> 10      10 #> ..     ... #> Variables not shown: text (chr) Suppose we wanted to divide the passages based on which character's name is mentioned in each. Character's names may differ in how they are presented, so we construct a regular expression for each and pair it with that character's name. characters <- readr::read_csv( ""character,character_regex Elizabeth,Elizabeth Darcy,Darcy Mr. Bennet,Mr. Bennet Mrs. Bennet,Mrs. Bennet Jane,Jane Mary,Mary Lydia,Lydia Kitty,Kitty Wickham,Wickham Mr. Collins,Collins Lady Catherine de Bourgh,de Bourgh Mr. Gardiner,Mr. Gardiner Mrs. Gardiner,Mrs. Gardiner Charlotte Lucas,(Charlotte|Lucas) "") Notice that for each character, we've defined a regular expression (sometimes allowing ambiguity, sometimes not) for detecting their name. Suppose we want to ""classify"" passages based on whether this regex is present. With fuzzyjoin's regex_inner_join function, we do: character_passages <- passages %>%   regex_inner_join(characters, by = c(text = ""character_regex"")) This combines the two data frames based on cases where the passages$text column is matched by the characters$character_regex column. (Note that the dataset with the text column must always come first). This results in: character_passages %>%   select(passage, character, text) #> Source: local data frame [1,097 x 3] #>  #>    passage       character #>      (dbl)           (chr) #> 1        1      Mr. Bennet #> 2        1            Jane #> 3        2      Mr. Bennet #> 4        2            Jane #> 5        2           Lydia #> 6        2 Charlotte Lucas #> 7        3       Elizabeth #> 8        3      Mr. Bennet #> 9        3     Mrs. Bennet #> 10       4      Mr. Bennet #> ..     ...             ... #> Variables not shown: text (chr) This shows that Mr. Bennet's name appears in passages 1, 2, 4, and 6, while Charlotte Lucas's appears in 3. Notice that having fuzzy-joined the datasets, some passages will end up duplicated (those with multiple names in them), while it's possible others will be missing entirely (those without names). We could ask which characters are mentioned in the most passages: character_passages %>%   count(character, sort = TRUE) #> Source: local data frame [14 x 2] #>  #>                   character     n #>                       (chr) (int) #> 1                 Elizabeth   217 #> 2                     Darcy   152 #> 3                      Jane   132 #> 4               Mrs. Bennet    88 #> 5                   Wickham    85 #> 6               Mr. Collins    77 #> 7                     Lydia    75 #> 8           Charlotte Lucas    68 #> 9                Mr. Bennet    53 #> 10                    Kitty    40 #> 11            Mrs. Gardiner    35 #> 12 Lady Catherine de Bourgh    26 #> 13             Mr. Gardiner    25 #> 14                     Mary    24 The data is also well suited to discover which characters appear in scenes together, and to cluster them to find groupings of characters (like in [this analysis]). passage_character_matrix <- character_passages %>%   group_by(passage) %>%   filter(n() > 1) %>%   reshape2::acast(character ~ passage, fun.aggregate = length, fill = 0)  passage_character_matrix <- passage_character_matrix / rowSums(passage_character_matrix)  h <- hclust(dist(passage_character_matrix, method = ""manhattan""))  plot(h) Other options for further analysis of this fuzzy-joined dataset include doing sentiment analysis on text surrounding each character's name, similar to Julia Silge's analysis here. Future Work A few things I'd like to work on: Shortcuts on string distance matching: If two strings are more than 1 character apart in length, the method is osa, and max_dist is 1, you don't even need to compare them. More examples: I've used this package in other powerful ways, but on proprietary data. I'm interested in ideas for use cases that can be provided as vignettes. Code of Conduct Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dgrtwo/fuzzyjoin"	"Join tables together on inexact matching."	"true"
"Graphic Displays"	"ggplot2"	"https://github.com/hadley/ggplot2"	"An implementation of the Grammar of Graphics."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1916"	"244"	"724"	"GitHub - hadley/ggplot2: An implementation of the Grammar of Graphics in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 244 Star 1,916 Fork 724 hadley/ggplot2 Code Issues 80 Pull requests 31 Wiki Pulse Graphs An implementation of the Grammar of Graphics in R http://ggplot2.org 3,473 commits 12 branches 21 releases 76 contributors R 99.8% HTML 0.2% R HTML Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags develop feature/facet-refresh fix/axis fix/guides fix/scales gh-pages margins master minor_breaks patch-1 quantile-fixes r2d3 Nothing to show v2.1.0 v2.0.0 v1.0.1 v1.0.0 show ggplot2-0.9.3.1 ggplot2-0.9.3 ggplot2-0.9.2.1 ggplot2-0.9.2 ggplot2-0.9.1 ggplot2-0.9.0 ggplot2-0.8.9 ggplot2-0.8.8 ggplot2-0.8.7 ggplot2-0.8.6 ggplot2-0.8.5 ggplot2-0.8.3 ggplot2-0.8.2 ggplot2-0.8.1 ggplot2-0.8 ggplot2-0.7 Nothing to show New pull request Latest commit b181e9a May 16, 2016 hadley Merge pull request #1636 from jennybc/patch-2 … svg badge; rationalize+https mailing list link Permalink Failed to load latest commit information. R More source -> caption changes Mar 15, 2016 data-raw Add new txhousing dataset Aug 20, 2015 data Add new txhousing dataset Aug 20, 2015 inst Prepare for CRAN release Feb 26, 2016 man More source -> caption changes Mar 15, 2016 revdep Prepare for next submission Feb 29, 2016 tests name change to 'caption' Mar 15, 2016 vignettes Merge pull request #1488 from Thell/patch-2 Jan 25, 2016 visual_test Merge branch 'master' of github.com:hadley/ggplot2 Dec 12, 2015 .Rbuildignore Start release process Feb 10, 2016 .gitattributes Avoid merge conflicts in NEWS file Feb 25, 2014 .gitignore annotations & style fixes Mar 14, 2016 .travis.yml Update travis Feb 26, 2016 CONTRIBUTING.md Turn development vignette into CONTRIBUTING.md Jul 23, 2015 DESCRIPTION Improve dontrun usage Feb 26, 2016 NAMESPACE Massive binning refactoring Feb 4, 2016 NEWS Added ""borders accepts xlim and ylim"" to NEWS.md instead of NEWS Nov 2, 2015 NEWS.md trying to un-confuse git Mar 15, 2016 README.md svg badge; rationalize+https mailing list link May 15, 2016 cran-comments.md Prepare for next submission Feb 29, 2016 ggplot2.Rproj Enable --run-donttest Jan 18, 2016 README.md ggplot2 ggplot2 is a plotting system for R, based on the grammar of graphics, which tries to take the good parts of base and lattice graphics and avoid bad parts. It takes care of many of the fiddly details that make plotting a hassle (like drawing legends) as well as providing a powerful model of graphics that makes it easy to produce complex multi-layered graphics. Find out more at http://ggplot2.org, and check out the nearly 500 examples of ggplot in use. If you're interested, you can also sign up to the ggplot2 mailing list at https://groups.google.com/group/ggplot2. Installation Get the released version from CRAN: install.packages(""ggplot2"") Or the development version from github: # install.packages(""devtools"") devtools::install_github(""hadley/ggplot2"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/ggplot2"	"An implementation of the Grammar of Graphics."	"true"
"Graphic Displays"	"ggfortify"	"https://github.com/sinhrks/ggfortify"	"A unified interface to ggplot2 popular statistical packages using one line of code."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"203"	"22"	"28"	"GitHub - sinhrks/ggfortify: Define fortify and autoplot functions to allow ggplot2 to handle some popular R packages. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 22 Star 203 Fork 28 sinhrks/ggfortify Code Issues 11 Pull requests 2 Wiki Pulse Graphs Define fortify and autoplot functions to allow ggplot2 to handle some popular R packages. 241 commits 5 branches 5 releases 3 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags htest master r6 rdevel roxygen Nothing to show v0.2.0 v0.1.0 v0.0.4 v0.0.2 v0.0.1 Nothing to show New pull request Latest commit 45b93dc Jun 18, 2016 sinhrks committed on GitHub Merge pull request #118 from sinhrks/roxygen … Updated Rd files using updated roxygen lib Permalink Failed to load latest commit information. R add imports and escape UTF-8 characters May 25, 2016 man Updated Rd files using updated roxygen lib Jun 17, 2016 tests TST: fix forecast tests Apr 17, 2016 vignettes REL: v0.2.0 Jun 2, 2016 .Rbuildignore DOC: Render Chinese vignettes Nov 21, 2015 .gitignore ENH: Support maps package Jan 17, 2016 .travis.yml TST: Fix dplyr dev installation causes inf loop Jun 11, 2016 DESCRIPTION REL: Bump to 0.2.0.9000 Jun 11, 2016 NAMESPACE Updated Rd files using updated roxygen lib Jun 18, 2016 NEWS.rst Release log for v0.2.0 Jun 17, 2016 README.rst Update README.rst Jun 17, 2016 ggfortify.Rproj BUG/COMPAT: fix autoplot label issue caused by dplyr spec change Feb 9, 2015 README.rst ggfortify Define fortify and autoplot functions to allow ggplot2 to handle some popular R packages. Note: For functions which returns list, ggfortify tries to infer a background class using its attribute names. Such functions are marked as ""(inference)"". This covers following classes: base::matrix base::table (supports fortify only) cluster::clara cluster::fanny cluster::pam changepoint::cpt dlm::dlmFilter dlm::dlmSmooth (inference) fGarch::fGARCH forecast::bats forecast::forecast forecast::ets forecast::nnetar fracdiff::fracdiff glmnet::cv.glmnet glmnet::glmnet KFAS::KFS KFAS::signal (inference) lfda::lfda lfda::klfda lfda::self maps::map MASS::isoMDS (inference) MASS::sammon (inference) sp::Line sp::Lines sp::Polygon sp::Polygons sp::SpatialLines sp::SpatialLinesDataFrame sp::SpatialPoints sp::SpatialPointsDataFrame sp::SpatialPolygons sp::SpatialPolygonsDataFrame stats::acf stats::ar stats::Arima stats::cmdscale (inference) stats::decomposed.ts stats::density stats::factanal stats::glm stats::HoltWinters stats::kmeans stats::lm stats::prcomp stats::princomp stats::spec stats::stepfun stats::stl stats::ts survival::survfit survival::survfit.cox strucchange::breakpoints strucchange::breakpointsfull timeSeries::timeSeries tseries::irts vars::varprd xts::xts zoo::zooreg Installation Install the latest stable release from CRAN: install.packages('ggfortify')  Install the development version from Github: library(devtools) install_github('sinhrks/ggfortify')  Helper Functions ggdistribution to plot PDF/CDF ggcpgram to plot cpgram gglagplot to plot lag.plot ggtsdiag to plot tsdiag ggfreqplot to generalize monthplot Examples Concepts and Basics of ggfortify Plotting Diagnostics for LM and GLM with ggplot2 and ggfortify Plotting Time Series with ggplot2 and ggfortify Plotting PCA, clustering, LFDA and MDS Plotting Survival Curves using ggplot2 and ggfortify Plotting Probability Distributions with ggplot2 and ggfortify One Line of Code to ggplot2 Popular R Packages (Chinese) ggplot2 Families There are some useful plotting packages using ggplot2. ggfortify will not focus on area already covered by these packages. GGally ggdendro ggRandomForests ggmcmc Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/sinhrks/ggfortify"	"A unified interface to ggplot2 popular statistical packages using one line of code."	"true"
"Graphic Displays"	"ggrepel"	"https://github.com/slowkow/ggrepel"	"Repel overlapping text labels away from each other."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"241"	"17"	"19"	"GitHub - slowkow/ggrepel: Repel overlapping text labels away from each other. Skip to content Personal Open source Business Explore Get started Sign in Pricing Blog Support Search GitHub This repository Watch 17 Star 241 Fork 19 slowkow/ggrepel Code Issues 14 Pull requests 2 Pulse Graphs 📍 Repel overlapping text labels away from each other. https://cran.r-project.org/package=ggrepel 99 commits 1 branch 12 releases Fetching contributors R 68.3% C++ 31.7% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 0.5 0.4.6 0.4.5 0.4.4 0.4.3 0.4.2 0.4.1 0.4 0.3.1 0.3 0.2.0 0.1.0 Nothing to show New pull request Latest commit f7a13f2 May 27, 2016 slowkow Merge branch 'DarwinAwardWinner-nudge_as_aes' Permalink Failed to load latest commit information. R merge changes by @DarwinAwardWinner May 27, 2016 man merge changes by @DarwinAwardWinner May 27, 2016 src optimize cpp Feb 22, 2016 tests optimize cpp Feb 22, 2016 vignettes merge changes by @DarwinAwardWinner May 27, 2016 .Rbuildignore ignore travis and benchmark in .Rbuildignore Jan 10, 2016 .gitignore bump to 0.3 Jan 8, 2016 .travis.yml add .travis.yml Jan 10, 2016 DESCRIPTION specify scales version Apr 18, 2016 NAMESPACE add labelrepel files Feb 5, 2016 NEWS bump to 0.5.1 Feb 22, 2016 README.md Update README.md Jan 12, 2016 ggrepel.Rproj add source files Jan 3, 2016 README.md ggrepel ggrepel provides geoms for ggplot2 to repel overlapping text labels. library(ggplot2) library(ggrepel) ggplot(mtcars, aes(wt, mpg)) +   geom_point(color = 'red') +   geom_text_repel(aes(label = rownames(mtcars))) +   theme_classic(base_size = 16) Usage See the vignette for more usage examples. Also, look at the help pages: ?geom_text_repel ?geom_label_repel Installation Install the latest stable release from CRAN: install.packages(""ggrepel"") Alternatively, install the latest development version from github: install.packages(""devtools"") devtools::install_github(""slowkow/ggrepel"") Contributing Please submit an issue to report bugs or ask questions. Please contribute bug fixes or new features with a pull request to this repository. Related work directlabels This package is an attempt to make direct labeling a reality in everyday statistical practice by making available a body of useful functions that make direct labeling of common plots easy to do with high-level plotting systems such as lattice and ggplot2. The main function that the package provides is direct.label(p), which takes a lattice or ggplot2 plot p and adds direct labels. wordcloud Pretty word clouds. The wordcloud package implements a spiraling algorithm to prevent text labels from overlapping each other. FField Force field simulation of interaction of set of points. Very useful for placing text labels on graphs, such as scatterplots. I found that functions in the FField package were not ideal for repelling overlapping rectangles, so I wrote my own. See this gist for examples of how to use the wordcloud and FField packages with ggplot2. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/slowkow/ggrepel"	"Repel overlapping text labels away from each other."	"true"
"Graphic Displays"	"ggalt"	"https://github.com/hrbrmstr/ggalt"	"Extra Coordinate Systems, Geoms and Statistical Transformations for ggplot2."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"138"	"14"	"15"	"GitHub - hrbrmstr/ggalt: Extra Coordinate Systems, Geoms,  Statistical Transformations & Scales for 'ggplot2' Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 14 Star 138 Fork 15 hrbrmstr/ggalt Code Issues 9 Pull requests 1 Pulse Graphs 🌎 Extra Coordinate Systems, Geoms, Statistical Transformations & Scales for 'ggplot2' https://cran.rstudio.com/web/packages/ggalt/ggalt.pdf 69 commits 1 branch 1 release Fetching contributors R 99.8% TeX 0.2% R TeX Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.1.1 Nothing to show New pull request Latest commit 111bdcc Apr 17, 2016 hrbrmstr tweaked geom_dumbbell docs Permalink Failed to load latest commit information. .Rd2pdf5285 restored figures in the man pages Apr 9, 2016 R tweaked geom_dumbbell docs Apr 17, 2016 README_figs README Apr 11, 2016 inst/fonts geom_stateface Mar 20, 2016 man tweaked geom_dumbbell docs Apr 17, 2016 tests initial commit Sep 8, 2015 .Rbuildignore README Mar 20, 2016 .gitignore coord_proj tweaks + update docs Dec 29, 2015 .travis.yml fixing travis Jan 4, 2016 CONDUCT.md initial commit Sep 8, 2015 DESCRIPTION geom_dumbbell Apr 11, 2016 LICENSE initial commit Sep 8, 2015 NAMESPACE geom_dumbbell Apr 11, 2016 NEWS updated examples Apr 9, 2016 README.Rmd README Apr 11, 2016 README.md README Apr 11, 2016 Rplot.png geom_dumbbell Apr 11, 2016 ggalt.Rproj initial commit Sep 8, 2015 README.md ggalt : Extra Coordinate Systems, Geoms, Statistical Transformations, Scales & Fonts for 'ggplot2' A compendium of 'geoms', 'coords', 'stats', scales and fonts for 'ggplot2', including splines, 1d and 2d densities, univariate average shifted histograms, a new map coordinate system based on the 'PROJ.4'-library and the 'StateFace' open source font 'ProPublica'. The following functions are implemented: coord_proj : Like coord_map, only better 😜 geom_xspline : Connect control points/observations with an X-spline stat_xspline : Connect control points/observations with an X-spline geom_bkde : Display a smooth density estimate (uses KernSmooth::bkde) -- geom_stateface: Use ProPublica's StateFace font in ggplot2 plots- stat_bkde : Display a smooth density estimate (uses KernSmooth::bkde) geom_bkde2d : Contours from a 2d density estimate. (uses KernSmooth::bkde2D) stat_bkde2d : Contours from a 2d density estimate. (uses KernSmooth::bkde2D) stat_ash : Compute and display a univariate averaged shifted histogram (polynomial kernel) (uses ash::ash1/ash::bin1) -- geom_encircle: Automatically enclose points in a polygon scale_color_pokemon : scale_fill_pokemon : discrete pokemon scales (data taken from the hard work by the http://www.pokegraphs.com/) byte_format: + helpers. e.g. turn 10000 into 10 Kb geom_lollipop(): Dead easy lollipops (horizontal or vertical) geom_dumbberll() : Dead easy dumbbell plots Installation # you'll want to see the vignettes, trust me install.packages(""ggplot2"") install.packages(""ggalt"") # OR: devtools::install_github(""hrbrmstr/ggalt"") Usage library(ggplot2) library(gridExtra) library(ggalt)  # current verison packageVersion(""ggalt"") #> [1] '0.3.0.9000'  set.seed(1492) dat <- data.frame(x=c(1:10, 1:10, 1:10),                   y=c(sample(15:30, 10), 2*sample(15:30, 10), 3*sample(15:30, 10)),                   group=factor(c(rep(1, 10), rep(2, 10), rep(3, 10))) ) Splines! ggplot(dat, aes(x, y, group=group, color=group)) +   geom_point() +   geom_line() ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point() +   geom_line() +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(spline_shape=-0.4, size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(spline_shape=0.4, size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(spline_shape=1, size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(spline_shape=0, size=0.5) ggplot(dat, aes(x, y, group=group, color=factor(group))) +   geom_point(color=""black"") +   geom_smooth(se=FALSE, linetype=""dashed"", size=0.5) +   geom_xspline(spline_shape=-1, size=0.5) Alternate (better) density plots # bkde  data(geyser, package=""MASS"")  ggplot(geyser, aes(x=duration)) +    stat_bkde(alpha=1/2) #> Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +   geom_bkde(alpha=1/2) #> Bandwidth not specified. Using '0.14', via KernSmooth::dpik. ggplot(geyser, aes(x=duration)) +    stat_bkde(bandwidth=0.25) ggplot(geyser, aes(x=duration)) +   geom_bkde(bandwidth=0.25) set.seed(1492) dat <- data.frame(cond = factor(rep(c(""A"",""B""), each=200)),                     rating = c(rnorm(200),rnorm(200, mean=.8)))  ggplot(dat, aes(x=rating, color=cond)) + geom_bkde(fill=""#00000000"") #> Bandwidth not specified. Using '0.36', via KernSmooth::dpik. #> Bandwidth not specified. Using '0.31', via KernSmooth::dpik. ggplot(dat, aes(x=rating, fill=cond)) + geom_bkde(alpha=0.3) #> Bandwidth not specified. Using '0.36', via KernSmooth::dpik. #> Bandwidth not specified. Using '0.31', via KernSmooth::dpik. # ash  set.seed(1492) dat <- data.frame(x=rnorm(100)) grid.arrange(ggplot(dat, aes(x)) + stat_ash(),              ggplot(dat, aes(x)) + stat_bkde(),              ggplot(dat, aes(x)) + stat_density(),              nrow=3) #> Estimate nonzero outside interval ab. #> Bandwidth not specified. Using '0.43', via KernSmooth::dpik. cols <- RColorBrewer::brewer.pal(3, ""Dark2"") ggplot(dat, aes(x)) +    stat_ash(alpha=1/3, fill=cols[3]) +    stat_bkde(alpha=1/3, fill=cols[2]) +    stat_density(alpha=1/3, fill=cols[1]) +    geom_rug() +   labs(x=NULL, y=""density/estimate"") +   scale_x_continuous(expand=c(0,0)) +   theme_bw() +   theme(panel.grid=element_blank()) +   theme(panel.border=element_blank()) #> Estimate nonzero outside interval ab. #> Bandwidth not specified. Using '0.43', via KernSmooth::dpik. Alternate 2D density plots m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +        geom_point() +        xlim(0.5, 6) +        ylim(40, 110)  m + geom_bkde2d(bandwidth=c(0.5, 4)) m + stat_bkde2d(bandwidth=c(0.5, 4), aes(fill = ..level..), geom = ""polygon"") coord_proj LIVES! (still needs a teensy bit of work) world <- map_data(""world"") #>  #>  # ATTENTION: maps v3.0 has an updated 'world' map.        # #>  # Many country borders and names have changed since 1990. # #>  # Type '?world' or 'news(package=""maps"")'. See README_v3. # world <- world[world$region != ""Antarctica"",]  gg <- ggplot() gg <- gg + geom_map(data=world, map=world,                     aes(x=long, y=lat, map_id=region)) gg <- gg + coord_proj(""+proj=wintri"") gg ProPublica StateFace # Run show_stateface() to see the location of the TTF StateFace font # You need to install it for it to work  set.seed(1492) dat <- data.frame(state=state.abb,                   x=sample(100, 50),                   y=sample(100, 50),                   col=sample(c(""#b2182b"", ""#2166ac""), 50, replace=TRUE),                   sz=sample(6:15, 50, replace=TRUE),                   stringsAsFactors=FALSE) gg <- ggplot(dat, aes(x=x, y=y)) gg <- gg + geom_stateface(aes(label=state, color=col, size=sz)) gg <- gg + scale_color_identity() gg <- gg + scale_size_identity() gg Encircling points automagically d <- data.frame(x=c(1,1,2),y=c(1,2,2)*100)  gg <- ggplot(d,aes(x,y)) gg <- gg + scale_x_continuous(expand=c(0.5,1)) gg <- gg + scale_y_continuous(expand=c(0.5,1))  gg + geom_encircle(s_shape=1, expand=0) + geom_point() gg + geom_encircle(s_shape=1, expand=0.1, colour=""red"") + geom_point() gg + geom_encircle(s_shape=0.5, expand=0.1, colour=""purple"") + geom_point() gg + geom_encircle(data=subset(d, x==1), colour=""blue"", spread=0.02) +   geom_point() gg +geom_encircle(data=subset(d, x==2), colour=""cyan"", spread=0.04) +    geom_point() gg <- ggplot(mpg, aes(displ, hwy)) gg + geom_encircle(data=subset(mpg, hwy>40)) + geom_point() ss <- subset(mpg,hwy>31 & displ<2)  gg + geom_encircle(data=ss, colour=""blue"", s_shape=0.9, expand=0.07) +   geom_point() + geom_point(data=ss, colour=""blue"") Lollipop charts df <- read.csv(text=""category,pct Other,0.09 South Asian/South Asian Americans,0.12 Interngenerational/Generational,0.21 S Asian/Asian Americans,0.25 Muslim Observance,0.29 Africa/Pan Africa/African Americans,0.34 Gender Equity,0.34 Disability Advocacy,0.49 European/European Americans,0.52 Veteran,0.54 Pacific Islander/Pacific Islander Americans,0.59 Non-Traditional Students,0.61 Religious Equity,0.64 Caribbean/Caribbean Americans,0.67 Latino/Latina,0.69 Middle Eastern Heritages and Traditions,0.73 Trans-racial Adoptee/Parent,0.76 LBGTQ/Ally,0.79 Mixed Race,0.80 Jewish Heritage/Observance,0.85 International Students,0.87"", stringsAsFactors=FALSE, sep="","", header=TRUE)  library(ggplot2) library(ggalt) library(scales)  gg <- ggplot(df, aes(y=reorder(category, pct), x=pct)) gg <- gg + geom_lollipop(point.colour=""steelblue"", point.size=3, horizontal=TRUE) gg <- gg + scale_x_continuous(expand=c(0,0), labels=percent,                               breaks=seq(0, 1, by=0.2), limits=c(0, 1)) gg <- gg + labs(x=NULL, y=NULL,                  title=""SUNY Cortland Multicultural Alumni survey results"",                 subtitle=""Ranked by race, ethnicity, home land and orientation\namong the top areas of concern"",                 caption=""Data from http://stephanieevergreen.com/lollipop/"") gg <- gg + theme_minimal(base_family=""Arial Narrow"") gg <- gg + theme(panel.grid.major.y=element_blank()) gg <- gg + theme(panel.grid.minor=element_blank()) gg <- gg + theme(axis.line.y=element_line(color=""#2b2b2b"", size=0.15)) gg <- gg + theme(axis.text.y=element_text(margin=margin(r=-5, l=0))) gg <- gg + theme(plot.margin=unit(rep(30, 4), ""pt"")) gg <- gg + theme(plot.title=element_text(face=""bold"")) gg <- gg + theme(plot.subtitle=element_text(margin=margin(b=10))) gg <- gg + theme(plot.caption=element_text(size=8, margin=margin(t=10))) gg library(dplyr) library(tidyr) library(scales) library(ggplot2) library(ggalt) # devtools::install_github(""hrbrmstr/ggalt"")  health <- read.csv(""https://gist.githubusercontent.com/hrbrmstr/0d206070cea01bcb0118/raw/0ea32190a8b2f54b5a9770cb6582007132571c98/zhealth.csv"", stringsAsFactors=FALSE,                     header=FALSE, col.names=c(""pct"", ""area_id""))  areas <- read.csv(""https://gist.githubusercontent.com/hrbrmstr/0d206070cea01bcb0118/raw/0ea32190a8b2f54b5a9770cb6582007132571c98/zarea_trans.csv"", stringsAsFactors=FALSE, header=TRUE)  health %>%    mutate(area_id=trunc(area_id)) %>%    arrange(area_id, pct) %>%    mutate(year=rep(c(""2014"", ""2013""), 26),          pct=pct/100) %>%    left_join(areas, ""area_id"") %>%    mutate(area_name=factor(area_name, levels=unique(area_name))) -> health  setNames(bind_cols(filter(health, year==2014), filter(health, year==2013))[,c(4,1,5)],          c(""area_name"", ""pct_2014"", ""pct_2013"")) -> health   gg <- ggplot(health, aes(x=pct_2013, xend=pct_2014, y=area_name, group=area_name)) gg <- gg + geom_dumbbell(color=""#a3c4dc"", size=0.75, point.colour.l=""#0e668b"") gg <- gg + scale_x_continuous(label=percent) gg <- gg + labs(x=NULL, y=NULL) gg <- gg + theme_bw() gg <- gg + theme(plot.background=element_rect(fill=""#f7f7f7"")) gg <- gg + theme(panel.background=element_rect(fill=""#f7f7f7"")) gg <- gg + theme(panel.grid.minor=element_blank()) gg <- gg + theme(panel.grid.major.y=element_blank()) gg <- gg + theme(panel.grid.major.x=element_line()) gg <- gg + theme(axis.ticks=element_blank()) gg <- gg + theme(legend.position=""top"") gg <- gg + theme(panel.border=element_blank()) gg Code of Conduct Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hrbrmstr/ggalt"	"Extra Coordinate Systems, Geoms and Statistical Transformations for ggplot2."	"true"
"Graphic Displays"	"ggtree"	"https://github.com/GuangchuangYu/ggtree"	"Visualization and annotation of phylogenetic tree."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"82"	"17"	"23"	"GitHub - GuangchuangYu/ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 17 Star 82 Fork 23 GuangchuangYu/ggtree Code Issues 2 Pull requests 0 Wiki Pulse Graphs 🎄an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data https://guangchuangyu.github.io/ggtree/ 571 commits 2 branches 0 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show Nothing to show New pull request Latest commit 93fe279 Jul 4, 2016 GuangchuangYu typo Permalink Failed to load latest commit information. R typo Jul 4, 2016 inst update citation info Jun 24, 2016 man identify Jun 28, 2016 tests geom_balance now warns if called on tip or multi Jun 22, 2016 vignettes update docs Jun 29, 2016 .Rbuildignore update vignette Jul 31, 2015 .gitignore optimize Jan 14, 2016 .svnignore svnignore Jan 15, 2016 .travis.yml Commit made by the Bioconductor Git-SVN bridge. May 22, 2015 DESCRIPTION update docs Jun 29, 2016 NAMESPACE identify Jun 28, 2016 NEWS update news Jun 28, 2016 README.md update readme Jun 30, 2016 TODO.md Commit made by the Bioconductor Git-SVN bridge. May 22, 2015 appveyor.yml Commit made by the Bioconductor Git-SVN bridge. May 22, 2015 README.md ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data The ggtree package extending the ggplot2 package. It based on grammar of graphics and takes all the good parts of ggplot2. ggtree is designed for not only viewing phylogenetic tree but also displaying annotation data on the tree. For details, please visit our project website, https://guangchuangyu.github.io/ggtree. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/GuangchuangYu/ggtree"	"Visualization and annotation of phylogenetic tree."	"true"
"Lists"	"ggplot2 Extensions"	"https://ggplot2-exts.github.io/ggiraph.html"	"Showcases of ggplot2 extensions."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"77"	"13"	"12"	"GitHub - ggplot2-exts/ggplot2-exts.github.io: A list of ggplot2 extensions Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 13 Star 77 Fork 12 ggplot2-exts/ggplot2-exts.github.io Code Issues 13 Pull requests 0 Pulse Graphs A list of ggplot2 extensions 39 commits 2 branches 0 releases Fetching contributors JavaScript 68.4% HTML 26.9% CSS 4.6% Other 0.1% JavaScript HTML CSS Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags develop master Nothing to show Nothing to show New pull request Latest commit e18cdf9 Feb 23, 2016 Emaasit Merge pull request #30 from ggplot2-exts/develop … corrected ggtech-etsy font Permalink Failed to load latest commit information. css clean upload Jan 29, 2016 geomnet_files/figure-html added 5 exts Feb 22, 2016 ggExtra_files/figure-html added 5 exts Feb 22, 2016 ggTimeSeries_files/figure-html added 5 exts Feb 22, 2016 ggalt_files/figure-html added 5 more exts Jan 30, 2016 gganimate_files/figure-html added gganimate Feb 2, 2016 ggforce_files/figure-html added 5 more exts Jan 30, 2016 ggnet_files/figure-html added 5 exts Feb 22, 2016 ggnetwork_files/figure-html added 5 exts Feb 22, 2016 ggpmisc_files/figure-html added 5 more exts Jan 30, 2016 ggradar_files/figure-html added 5 exts Feb 22, 2016 ggraph_files/figure-html added 4 more exts Feb 7, 2016 ggrepel_files/figure-html added 5 more exts Jan 30, 2016 ggseas_files/figure-html added 5 exts Feb 22, 2016 ggspectra_files/figure-html added 4 more exts Feb 7, 2016 ggstance_files/figure-html added goemnet Jan 30, 2016 ggtech_files/figure-html corrected ggtech-etsy font Feb 23, 2016 ggthemes_files/figure-html added 4 more exts Feb 7, 2016 ggtree_files/figure-html added 5 exts Feb 22, 2016 images corrected carousel-ggtech Feb 22, 2016 include added 5 exts Feb 22, 2016 js aded files Jan 29, 2016 libs corrected ggtech-etsy font Feb 24, 2016 plotROC_files/figure-html added 4 more exts Feb 7, 2016 .gitignore aded files Jan 29, 2016 CNAME added CNAME Feb 22, 2016 Makefile aded files Jan 29, 2016 README.md color push Jan 29, 2016 _config.yml aded files Jan 29, 2016 _output.yaml aded files Jan 29, 2016 compile.R aded files Jan 29, 2016 geomnet.Rmd added goemnet Jan 30, 2016 geomnet.html added 5 exts Feb 22, 2016 ggExtra.Rmd added ggExtra Jan 31, 2016 ggExtra.html added 5 exts Feb 22, 2016 ggTimeSeries.Rmd added 5 exts Feb 22, 2016 ggTimeSeries.html added 5 exts Feb 22, 2016 ggalt.Rmd added 5 more exts Jan 30, 2016 ggalt.html added 5 exts Feb 22, 2016 gganimate.Rmd added gganimate Feb 3, 2016 gganimate.html added 5 exts Feb 22, 2016 ggforce.Rmd added 5 more exts Jan 30, 2016 ggforce.html added 5 exts Feb 22, 2016 ggiraph.Rmd aded files Jan 29, 2016 ggiraph.html added 5 exts Feb 22, 2016 ggnet.Rmd added 5 exts Feb 22, 2016 ggnet.html added 5 exts Feb 22, 2016 ggnetwork.Rmd added 4 more exts Feb 7, 2016 ggnetwork.html added 5 exts Feb 22, 2016 ggplot2-exts.github.io.Rproj aded files Jan 29, 2016 ggpmisc.Rmd added 5 more exts Jan 30, 2016 ggpmisc.html added 5 exts Feb 22, 2016 ggradar.Rmd added 5 exts Feb 22, 2016 ggradar.html added 5 exts Feb 22, 2016 ggraph.Rmd Update ggraph examples Feb 3, 2016 ggraph.html added 4 more exts-2 Feb 7, 2016 ggrepel.Rmd added 5 more exts Jan 30, 2016 ggrepel.html added 5 exts Feb 22, 2016 ggseas.Rmd added 5 exts Feb 22, 2016 ggseas.html added 5 exts Feb 22, 2016 ggspectra.Rmd added 4 more exts Feb 7, 2016 ggspectra.html added 5 exts Feb 22, 2016 ggstance.Rmd added 4 more exts Feb 7, 2016 ggstance.html added 5 exts Feb 22, 2016 ggtech.Rmd corrected ggtech-etsy font Feb 24, 2016 ggtech.html corrected ggtech-etsy font Feb 24, 2016 ggthemes.Rmd added 4 more exts Feb 7, 2016 ggthemes.html added 5 exts Feb 22, 2016 ggtree.Rmd added 5 exts Feb 22, 2016 ggtree.html added 5 exts Feb 22, 2016 index.Rmd fixed typos Jan 30, 2016 index.html fixed missing png in carousel Feb 22, 2016 plotROC.Rmd added 4 more exts Feb 7, 2016 plotROC.html added 5 exts Feb 22, 2016 README.md ggplot2-exts.github.io A List of gglot2 extensions This site tracks and lists gglot2 extenstions developed by R users in the community. The aim is to make it easy for R users to find developed extensions. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ggplot2-exts/ggplot2-exts.github.io"	"Showcases of ggplot2 extensions."	"true"
"Graphic Displays"	"lattice"	"http://lattice.r-forge.r-project.org/"	"A powerful and elegant high-level data visualization system."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Lattice: trellis graphics for R Lattice: trellis graphics for R Lattice@CRAN   LatticeExtra   Book website Home Documentation Developer site The lattice add-on package is an implementation of Trellis graphics for R. It is a powerful and elegant high-level data visualization system with an emphasis on multivariate data. It is designed to meet most typical graphics needs with minimal tuning, but can also be easily extended to handle most nonstandard requirements. Trellis Graphics, originally developed for S and S-PLUS at the Bell Labs, is a framework for data visualization developed by R. A. Becker, W. S. Cleveland, et al, extending ideas presented in Cleveland’s 1993 book Visualizing Data. The Lattice API is based on the original design in S, but extends it in many ways. Installation The lattice package is usually installed along with R. You can start using it after loading it by typing > library(package = ""lattice"") in your R session. The latest released version of lattice, which may be more recent than the version that came with R, is available from CRAN. The latest development snapshot is available from R-forge LatticeExtra If you find lattice useful, you may also be interested in the latticeExtra package, which supplements and extends the capabilties of lattice. Last modified: Sun May 8 15:57:41 IST 2011 by deepayan.sarkar (at) r-project.org."	"null"	"null"	"A powerful and elegant high-level data visualization system."	"true"
"Graphic Displays"	"rgl"	"http://cran.r-project.org/web/packages/rgl/index.html"	"3D visualization device system for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rgl rgl: 3D Visualization Using OpenGL Provides medium to high level functions for 3D interactive graphics, including functions modelled on base graphics (plot3d(), etc.) as well as functions for constructing representations of geometric objects (cube3d(), etc.). Output may be on screen using OpenGL, or to various standard 3D file formats including WebGL, PLY, OBJ, STL as well as 2D image formats, including PNG, Postscript, SVG, PGF. Version: 0.95.1441 Depends: R (≥ 2.15.0) Imports: graphics, grDevices, stats, utils Suggests: MASS, rglwidget (≥ 0.1.1427), knitr, rmarkdown Published: 2016-01-04 Author: Daniel Adler, Duncan Murdoch, and others (see README) Maintainer: Duncan Murdoch <murdoch at stats.uwo.ca> BugReports: https://r-forge.r-project.org/projects/rgl/ License: GPL-2 | GPL-3 [expanded from: GPL] URL: https://r-forge.r-project.org/projects/rgl/ NeedsCompilation: yes SystemRequirements: OpenGL, GLU Library, zlib (optional), libpng (>=1.2.9, optional), FreeType (optional) Materials: README NEWS In views: Graphics, Multivariate, SpatioTemporal CRAN checks: rgl results Downloads: Reference manual: rgl.pdf Vignettes: User Interaction in WebGL rgl Overview Package source: rgl_0.95.1441.tar.gz Windows binaries: r-devel: rgl_0.95.1441.zip, r-release: rgl_0.95.1441.zip, r-oldrel: rgl_0.95.1441.zip OS X Mavericks binaries: r-release: rgl_0.95.1441.tgz, r-oldrel: rgl_0.95.1441.tgz Old sources: rgl archive Reverse dependencies: Reverse depends: abcdeFBA, alphashape3d, animalTrack, bios2mds, BiplotGUI, bpca, brainR, ChaosGame, ConsRank, corregp, depth, DiceView, directPA, DirichletReg, dti, edrGraphicalTools, eegkit, etasFLP, fdaPDE, FieldSim, foodweb, frontiles, fso, gdimap, gensphere, geoelectrics, geomorph, GeoXp, GGEBiplotGUI, grt, hgam, hiPOD, hypervolume, kml3d, ks, longitudinalData, LSAfun, Maeswrap, MDSGUI, molaR, mtk, mvmesh, nat, nat.nblast, nat.templatebrains, NeatMap, nonlinearTseries, optBiomarker, pavo, plot3Drgl, qpcR, qtlc, QuantifQuantile, R330, RadOnc, RcmdrPlugin.TeachingDemos, Rknots, ROCS, rotations, Rpdb, sphereplot, tkrgl, VDA, VecStatGraphs3D, YplantQMC Reverse imports: AFM, anacor, analogueExtra, Anthropometry, Biocomb, biplotbootGUI, cems, ChemoSpec, clusterSim, cncaGUI, corr2D, crs, curvHDR, DiffusionRgqd, DiffusionRimp, DiffusionRjgqd, dprep, feature, forestFloor, GrammR, graphscan, homals, HUM, imPois, KernSmoothIRT, LMERConvenienceFunctions, matlib, mixOmics, monogeneaGM, Morpho, msir, MSQC, msr, multibiplotGUI, mvQuad, nanop, netmeta, neuroim, NPCirc, OceanView, OpenRepGrid, pca3d, phylocurve, pi0, prim, QuantumClone, rase, restlos, retistruct, rglwidget, rLiDAR, RnavGraph, RockFab, Rquake, rsml, SDD, SEERaBomb, shapes, shinyRGL, Sim.DiffProc, sparr, spatgraphs, spatsurv, specmine, StatDA, Surrogate, symbolicDA, termstrc, tolerance, treescape, vegan3d Reverse suggests: AER, archdata, BCA, brewdata, ca, candisc, car, cda, colorSpec, CombMSC, COMMUNAL, compositions, DeducerExtras, DepthProc, DiceDesign, ei, EMbC, emdbook, EMMIXuskew, fdapace, FisHiCal, genridge, geometry, granova, heplots, HiDimMaxStable, HiveR, hsdar, hyperSpec, igraph, insol, IsotopeR, knitr, KODAMA, latentnet, lava, lfda, lle, LogConcDEAD, MCMCglmm, misc3d, modQR, mosaic, MSG, orientlib, pamm, phangorn, phytools, pitchRx, polywog, ptinpoly, quantreg, rasterVis, Rcmdr, RcmdrPlugin.BCA, RGraphics, rpanel, RQuantLib, RSA, RSurvey, Rvcg, SACOBRA, sampSurf, seewave, sensitivity, simLife, sm, sna, soobench, spcosa, SPOT, StereoMorph, stpp, TeachingDemos, TrackReconstruction, trajectories, tsDyn, unfoldr, vcdExtra, visreg, VoxR"	"null"	"null"	"3D visualization device system for R."	"true"
"Graphic Displays"	"Cairo"	"http://cran.r-project.org/web/packages/Cairo/index.html"	"R graphics device using cairo graphics library for creating high-quality display output."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package Cairo Cairo: R graphics device using cairo graphics library for creating high-quality bitmap (PNG, JPEG, TIFF), vector (PDF, SVG, PostScript) and display (X11 and Win32) output Cairo graphics device that can be use to create high-quality vector (PDF, PostScript and SVG) and bitmap output (PNG,JPEG,TIFF), and high-quality rendering in displays (X11 and Win32). Since it uses the same back-end for all output, copying across formats is WYSIWYG. Files are created without the dependence on X11 or other external programs. This device supports alpha channel (semi-transparent drawing) and resulting images can contain transparent and semi-transparent regions. It is ideal for use in server environments (file output) and as a replacement for other devices that don't have Cairo's capabilities such as alpha support or anti-aliasing. Backends are modular such that any subset of backends is supported. Version: 1.5-9 Depends: R (≥ 2.4.0) Imports: grDevices, graphics Suggests: png Enhances: FastRWeb Published: 2015-09-26 Author: Simon Urbanek, Jeffrey Horner Maintainer: Simon Urbanek <Simon.Urbanek at r-project.org> BugReports: NA License: GPL-2 URL: http://www.rforge.net/Cairo/ NeedsCompilation: yes SystemRequirements: cairo (>= 1.2 http://www.cairographics.org/) Materials: NEWS In views: Graphics CRAN checks: Cairo results Downloads: Reference manual: Cairo.pdf Package source: Cairo_1.5-9.tar.gz Windows binaries: r-devel: Cairo_1.5-9.zip, r-release: Cairo_1.5-9.zip, r-oldrel: Cairo_1.5-9.zip OS X Mavericks binaries: r-release: Cairo_1.5-9.tgz, r-oldrel: Cairo_1.5-9.tgz Old sources: Cairo archive Reverse dependencies: Reverse depends: abn, EasyStrata, sparkTable, tourrGui Reverse imports: FastRWeb, SGP, VIMGUI Reverse suggests: aroma.core, ARTool, corclass, corrplot, dplR, ggmcmc, R2SWF, R.devices, repr, shiny, trelliscope"	"null"	"null"	"R graphics device using cairo graphics library for creating high-quality display output."	"true"
"Graphic Displays"	"extrafont"	"https://github.com/wch/extrafont"	"Tools for using fonts in R graphics."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"93"	"10"	"18"	"GitHub - wch/extrafont: Tools for using fonts in R graphics Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 93 Fork 18 wch/extrafont Code Issues 22 Pull requests 2 Pulse Graphs Tools for using fonts in R graphics 182 commits 2 branches 9 releases 4 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags freetype master Nothing to show v0.17 v0.16 v0.15 v0.14 v0.13 v0.12 v0.11 v0.10 v0.9 Nothing to show New pull request Latest commit ded7f38 Dec 8, 2014 wch Use title case Permalink Failed to load latest commit information. R Change donttest to dontrun Dec 8, 2014 man Change donttest to dontrun Dec 8, 2014 .Rbuildignore Add .Rbuildignore Nov 1, 2012 .gitignore Add Rproj file Dec 8, 2014 DESCRIPTION Use title case Dec 8, 2014 NAMESPACE Change donttest to dontrun Dec 8, 2014 NEWS Bump version to 0.17 Dec 8, 2014 README.md Update README Dec 20, 2012 extrafont.Rproj Add Rproj file Dec 8, 2014 README.md extrafont The extrafont package makes it easier to use fonts other than the basic PostScript fonts that R uses. Fonts that are imported into extrafont can be used with PDF or PostScript output files. On Windows, extrafont will also make system fonts available for bitmap output. There are two hurdles for using fonts in PDF (or Postscript) output files: Making R aware of the font and the dimensions of the characters. Embedding the fonts in the PDF file so that the PDF can be displayed properly on a device that doesn't have the font. This is usually needed if you want to print the PDF file or share it with others. The extrafont package makes both of these things easier. Presently it allows the use of TrueType fonts with R, and installation of special font packages. Support for other kinds of fonts will be added in the future. It has been tested on Mac OS X 10.7 and Ubuntu Linux 12.04 and Windows XP. The instructions below are written for PDF files, although the information also applies to PostScript files. If you want to use the TeX Computer Modern fonts in PDF files, also see the fontcm package. Using extrafont Requirements You must have Ghostscript installed on your system for embedding fonts into PDF files. Extrafont requires the extrafontdb package to be installed. extrafontdb contains the font database, while this package contains the code to install fonts and register them in the database. It also requires the Rttf2pt1 package to be installed. Rttf2pt1 contains the ttf2pt1 program which is used to read and manipulate TrueType fonts. It is in a separate package for licensing reasons. Install extrafont from CRAN will automatically install extrafontdb and Rttf2pt1: install.packages('extrafont') library(extrafont) To use extrafont in making graphs, you'll need to do the following: Import fonts into the extrafont database. (Needs to be done once) Register the fonts from the extrafont database with R's PDF (or PostScript) output device. (Needs to be done once per R session) Create the graphics that use the fonts. Embed the fonts into the PDF file. (Needs to be done for each file) Import fonts into the extrafont database First, import the fonts installed on the system. (This only works with TrueType fonts right now.) font_import() # This tries to autodetect the directory containing the TrueType fonts. # If it fails on your system, please let me know. This does the following: Finds the fonts on your system. Extracts the FontName (like ArialNarrow-BoldItalic). Extracts/converts a PostScript .afm file for each font. This file contains the font metrics, which are the rectangular dimensions of each character that are needed for placement of the characters. These are not the glyphs, which the curves defining the visual shape of each character. The glyphs are only in the .ttf file. Scan all the resulting .afm files, and save a table with information about them. This table will be used when making plots with R. Creates a file Fontmap, which contains the mapping from FontName to the .ttf file. This is required by Ghostscript for embedding fonts. You can view the resulting table of font information with: # Vector of font family names fonts()  # Show entire table fonttable() If you install new fonts on your computer, you'll have to run font_import() again. Register the fonts with the PDF output device The next step is to register the fonts in the afm table with R's PDF (or PostScript) output device. This is needed to create PDF files with the fonts. As of extrafont version 0.13, this must be run only in the first session when you import your fonts. In sessions started after the fonts have been imported, simply loading the package with library(extrafont) this step isn't necessary, since it will automatically register the fonts with R. # Only necessary in session where you ran font_import() loadfonts() # For PostScript output, use loadfonts(device=""postscript"") # Suppress output with loadfonts(quiet=TRUE) Create figures with the fonts Here's an example of PDFs made with base graphics and with ggplot2. These examples use the font Impact, which should be available on Windows and Mac. (Use fonts() to see what fonts are available on your system) pdf(""font_plot.pdf"", family=""Impact"", width=4, height=4) plot(mtcars$mpg, mtcars$wt,       main = ""Fuel Efficiency of 32 Cars"",      xlab = ""Weight (x1000 lb)"",      ylab = ""Miles per Gallon"") dev.off()   library(ggplot2) p <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point() +   ggtitle(""Fuel Efficiency of 32 Cars"") +   xlab(""Weight (x1000 lb)"") + ylab(""Miles per Gallon"") +   theme(text=element_text(size=16, family=""Impact""))  ggsave(""font_ggplot.pdf"", plot=p,  width=4, height=4) The first time you use a font, it may throw some warnings about unknown characters. This should be harmless, but if it causes any problems, please report them. Embed the fonts After you create a PDF output file, you should embed the fonts into the file. There are 14 PostScript base fonts never need to be embedded, because they are included with every PDF/PostScript renderer. All other fonts should be embedded into the PDF files. First, if you are running Windows, you may need to tell it where the Ghostscript program is, for embedding fonts. (See Windows installation notes below.) # Needed only on Windows - run once per R session # Adjust the path to match your installation of Ghostscript Sys.setenv(R_GSCMD = ""C:/Program Files/gs/gs9.05/bin/gswin32c.exe"") As the name suggests, embed_fonts() will embed the fonts: embed_fonts(""font_plot.pdf"", outfile=""font_plot_embed.pdf"") embed_fonts(""font_ggplot.pdf"", outfile=""font_ggplot_embed.pdf"") # If outfile is not specified, it will overwrite the original file To check if the fonts have been properly embedded, open each of the PDF files with Adobe Reader, and go to File->Properties->Fonts. If a font is embedded, it will say ""Embedded Subset"" by the font's name; otherwise it will say nothing next to the name. With Adobe Reader, if a font is not embedded, it will be substituted by another font. This provides a way to see what your PDF will look like on printer or computer that doesn't have the font installed. Other PDF viewers may behave differently. For example, the Preview application on Mac OS X will automatically use system fonts to display non-embedded fonts -- this makes it impossible to tell whether the font is embedded in the PDF. On Linux you can also use evince (the default PDF viewer) to view embedded fonts. Open the file and go to File->Properties->Fonts. If a font is embedded, it will say ""Embedded subset""; otherwise it will say ""Not embedded"". If you are putting multiple PDF figures into a single document, it is more space-efficient to not embed fonts in each figure, but instead embed the font in the final PDF document. Windows bitmap output extrafont also makes it easier to use fonts in Windows for on-screen or bitmap output. # Register fonts for Windows bitmap output loadfonts(device=""win"")  ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point() +   ggtitle(""Title text goes here"") +   theme(plot.title = element_text(size = 16, family=""Georgia"", face=""italic""))  ggsave(""fonttest-win.png"") Since the output is a bitmap file, there's no need to embed the fonts. Font packages Extrafont supports font packages, which contain fonts that are packaged in a particular way so that they can be imported into extrafont. These fonts are installed as R packages; they are not installed for the computer operating system. Fonts that are installed this way will be available only for PDF or PostScript output. They will not be available for on-screen or bitmap output, which requires that the font be installed for operating system, not just with R and extrafont. Presently extrafont supports only font packages with PostScript Type 1 fonts. See the fontcm package containing Computer Modern fonts for an example. Installation notes Rttf2pt1 The source code for the utility program ttf2pt1 is in the package Rttf2pt1. CRAN has pre-compiled Windows and Mac OS X binaries. For other platforms, and when installing from source, it will be compiled on installation, so you need a build environment on your system. Windows installation notes In Windows, you need to make sure that Ghostscript is installed. In each R session where you embed fonts, you will need to tell R where Ghostscript is installed. For example, when Ghostscript 9.05 is installed to the default location, running this command will do it (adjust the path for your installation): Sys.setenv(R_GSCMD=""C:/Program Files/gs/gs9.05/bin/gswin32c.exe"") Resetting the font database To reset the extrafont database, reinstall the extrafontdb package: install.packages(""extrafontdb"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/wch/extrafont"	"Tools for using fonts in R graphics."	"true"
"Graphic Displays"	"showtext"	"https://github.com/yixuan/showtext"	"Enable R graphics device to show text using system fonts."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"84"	"10"	"13"	"GitHub - yixuan/showtext: Using Fonts More Easily in R Graphs Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 84 Fork 13 yixuan/showtext Code Issues 4 Pull requests 0 Pulse Graphs Using Fonts More Easily in R Graphs http://cran.r-project.org/web/packages/showtext/index.html 182 commits 2 branches 0 releases Fetching contributors C 55.5% R 23.5% TeX 20.6% Makefile 0.4% C R TeX Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master rjournal Nothing to show Nothing to show New pull request Latest commit 59a1ba5 Oct 29, 2015 yixuan roxygen Permalink Failed to load latest commit information. R introduce .dev_units_per_point Apr 24, 2015 inst new version Oct 29, 2015 man roxygen Oct 29, 2015 not_in_package update package version May 24, 2015 src free allocated memory Oct 25, 2015 .Rbuildignore initial commit Dec 7, 2013 .gitignore update .gitignore Aug 13, 2014 DESCRIPTION roxygen Oct 30, 2015 NAMESPACE add missing imports Sep 20, 2015 README.md minor tweaks Apr 25, 2015 configure update configure scripts Mar 10, 2015 configure.ac update configure scripts Mar 10, 2015 configure.win add an empty configure.win Dec 29, 2013 showtext.Rproj add configure and Makevars scripts Dec 7, 2013 README.md What's This Package All About? showtext makes it easy to use various types of fonts (TrueType, OpenType, Type 1, web fonts, etc.) in R graphs. It tries to do the following two things: Let R know about these fonts Use these fonts to draw text The motivation to develop this package is that using non-standard fonts in R graphs (especially for PDF device) is not straightforward, for example, to create PDF graphs with Chinese characters. This is because most of the standard fonts used by pdf() do not contain Chinese character glyphs, and users could hardly use system fonts in R. The extrafont package developed by Winston Chang is one nice solution to this problem, which mainly focuses on using TrueType fonts(.ttf) in PDF graphics device. Now showtext is able to support more font formats and more graphics devices, and avoids using external software such as Ghostscript. A Quick Example library(showtext) ## Loading Google fonts (http://www.google.com/fonts) font.add.google(""Gochi Hand"", ""gochi"") font.add.google(""Schoolbell"", ""bell"") font.add.google(""Covered By Your Grace"", ""grace"") font.add.google(""Rock Salt"", ""rock"")  ## Automatically use showtext to render text for future devices showtext.auto()  ## Tell showtext the resolution of the device, ## only needed for bitmap graphics. Default is 96 ## showtext.opts(dpi = 96)  set.seed(123) x = rnorm(10) y = 1 + x + rnorm(10, sd = 0.2) y[1] = 5 mod = lm(y ~ x)  ## Plotting functions as usual ## Open a graphics device if you want, e.g. ## png(""demo.png"", 700, 600, res = 96)  op = par(cex.lab = 2, cex.axis = 1.5, cex.main = 2) plot(x, y, pch = 16, col = ""steelblue"",      xlab = ""X variable"", ylab = ""Y variable"", family = ""gochi"") grid() title(""Draw Plots Before You Fit A Regression"", family = ""bell"") text(-0.5, 4.5, ""This is the outlier"", cex = 2, col = ""steelblue"",      family = ""grace"") abline(coef(mod)) abline(1, 1, col = ""red"") par(family = ""rock"") text(1, 1, expression(paste(""True model: "", y == x + 1)),      cex = 1.5, col = ""red"", srt = 20) text(0, 2, expression(paste(""OLS: "", hat(y) == 0.79 * x + 1.49)),      cex = 1.5, srt = 15) legend(""topright"", legend = c(""Truth"", ""OLS""), col = c(""red"", ""black""), lty = 1)  par(op) In this example we first load some fonts that are available online through Google Fonts, and then tell R to render text using showtext by calling the showtext.auto() function. All the remaining part is exactly the same as the usual plotting commands. This example should work on most graphics devices, including pdf(), png(), postscript(), and on-screen devices such as windows() on Windows and x11() on Linux. How showtext Works Let me first explain a little bit how pdf() works. To my best knowledge, the default PDF device in R does not ""draw"" the text, but actually ""describes"" the text in the PDF file. That is to say, instead of drawing lines and curves of the actual glyph, it only embeds information about the text, for example what characters it has, which font it uses, etc. However, the text with declared font may be displayed differently in different OS, which means that the appearance of graph created by pdf() is system dependent. If you unfortunately do not have the declared font in your system, you may not be able to see the text correctly at all. In comparison, showtext package tries to solve this problem by converting text into color-filled polygonal outlines (for vector graphics) or raster images (for bitmap and on-screen graphics), thus having the same appearance under all platforms. People who view this graph do not need to install the font that creates the graph. It provides convenience to both graph makers and graph viewers. More importantly, showtext can use system font files, so you can show text in the graph with your favourite font face, as long as it is supported by FreeType. See section Loading Fonts below. The Usage To create a graph using a specified font, you simply do the following: (*) Load the font Open the graphics device (*) Claim that you want to use showtext to draw the text Plot Close the device Only the steps marked with (*) are newly added. If you want to use showtext globally, you can call the function showtext.auto() once, and then all the devices after that will automatically use showtext to render text, as the example in the beginning shows. If you want to have finer control on which part of the code should use showtext, functions showtext.begin() and showtext.end() will help. Only plotting functions enclosed by this pair of calls will use showtext, and others not. For example, to change the title font only, we can do: library(showtext) font.add.google(""Schoolbell"", ""bell"")  ## By default the automatic call of showtext is disabled ## You can manually turn it off using the line below ## showtext.auto(enable = FALSE)  ## To use showtext.begin() and showtext.end() you need to ## explicitly open a graphics device png(""demo.png"", 700, 600, res = 96) set.seed(123) x = rnorm(10) y = 1 + x + rnorm(10, sd = 0.2) y[1] = 5 mod = lm(y ~ x)  op = par(cex.lab = 1.5, cex.axis = 1.5, cex.main = 2) plot(x, y, pch = 16, col = ""steelblue"",      xlab = ""X variable"", ylab = ""Y variable"") grid()  ## Use showtext only for this part showtext.begin() title(""Draw Plots Before You Fit A Regression"", family = ""bell"") showtext.end()  text(-0.5, 4.5, ""This is the outlier"", cex = 2, col = ""steelblue"") abline(coef(mod)) abline(1, 1, col = ""red"") text(1, 1, expression(paste(""True model: "", y == x + 1)),      cex = 1.5, col = ""red"", srt = 20) text(0, 2, expression(paste(""OLS: "", hat(y) == 0.79 * x + 1.49)),      cex = 1.5, srt = 15) legend(""topright"", legend = c(""Truth"", ""OLS""), col = c(""red"", ""black""), lty = 1)  par(op) dev.off() Loading Fonts Loading font is actually done by package sysfonts. The easy way to load font into showtext is by calling font.add(family, regular), where family is the name that you assign to that font (so that later you can call par(family = ...) to use this font in plotting), and regular is the path to the font file. That is to say, only knowing the ""font name"" is not enough, since they are usually system dependent. On the contrary, font file is the entity that actually provides the character glyphs. Usually the font files are located in some ""standard"" directories in the system (for example on Windows it is typically C:\Windows\Fonts). You can use font.paths() to check the current search path or add a new one, and use font.files() to list available font files in the search path. Below is an example to load system fonts on Windows: library(showtext) ## Add fonts that are available on Windows font.add(""heiti"", ""simhei.ttf"") font.add(""constan"", ""constan.ttf"", italic = ""constani.ttf"")  library(ggplot2) p = ggplot(NULL, aes(x = 1, y = 1)) + ylim(0.8, 1.2) +     theme(axis.title = element_blank(), axis.ticks = element_blank(),           axis.text = element_blank()) +     annotate(""text"", 1, 1.1, family = ""heiti"", size = 15,              label = ""\u4F60\u597D\uFF0C\u4E16\u754C"") +     annotate(""text"", 1, 0.9, label = 'Chinese for ""Hello, world!""',              family = ""constan"", fontface = ""italic"", size = 12)  showtext.auto()  ## automatically use showtext for new devices  print(p)  ## on-screen device  pdf(""showtext-example-3.pdf"", 7, 4)  ## PDF device print(p) dev.off()  ggsave(""showtext-example-4.png"", width = 7, height = 4, dpi = 96)  ## PNG device  showtext.auto(FALSE)  ## turn off if no longer needed For other OS, you may not have the simhei.ttf font file, but there is no difficulty in using something else. At present font.add() supports TrueType fonts(*.ttf/*.ttc) and OpenType fonts(*.otf), and adding new font type is trivial as long as FreeType supports it. Note that showtext includes an open source CJK font WenQuanYi Micro Hei. If you just want to show CJK text in your graph, you do not need to add any extra font at all. Also, there are many free fonts available and accessible on the web, for instance the Google Fonts project (https://www.google.com/fonts). sysfonts provides an interface to automatically download and register those fonts through the function font.add.google(), as the example below shows. library(showtext) font.add.google(""Lobster"", ""lobster"")  showtext.auto()  plot(1, pch = 16, cex = 3) text(1, 1.1, ""A fancy dot"", family = ""lobster"", col = ""steelblue"", cex = 3) The Internals of showtext Every graphics device in R implements some functions to draw specific graphical elements, e.g., path() and polygon() to draw polygons, raster() to display bitmap images, text() or textUTF8() to show text, etc. What showtext does is to override their own text rendering functions and replace them by hooks provided in showtext that will further call the device's path() or raster() functions to draw the character glyphs. This action is done only when you call showtext.begin() and won't modify the graphics device if you call showtext.end() to restore the original device functions back. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/yixuan/showtext"	"Enable R graphics device to show text using system fonts."	"true"
"Graphic Displays"	"animation"	"http://yihui.name/animation/"	"A simple way to produce animated graphics in R, using."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"77"	"14"	"37"	"GitHub - yihui/animation: A gallery of animations in statistics and utilities to create animations Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 14 Star 77 Fork 37 yihui/animation Code Issues 10 Pull requests 0 Wiki Pulse Graphs A gallery of animations in statistics and utilities to create animations http://yihui.name/animation 678 commits 2 branches 3 releases 11 contributors R 62.3% TeX 33.4% CSS 2.3% JavaScript 1.2% HTML 0.8% R TeX CSS JavaScript HTML Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v2.4 v2.3 v2.0-6 Nothing to show New pull request Latest commit fe82ba8 Feb 17, 2016 yulijia Merge pull request #78 from yulijia/master … Fix ( issue #74 ): ffmpeg drops frames Build and check package: all examples with CPI or elapsed time < 5s Permalink Failed to load latest commit information. R Fix(issue 74): ffmpeg drops frames Feb 17, 2016 data added team information to CLELAL09 Feb 26, 2011 demo add info Dec 9, 2015 inst build and check package: all examples with CPU or elapsed time < 5s Feb 17, 2016 man feat(check directory): check if output path does exist, if not then c… Feb 14, 2016 tests tests for remove_navigator() Jun 28, 2013 .Rbuildignore add .travis.yml to enable testing on Travis CI Apr 14, 2013 .gitignore use rstudio to manage the repository Jun 18, 2012 .travis.yml travis container-based infrastructure Jul 9, 2015 DESCRIPTION feat(check directory): check if output path does exist, if not then c… Feb 14, 2016 NAMESPACE import some base R packages Aug 15, 2015 NEWS a news item for #50 and #60 Aug 15, 2015 README.md install from XRAN Aug 15, 2015 animation.Rproj an alternative way to call Rd2roxygen Aug 16, 2015 README.md animation Introduction This is an R package to create and export animations to a variety of formats (HTML/JS, GIF, Video, PDF), and it also serves as a gallery of statistical animations. Installation To install the stable version on CRAN: install.packages('animation') To install the GitHub version under development: install.packages('animation', repos = 'http://yihui.name/xran') If you want to contribute, the documentation and NAMESPACE of this package are generated by roxygen2 and Rd2roxygen: if (!require('Rd2roxygen') install.packages('Rd2roxygen') library(Rd2roxygen) rab('animation', install = TRUE) Contact Bugs and feature requests can be filed to https://github.com/yihui/animation/issues. Pull requests are also welcome. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/yihui/animation"	"A simple way to produce animated graphics in R, using."	"true"
"Graphic Displays"	"ImageMagick"	"http://imagemagick.org/"	"A simple way to produce animated graphics in R, using."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"419"	"33"	"100"	"GitHub - ImageMagick/ImageMagick: ImageMagick Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 33 Star 419 Fork 100 ImageMagick/ImageMagick Code Issues 19 Pull requests 0 Wiki Pulse Graphs ImageMagick http://git.imagemagick.org/repos/ImageMagick.git 11,089 commits 2 branches 30 releases 12 contributors C 59.4% HTML 23.9% Makefile 4.3% PHP 4.0% C++ 2.8% XS 1.7% Other 3.9% C HTML Makefile PHP C++ XS Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags ImageMagick-6 master Nothing to show 7.0.2-4 7.0.2-3 7.0.2-2 7.0.2-1 7.0.2-0 7.0.1-10 7.0.1-9 7.0.1-8 7.0.1-7 7.0.1-6 7.0.1-5 7.0.1-4 7.0.1-3 7.0.1-2 7.0.1-1 7.0.1-0 6.9.5-2 6.9.5-1 6.9.5-0 6.9.4-10 6.9.4-9 6.9.4-8 6.9.4-7 6.9.4-6 6.9.4-5 6.9.4-4 6.9.4-3 6.9.4-2 6.9.4-1 6.9.4-0 Nothing to show New pull request Latest commit 82beb20 Jul 15, 2016 Cristy Initialize index channel to get expected results from the stegano coder Permalink Failed to load latest commit information. ImageMagick Windows is not happy with these duplicate file names Feb 1, 2016 Magick++ Modified autolink for flif. May 1, 2016 MagickCore ... Jul 13, 2016 MagickWand ... Jul 5, 2016 PerlMagick ... Jun 30, 2016 api_examples No commit message Dec 7, 2014 coders Initialize index channel to get expected results from the stegano coder Jul 15, 2016 config Can't use %fx in delegates configuration file Jun 27, 2016 filters Update copyright years Dec 12, 2015 images Remove unused function Oct 30, 2015 m4 Update copyright years Dec 12, 2015 scripts Update copyright years Dec 12, 2015 tests Update copyright years Dec 12, 2015 utilities Eliminate C++ compiler warnings May 29, 2016 www ... Jun 18, 2016 .gitignore Removed object file and modified .gitignore Oct 3, 2015 .travis.yml Added apt-key update Feb 1, 2016 AUTHORS.txt Acknowledge Hanno Böck contributions to ImageMagick May 8, 2016 ChangeLog Initialize index channel to get expected results from the stegano coder Jul 15, 2016 ImageMagick.spec.in http://www.imagemagick.org/discourse-server/viewtopic.php?f=3&t=28937 Jan 6, 2016 Install-mac.txt Replaced mac install instructions with new text from Mark Setchell. Jul 18, 2015 Install-unix.txt Fixed typo reported by ubante. Jul 31, 2015 Install-vms.txt No commit message Jul 1, 2011 Install-windows.txt No commit message Sep 25, 2011 LICENSE Update copyright years Dec 12, 2015 Magickshr.opt http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28359 Sep 17, 2015 Make.com http://www.imagemagick.org/discourse-server/viewtopic.php?f=2&t=28359 Sep 18, 2015 Makefile.am Remove compile warning Feb 9, 2016 Makefile.in ... May 29, 2016 NEWS.txt No commit message Sep 5, 2009 NOTICE Update copyright years Dec 12, 2015 Platforms.txt No commit message Sep 5, 2009 QuickStart.txt Bump release Jun 12, 2016 README.md Document complex text layout Feb 10, 2016 README.txt Document complex text layout Feb 10, 2016 aclocal.m4 Latest autoconf script Mar 31, 2016 common.shi.in The 'magick' utility supports sub-commands, e.g., 'magick convert' Apr 1, 2016 configure Bump release Jul 11, 2016 configure.ac Bump release Jul 11, 2016 index.html ... Jun 18, 2016 magick.sh.in Update copyright years Dec 12, 2015 version.sh Bump release Jul 11, 2016 winpath.sh Update copyright years Dec 12, 2015 README.md ImageMagick ImageMagick® is a software suite to create, edit, compose, or convert bitmap images. It can read and write images in a variety of formats (over 200) including PNG, JPEG, JPEG-2000, GIF, TIFF, DPX, EXR, WebP, Postscript, PDF, and SVG. Use ImageMagick to resize, flip, mirror, rotate, distort, shear and transform images, adjust image colors, apply various special effects, or draw text, lines, polygons, ellipses and Bézier curves. Version *nix Windows 7 6 What is ImageMagick? The functionality of ImageMagick is typically utilized from the command line or you can use the features from programs written in your favorite programming language. Choose from these interfaces: G2F (Ada), MagickCore (C), MagickWand (C), ChMagick (Ch), ImageMagickObject (COM+), Magick++ (C++), JMagick (Java), L-Magick (Lisp), NMagick (Neko/haXe), MagickNet (.NET), PascalMagick (Pascal), PerlMagick (Perl), MagickWand for PHP (PHP), IMagick (PHP), PythonMagick (Python), RMagick (Ruby), or TclMagick (Tcl/TK). With a language interface, use ImageMagick to modify or create images dynamically and automagically. ImageMagick utilizes multiple computational threads to increase performance and can read, process, or write mega-, giga-, or tera-pixel image sizes. ImageMagick is free software delivered as a ready-to-run binary distribution or as source code that you may use, copy, modify, and distribute in both open and proprietary applications. It is distributed under the Apache 2.0 license. The ImageMagick development process ensures a stable API and ABI. Before each ImageMagick release, we perform a comprehensive security assessment that includes memory error and thread data race detection to prevent security vulnerabilities. ImageMagick is available from http://www.imagemagick.org/script/binary-releases.php. It runs on Linux, Windows, Mac Os X, iOS, Android OS, and others. The authoritative ImageMagick web site is http://www.imagemagick.org. The authoritative source code repository is http://git.imagemagick.org/repos/ImageMagick/. Features and Capabilities Here are just a few examples of what ImageMagick can do: Format conversion: convert an image from one format to another (e.g. PNG to JPEG). Transform: resize, rotate, deskew, crop, flip or trim an image. Transparency: render portions of an image invisible. Draw: add shapes or text to an image. Decorate: add a border or frame to an image. Special effects: blur, sharpen, threshold, or tint an image. Animation: create a GIF animation sequence from a group of images. Text & comments: insert descriptive or artistic text in an image. Image gradients: create a gradual blend of one color whose shape is horizontal, vertical, circular, or ellipical. Image identification: describe the format and attributes of an image. Composite: overlap one image over another. Montage: juxtapose image thumbnails on an image canvas. Generalized pixel distortion: correct for, or induce image distortions including perspective. Morphology of shapes: extract features, describe shapes and recognize patterns in images. Delineate image features: Canny edge detection, mean-shift, Hough lines. Motion picture support: read and write the common image formats used in digital film work. Image calculator: apply a mathematical expression to an image or image channels. Connected component labeling: uniquely label connected regions in an image. Discrete Fourier transform: implements the forward and inverse DFT. Perceptual hash: maps visually identical images to the same or similar hash-- useful in image retrieval, authentication, indexing, or copy detection as well as digital watermarking. Complex text layout bidirectional text support and shaping. Color management: accurate color management with color profiles or in lieu of-- built-in gamma compression or expansion as demanded by the colorspace. High dynamic-range images: accurately represent the wide range of intensity levels found in real scenes ranging from the brightest direct sunlight to the deepest darkest shadows. Encipher or decipher an image: convert ordinary images into unintelligible gibberish and back again. Virtual pixel support: convenient access to pixels outside the image region. Large image support: read, process, or write mega-, giga-, or tera-pixel image sizes. Threads of execution support: ImageMagick is thread safe and most internal algorithms are OpenMP-enabled to take advantage of speed-ups offered by multicore processor chips. Distributed pixel cache: offload intermediate pixel storage to one or more remote servers. Heterogeneous distributed processing: certain algorithms are OpenCL-enabled to take advantage of speed-ups offered by executing in concert across heterogeneous platforms consisting of CPUs, GPUs, and other processors. ImageMagick on the iPhone: convert, edit, or compose images on your iPhone. Examples of ImageMagick Usage, shows how to use ImageMagick from the command-line to accomplish any of these tasks and much more. Also, see Fred's ImageMagick Scripts: a plethora of command-line scripts that perform geometric transforms, blurs, sharpens, edging, noise removal, and color manipulations. With Magick.NET, use ImageMagick without having to install ImageMagick on your server or desktop. News The design of ImageMagick is an evolutionary process, with the design and implementation efforts serving to influence and guide further progress in the other. With ImageMagick version 7, we aim to improve the design based on lessons learned from the version 6 implementation. See the porting guide to track the progress of the version 7 development effort. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ImageMagick/ImageMagick"	"A simple way to produce animated graphics in R, using."	"true"
"Graphic Displays"	"gganimate"	"https://github.com/dgrtwo/gganimate"	"Create easy animations with ggplot2."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"246"	"17"	"26"	"GitHub - dgrtwo/gganimate: Create easy animations with ggplot2 Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 17 Star 246 Fork 26 dgrtwo/gganimate Code Issues 7 Pull requests 1 Pulse Graphs Create easy animations with ggplot2 13 commits 1 branch 0 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 26ec501 Feb 8, 2016 dgrtwo Removed pause argument from gg_animate examples. … ROxygen2 bump: no more version info Permalink Failed to load latest commit information. R Removed pause argument from gg_animate examples. Feb 8, 2016 README GIFs were going at wrong speed (leftover ani.option), fixed Feb 8, 2016 man Removed pause argument from gg_animate examples. Feb 8, 2016 tests Major changes, though I tried to maintain reverse compatibility with … Feb 8, 2016 .Rbuildignore Added feature to set ""cumulative = TRUE"" in a layer's aesthetic and h… Feb 2, 2016 .gitignore Initial draft of gganimate R package Feb 1, 2016 DESCRIPTION Major changes, though I tried to maintain reverse compatibility with … Feb 8, 2016 NAMESPACE Removed pause argument from gg_animate examples. Feb 8, 2016 README.Rmd Corrected description of behavior in RStudio and knitr Feb 8, 2016 README.md Corrected description of behavior in RStudio and knitr Feb 8, 2016 gganimate.Rproj Initial draft of gganimate R package Feb 1, 2016 README.md gganimate: Create easy animations with ggplot2 gganimate wraps the animation package to create animated ggplot2 plots. It can be installed using devtools: devtools::install_github(""dgrtwo/gganimate"")  The core of the approach is to treat ""frame"" (as in, the time point within an animation) as another aesthetic, just like x, y, size, color, or so on. Thus, a variable in your data can be mapped to frame just as others are mapped to x or y. For example, suppose we wanted to create an animation similar to the Gapminder world animation, using Jenny Bryan's gapminder package for the data. library(gapminder) library(ggplot2) theme_set(theme_bw()) p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent, frame = year)) +   geom_point() +   scale_x_log10() Notice we added frame = year and saved the plot as p. We then display it as an animation with the gg_animate function: library(gganimate)  gg_animate(p) This creates a animation you can view within RStudio. When run within knitr (and combined with knitr's fig.show = ""animate"" chunk option), it instead displays each of the figures in sequence to let knitr create an animation as seen above. You can also save the animation to a file, such as an GIF, video, or an animated webpage: gg_animate(p, ""output.gif"") gg_animate(p, ""output.mp4"") gg_animate(p, ""output.swf"") gg_animate(p, ""output.html"") (Each of these requires ffmpeg, ImageMagick, or other such drivers to be installed on your computer: see the animation package documentation for more). Notice that the axis limits and legend stay fixed between animation frames, even though the points move. This is one of the advantages of the gganimate package as opposed to creating each ggplot separately and combining them with the animation package: the plot (with its axes and legend) is built only once but rendered for each frame. Customization You can have some layers of your plot animated and others not, simply by adding the frame aesthetic to those layers and not others. This is useful, for example, if you want to highlight particular points in an animation rather than move them. p2 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop)) +   geom_point() +   geom_point(aes(frame = year), color = ""red"") +   scale_x_log10()  gg_animate(p2) You could also make a layer cumulative by adding an aesthetic cumulative = TRUE, which is useful for building up an object or path over time. p3 <- ggplot(gapminder, aes(gdpPercap, lifeExp, frame = year)) +   geom_path(aes(cumulative = TRUE, group = country)) +   scale_x_log10() +   facet_wrap(~continent)  gg_animate(p3) Note that while it's intuitive to match frame to a ""time"" dimension, you could match any variable in your data to the frame aesthetic. We could animate across continents instead: p4 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, frame = continent)) +   geom_point() +   scale_x_log10()  gg_animate(p4) Note that if there is a stat summarization (such as a geom_smooth) that you want to animate, you should also add a group aesthetic to that layer. Otherwise, the layer will be calculated once across all frames (and therefore be constant in the animation): p5 <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, frame = year)) +   geom_point() +   geom_smooth(aes(group = year), method = ""lm"", show.legend = FALSE) +   facet_wrap(~continent, scales = ""free"") +   scale_x_log10()  gg_animate(p5) Finally, note that you can control your animation with the same options described in ani.options, passed directly to gg_animate or to ani.options beforehand. For example, you could make the plot faster or slower with the interval argument: gg_animate(p, interval = .2) However, note that while this works for displaying a plot in RStudio or saving it, within a knitr document you'll need to add interval = .2 to the chunk options. Other options can be added with ani.options run before the chunk in question. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dgrtwo/gganimate"	"Create easy animations with ggplot2."	"true"
"Graphic Displays"	"misc3d"	"https://cran.r-project.org/web/packages/misc3d/index.html"	"Powerful functions to deal with 3d plots, isosurfaces, etc."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package misc3d misc3d: Miscellaneous 3D Plots A collection of miscellaneous 3d plots, including isosurfaces. Version: 0.8-4 Suggests: rgl, tkrplot, MASS Published: 2013-01-25 Author: Dai Feng and Luke Tierney Maintainer: Luke Tierney <luke-tierney at uiowa.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: no Citation: misc3d citation info Materials: README In views: Graphics, Multivariate CRAN checks: misc3d results Downloads: Reference manual: misc3d.pdf Package source: misc3d_0.8-4.tar.gz Windows binaries: r-devel: misc3d_0.8-4.zip, r-release: misc3d_0.8-4.zip, r-oldrel: misc3d_0.8-4.zip OS X Mavericks binaries: r-release: misc3d_0.8-4.tgz, r-oldrel: misc3d_0.8-4.tgz Old sources: misc3d archive Reverse dependencies: Reverse depends: brainR, grt, kml3d, ks, longitudinalData, mritc, ptinpoly, VecStatGraphs3D Reverse imports: curvHDR, feature, multiDimBio, NPCirc, plot3D, prim Reverse suggests: RGraphics, sm, vrmlgen"	"null"	"null"	"Powerful functions to deal with 3d plots, isosurfaces, etc."	"true"
"Graphic Displays"	"xkcd"	"https://cran.r-project.org/web/packages/xkcd/index.html"	"Use xkcd style in graphs."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package xkcd xkcd: Plotting ggplot2 Graphics in an XKCD Style Plotting ggplot2 graphs using the XKCD style. Version: 0.0.5 Depends: ggplot2, extrafont Imports: Hmisc, stats Published: 2016-01-13 Author: Emilio Torres-Manzanera Maintainer: Emilio Torres-Manzanera <torres at uniovi.es> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: no Materials: NEWS CRAN checks: xkcd results Downloads: Reference manual: xkcd.pdf Vignettes: Using xkcd Package source: xkcd_0.0.5.tar.gz Windows binaries: r-devel: xkcd_0.0.5.zip, r-release: xkcd_0.0.5.zip, r-oldrel: xkcd_0.0.5.zip OS X Mavericks binaries: r-release: xkcd_0.0.5.tgz, r-oldrel: xkcd_0.0.5.tgz Old sources: xkcd archive"	"null"	"null"	"Use xkcd style in graphs."	"true"
"Graphic Displays"	"imager"	"http://dahtah.github.io/imager/"	"An image processing package based on CImg library to work with images and display them."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"61"	"7"	"8"	"GitHub - dahtah/imager: R package for image processing Skip to content Personal Open source Business Explore Start building Sign in Pricing Blog Support Search GitHub This repository Watch 7 Star 61 Fork 8 dahtah/imager Code Issues 4 Pull requests 1 Pulse Graphs R package for image processing 224 commits 15 branches 3 releases 1 contributor C++ 92.1% Groff 4.1% R 3.8% C++ Groff R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags aswrap cimg_update cimgplugins cran_fixes cran_partII cran_partIII cxxplugin devel experimental fftw gh-pages imloop master new_subset newloadim Nothing to show snapshot_080815 0.20 0.1.3 Nothing to show New pull request Latest commit 70bb552 Apr 27, 2016 dahtah Hopefully fixed stupid CRAN error Permalink Failed to load latest commit information. R fixed CRAN stuff Apr 21, 2016 autom4te.cache recompiled Dec 4, 2015 data recompiled Dec 4, 2015 inst minor changes to CImg.h Apr 24, 2016 man fixed doc, updated NEWS Apr 21, 2016 src updated CImg headers Apr 22, 2016 vignettes removed cache Apr 26, 2016 .Rbuildignore fixed problem with .Rbuildignore Apr 20, 2016 .gitignore updated vignette Apr 19, 2016 .travis.yml recompiled Dec 4, 2015 DESCRIPTION updated NEWS Apr 20, 2016 NAMESPACE fixed CRAN stuff Apr 21, 2016 NEWS can now abort lengthy computations Apr 22, 2016 NEWS.md updated news Apr 22, 2016 README.md Hopefully fixed stupid CRAN error Apr 27, 2016 TODO recompiled Dec 4, 2015 appveyor.yml Fixed yaml? Dec 4, 2015 cleanup Deleted configure temp. files Sep 17, 2015 configure switched to configure build Aug 27, 2015 configure.ac recompiled Dec 4, 2015 README.md Imager is an image/video processing package for R, based on CImg, a C++ library by David Tschumperlé. CImg provides an easy-to-use and consistent API for image processing, which imager largely replicates. CImg supports images in up to four dimensions, which makes it suitable for applications like video processing/hyperspectral imaging/MRI. Installing the package Imager is now on CRAN, so install.packages(""imager"")  should do the trick. You may also want to install ImageMagick and ffmpeg, see ""External Dependencies"" below. The version of CRAN will often lag the one on github. If you'd like to install the latest version, you'll have to build the package from source. Install the devtools package if you haven't already. Run: devtools::install_github(""dahtah/imager"")  If that doesn't work then you're probably missing a build environment or a library, see below. OS X You'll need Xcode (OS X's development environment) to compile source packages. The FFTW library is needed, and the easiest way to install it is via Homebrew. Install Homebrew, then run: brew install fftw Windows Building R packages on Windows is a bit of a pain so you're probably better off with the binary package (which may not be up-to-date). If you need the latest version of imager, you'll have to: Install Rtools Install additional libraries for Rtools. You want the package that's called ""local tree"". Put those libraries somewhere gcc can find them. Linux To build under Linux make sure you have the headers for libX11 and libfftw3. On my Ubuntu system this seems to be enough: sudo apt-get install libfftw3-dev libX11-dev  External dependencies On its own imager only supports JPEG, PNG and BMP formats. If you need support for other file types install ImageMagick. To load videos you'll need ffmpeg, no file formats are supported natively. Getting started tennis <- load.image(system.file('extdata/tennis_sif.mpeg',package='imager')) play(tennis) #now filter in the time direction and pipe to play deriche(tennis,10,axis=""z"") %>% play  Documentation is available here. To get a list of all package functions, run: ls(pos = ""package:imager"") Important warning on memory usage All images are stored as standard R numeric vectors (i.e., double-precision), meaning that they take up a lot of memory. It's easy to underestimate how much storage you need for videos, because they take up so little space in a compressed format. Before you can work on it in R a video has to be fully decompressed and stored as double-precision floats. To get a sense of the size, consider a low-resolution (400x300), colour video lasting 120 sec. The video might take up a few MBs when compressed. To store it in memory, you'll need: (400x300) x (25x120) x 3 values, corresponding to (space)x(time)x(colour). In addition, each value costs 8 bytes of storage, for a grand total of 8GB of memory. For out-of-memory processing of videos, see the experimental package imagerstreams. Current status Imager is fully functional but still young, so the API might change. Open an issue on Github or email me if you've found a bug or would like to suggest a feature. Test pictures Imager ships with four test pictures and a video. Two (parrots and boats) come from the Kodak set. Another is a sketch of birds by Leonardo, from Wikimedia. Also from Wikimedia: the Hubble Deep field. The test video comes from xiph.org's collection. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dahtah/imager"	"An image processing package based on CImg library to work with images and display them."	"true"
"HTML Widgets"	"d3heatmap"	"https://github.com/rstudio/d3heatmap"	"Interactive heatmaps with D3."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"142"	"28"	"53"	"GitHub - rstudio/d3heatmap: A D3.js-based heatmap htmlwidget for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 28 Star 142 Fork 53 rstudio/d3heatmap Code Issues 34 Pull requests 8 Wiki Pulse Graphs A D3.js-based heatmap htmlwidget for R 151 commits 8 branches 0 releases 3 contributors HTML 73.2% R 17.9% JavaScript 6.7% CSS 2.2% HTML R JavaScript CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags colorlabels dendrogram joe/bugfix/self-getId joe/feature/custom-lines master refactor/components separate-clusters wip Nothing to show Nothing to show New pull request Latest commit 5babdac May 25, 2016 jcheng5 Merge pull request #66 from csgillespie/patch-1 … One character typo Permalink Failed to load latest commit information. R Add imports; needed to pass R-devel check Jul 26, 2015 inst Rename heatmap.js to avoid false positives from ad blocker Nov 2, 2015 man roxygenize Jun 22, 2015 tests More reliable smoke tests Feb 23, 2016 vignettes One character typo May 25, 2016 .Rbuildignore R CMD check fix Jun 22, 2015 .bowerrc Make htmlwidget package, add hovering behavior to labels Apr 16, 2015 .gitignore Heatmap impl Jul 17, 2013 DESCRIPTION More reliable smoke tests Feb 23, 2016 LICENSE Show value tooltip on hover May 1, 2015 NAMESPACE Add imports; needed to pass R-devel check Jul 27, 2015 NEWS More reliable smoke tests Feb 23, 2016 README.md Use better example Jun 23, 2015 d3heatmap.Rproj Project settings Jun 23, 2015 template.html Package-ify Jul 17, 2013 README.md If you are using a version of d3heatmap older than 0.4.0, please upgrade now! Previous versions put row and column names in the incorrect order! D3 Heatmap for R This is an R package that implements a heatmap htmlwidget. It has the following features: Highlight rows/columns by clicking axis labels Click and drag over colormap to zoom in (click on colormap to zoom out) Optional clustering and dendrograms, courtesy of base::heatmap Example http://rpubs.com/jcheng/mtcars-heatmap Installation To install: if (!require(""devtools"")) install.packages(""devtools"") devtools::install_github(""rstudio/d3heatmap"") Usage Like any htmlwidget, you can visualize a d3 heatmap directly from the R console: library(d3heatmap) d3heatmap(mtcars, scale = ""column"", colors = ""Spectral"") You can also include them in R Markdown chunks, or use them in Shiny applications with the d3heatmapOutput and renderD3heatmap functions. See ?d3heatmap for options. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/d3heatmap"	"Interactive heatmaps with D3."	"true"
"HTML Widgets"	"DataTables"	"http://rstudio.github.io/DT/"	"Displays R matrices or data frames as interactive HTML tables."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"148"	"36"	"49"	"GitHub - rstudio/DT: R Interface to the jQuery Plug-in DataTables Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 36 Star 148 Fork 49 rstudio/DT Code Issues 73 Pull requests 2 Pulse Graphs R Interface to the jQuery Plug-in DataTables http://rstudio.github.io/DT 615 commits 5 branches 1 release Fetching contributors R 56.3% JavaScript 33.2% CSS 10.5% R JavaScript CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags feature/fill-container feature/viewer-sizing gh-pages joe/feature/crosstalk master Nothing to show v0.1 Nothing to show New pull request Latest commit cb05e70 Jun 27, 2016 yihui roxygenize and bump version Permalink Failed to load latest commit information. R add a clearSearch() method Jun 27, 2016 inst add a clearSearch() method Jun 27, 2016 man roxygenize and bump version Jun 27, 2016 tools closes #213: support the Buttons extension Mar 15, 2016 vignettes Revert ""Remove vignette--doesn't seem to work on Windows. Don't inclu… Jun 8, 2015 .Rbuildignore ignore my own test examples Jul 18, 2015 .gitignore ignore Rnb.cached Mar 10, 2016 .travis.yml install pandoc Jan 28, 2016 DESCRIPTION roxygenize and bump version Jun 27, 2016 DT.Rproj no need to use --no-manual May 25, 2015 LICENSE More licenses Jun 5, 2015 NAMESPACE roxygenize and bump version Jun 27, 2016 NEWS.md add a clearSearch() method Jun 27, 2016 README.md the tag DT has been created on SO: http://stackoverflow.com/questions… Jul 22, 2015 README.md An R interface to the DataTables library This package provides a function datatable() to display R data via the DataTables library (N.B. not to be confused with the data.table package). Installation You may install the stable version from CRAN, or the development version using devtools: # install from CRAN install.packages('DT')  # or the development version if necessary devtools::install_github('rstudio/DT')  # then try DT::datatable(iris) as a hello world example See the full documentation at http://rstudio.github.io/DT. Please use Github issues if you want to file bug reports or feature requests, and you may use StackOverflow or the shiny-discuss mailing list to ask questions. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/DT"	"Displays R matrices or data frames as interactive HTML tables."	"true"
"HTML Widgets"	"DiagrammeR"	"https://github.com/rich-iannone/DiagrammeR"	"Create JS graph diagrams and flowcharts in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"541"	"56"	"92"	"GitHub - rich-iannone/DiagrammeR: Create graph diagrams and flowcharts using R. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 56 Star 541 Fork 92 rich-iannone/DiagrammeR Code Issues 30 Pull requests 0 Pulse Graphs Create graph diagrams and flowcharts using R. http://rich-iannone.github.io/DiagrammeR/ 3,469 commits 2 branches 10 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v0.8.3 v0.8 v0.7 v0.6 0.8.2 0.5 0.4 0.3 0.2 0.1 Nothing to show New pull request Latest commit 4ba5ffd Jul 15, 2016 rich-iannone Update help files using roxygen Permalink Failed to load latest commit information. R Add 'dontrun' directives to several examples Jul 15, 2016 inst Replace images with newer versions Jul 13, 2016 man Update help files using roxygen Jul 15, 2016 tests Make corrections to tests Jul 11, 2016 .Rbuildignore Add to .Rbuildignore Jul 12, 2015 .gitattributes Add .gitattributes file Jun 12, 2015 .gitignore Modify .gitignore Sep 21, 2015 .travis.yml Update .travis.yml Aug 30, 2015 DESCRIPTION Add to Suggests list Jul 14, 2016 DiagrammeR.Rproj Add .Rproj file Sep 21, 2015 LICENSE Update year in LICENSE Feb 28, 2016 NAMESPACE Add to NAMESPACE Jul 15, 2016 NEWS.md Update NEWS.md Sep 18, 2015 README.md Modify README.md Jul 15, 2016 README.md With the DiagrammeR package you can create, modify, analyze, and visualize network graph diagrams. You can either use Markdown-like text to describe and render a diagram, or, use a collection of functions to create graph objects. The output can be viewed in the RStudio Viewer, incorporated in R Markdown, or integrated in shiny web apps. It's possible to make the above graph diagram using using Graphviz DOT code (as text within the DiagrammeR grViz() function) or through a combination of DiagrammeR functions strung together with the magrittr %>% pipe. So, with Graphviz: library(DiagrammeR)  grViz("" digraph DAG {    # Intialization of graph attributes   graph [overlap = true]    # Initialization of node attributes   node [shape = box,         fontname = Helvetica,         color = blue,         type = box,         fixedsize = true]    # Initialization of edge attributes   edge [color = green,         rel = yields]    # Node statements   1; 2; 3; 4; 8; 9; 10; 11    # Revision to node attributes   node [shape = circle]    # Node statements   5; 6; 7    # Edge statements   1->5; 2->6; 3->9; 4->7; 5->8; 5->10; 7->11    # Revision to edge attributes   edge [color = red]    # Edge statements   1->8; 3->6; 3->11; 3->7; 5->9; 6->10 } "") With magrittr and DiagrammeR's graph functions: library(DiagrammeR) library(magrittr)  graph <-   create_graph() %>%   set_graph_name(""DAG"") %>%   set_global_graph_attrs(""graph"", ""overlap"", ""true"") %>%   set_global_graph_attrs(""graph"", ""fixedsize"", ""true"") %>%   set_global_graph_attrs(""node"", ""color"", ""blue"") %>%   set_global_graph_attrs(""node"", ""fontname"", ""Helvetica"") %>%   add_n_nodes(11) %>%   select_nodes_by_id(1:4) %>%    set_node_attrs_ws(""shape"", ""box"") %>%   set_node_attrs_ws(""type"", ""box"") %>%   clear_selection %>%   select_nodes_by_id(5:7) %>%    set_node_attrs_ws(""shape"", ""circle"") %>%   set_node_attrs_ws(""type"", ""circle"") %>%   clear_selection %>%   select_nodes_by_id(8:11) %>%    set_node_attrs_ws(""shape"", ""box"") %>%   set_node_attrs_ws(""type"", ""box"") %>%   clear_selection %>%   add_edge(1, 5) %>%    add_edge(2, 6) %>%   add_edge(3, 9) %>%    add_edge(4, 7) %>%   add_edge(5, 8) %>%    add_edge(5, 10) %>%   add_edge(7, 11) %>%    select_edges %>%   set_edge_attrs_ws(""color"", ""green"") %>%   add_edge(1, 8) %>%    add_edge(3, 6) %>%   add_edge(3, 11) %>%    add_edge(3, 7) %>%   add_edge(5, 9) %>%    add_edge(6, 10) %>%   select_edges(""color"", ""^$"") %>%   set_edge_attrs_ws(""color"", ""red"") %>%   clear_selection  render_graph(graph) The graph functions allow you create graph objects, render those graphs, modify those graphs, get information from the graphs, create a series of graphs, perform scaling of attribute values with data values, and do other useful things. This functionality makes it possible to generate a network graph with data available in tabular datasets. The general idea is to build specialized data frames that contain either node data and attributes (node data frames) and those data frames that contain edge data and edge attributes (edge data frames). These data frames are permitted to have node and edge attributes and also columns of other data. Because the attributes are always kept alongside the node and edge definitions (within the graph object itself), we can easily work with them and modify the values of the styling attributes and differentiate nodes and edges by size, color, shape, opacity, length, etc. Here is a listing of the available graph functions: Network Graph Example Let's create a network graph by combining CSV data that pertains to contributors to three software projects. The CSV files (contributors.csv, projects.csv, and projects_and_contributors.csv) are available in the DiagrammeR package. Together they provide the properties name, age, join_date, email, follower_count, following_count, and starred_count to the person nodes; project, start_date, stars, and language to the project nodes; and the contributor_role and commits properties to the edges. library(DiagrammeR) library(magrittr)  graph <-   create_graph() %>%   set_graph_name(""software_projects"") %>%   set_global_graph_attrs(     ""graph"", ""output"", ""visNetwork"") %>%   add_nodes_from_table(     system.file(       ""examples/contributors.csv"",       package = ""DiagrammeR""),     set_type = ""person"",     label_col = ""name"") %>%   add_nodes_from_table(     system.file(       ""examples/projects.csv"",       package = ""DiagrammeR""),     set_type = ""project"",     label_col = ""project"") %>%   add_edges_from_table(     system.file(       ""examples/projects_and_contributors.csv"",       package = ""DiagrammeR""),     from_col = ""contributor_name"",     from_mapping = ""name"",     to_col = ""project_name"",     to_mapping = ""project"",     rel_col = ""contributor_role"") View the property graph. graph %>% render_graph Now that the graph is set up, you can construct queries with magrittr pipelines to get specific answers from the graph. Get the average age of all the contributors: graph %>%    select_nodes(""type"", ""person"") %>%   cache_node_attrs_ws(""age"", ""numeric"") %>%   get_cache %>%    mean #> [1] 33.6 Get the total number of commits to all software projects: graph %>%    select_edges %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   get_cache %>%    sum #> [1] 5182 Get the total number of commits from Josh as a maintainer and as a contributor: graph %>%    select_nodes(""name"", ""Josh"") %>%   trav_out_edge %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   get_cache %>%    sum #> [1] 227 Get the total number of commits from Louisa: graph %>%    select_nodes(""name"", ""Louisa"") %>%   trav_out_edge %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   get_cache %>%    sum #> [1] 615 Get the names of people in graph above age 32: graph %>%    select_nodes(""type"", ""person"") %>%   select_nodes(""age"", "">32"", ""intersect"") %>%   cache_node_attrs_ws(""name"") %>%   get_cache %>%   sort #> [1] ""Jack""   ""Jon""    ""Kim""    ""Roger""  ""Sheryl"" Get the total number of commits from all people to the supercalc project: graph %>%    select_nodes(""project"", ""supercalc"") %>%   trav_in_edge %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   get_cache %>%    sum #> [1] 1676 Who committed the most to the supercalc project? graph %>%    select_nodes(""project"", ""supercalc"") %>%   trav_in_edge %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   trav_in_node %>%   trav_in_edge(""commits"", max(get_cache(.))) %>%   trav_out_node %>%   cache_node_attrs_ws(""name"") %>%   get_cache #> [1] ""Sheryl"" What is the email address of the individual that contributed the least to the randomizer project? graph %>%    select_nodes(""project"", ""randomizer"") %>%   trav_in_edge %>%   cache_edge_attrs_ws(""commits"", ""numeric"") %>%   trav_in_node %>%   trav_in_edge(""commits"", min(get_cache(.))) %>%   trav_out_node %>%   cache_node_attrs_ws(""email"") %>%   get_cache #> [1] ""the_will@graphymail.com"" Kim is now a contributor to the stringbuildeR project and has made 15 new commits to that project. Modify the graph to reflect this and view the updated graph: graph %<>%   add_edge(     get_nodes(.,       ""name"", ""Kim""),     get_nodes(.,       ""project"", ""stringbuildeR""),     ""contributor"") %>%   select_last_edge %>%   set_edge_attrs_ws(""commits"", 15) %>%   clear_selection  graph %>% render_graph Get all email addresses to contributors (but not maintainers) of the randomizer and supercalc88 projects: graph %>%    select_nodes(""project"", ""randomizer"") %>%   select_nodes(""project"", ""supercalc"") %>%   trav_in_edge(""rel"", ""contributor"") %>%   trav_out_node %>%   cache_node_attrs_ws(""email"", ""character"") %>%   get_cache %>%    sort #> [1] ""j_2000@ultramail.io""      ""josh_ch@megamail.kn""      #> [3] ""kim_3251323@ohhh.ai""      ""lhe99@mailing-fun.com""    #> [5] ""roger_that@whalemail.net"" ""the_simone@a-q-w-o.net""   #> [7] ""the_will@graphymail.com"" Which committer to the randomizer project has the highest number of followers? graph %>%    select_nodes(""project"", ""randomizer"") %>%   trav_in %>%   cache_node_attrs_ws(""follower_count"", ""numeric"") %>%   select_nodes(""project"", ""randomizer"") %>%   trav_in(""follower_count"", max(get_cache(.))) %>%   cache_node_attrs_ws(""name"") %>%   get_cache #> [1] ""Kim"" Which people have committed to more than one project? graph %>%   select_nodes_by_degree(""out"", "">1"") %>%   cache_node_attrs_ws(""name"") %>%   get_cache %>%    sort #> [1] ""Josh""  ""Kim""  ""Louisa"" Installation DiagrammeR is used in an R environment. If you don't have an R installation, it can be obtained from the Comprehensive R Archive Network (CRAN). It is recommended that RStudio be used as the R IDE to take advantage of its rendering capabilities and the code-coloring support for Graphviz and mermaid diagrams. You can install the development version of DiagrammeR from GitHub using the devtools package. devtools::install_github('rich-iannone/DiagrammeR') Or, get the v0.8.2 release from CRAN. install.packages('DiagrammeR') Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rich-iannone/DiagrammeR"	"Create JS graph diagrams and flowcharts in R."	"true"
"HTML Widgets"	"dygraphs"	"https://github.com/rstudio/dygraphs"	"Charting time-series data in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"150"	"29"	"77"	"GitHub - rstudio/dygraphs: R interface to dygraphs Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 29 Star 150 Fork 77 rstudio/dygraphs Code Issues 47 Pull requests 1 Pulse Graphs R interface to dygraphs http://rstudio.github.io/dygraphs 397 commits 12 branches 0 releases 10 contributors JavaScript 88.5% R 11.5% JavaScript R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags feature/annotations feature/axis-logscale feature/destroy-dygraph feature/dygraphs-1.1 feature/null-check feature/shiny-date-window-input feature/timezones gh-pages master no-slide-shown-resize tocify v0.3 Nothing to show Nothing to show New pull request Latest commit ed4ead4 Jun 20, 2016 jjallaire committed on GitHub Merge pull request #118 from Tutuchan/master … handle milliseconds Permalink Failed to load latest commit information. R handle milliseconds Jun 16, 2016 inst add NEWS item Jun 20, 2016 man regenerate docs Apr 24, 2016 tests event: enable mutltiple events with one call to dyEvent Mar 16, 2016 .Rbuildignore ignore _files in examples Mar 8, 2016 .gitignore add .DS_Store to .gitignore Oct 28, 2014 DESCRIPTION update NEWS and DESCRIPTION Apr 24, 2016 LICENSE update DESCRIPTION and LICENSE Feb 2, 2016 NAMESPACE re-roxygenize Feb 1, 2016 README.md update readme Sep 16, 2014 dygraphs.Rproj update news and description Apr 7, 2015 README.md dygraphs for R The dygraphs package is an R interface to the dygraphs JavaScript charting library. It provides rich facilites for charting time-series data in R, including: Automatically plots xts time series objects (or any object convertible to xts). Highly configurable axis and series display (including optional second Y-axis). Rich interactive features including zoom/pan and series/point highlighting. Display upper/lower bars (e.g. prediction intervals) around series. Various graph overlays including shaded regions, event lines, and point annotations. Use at the R console just like conventional R plots (via RStudio Viewer). Seamless embedding within R Markdown documents and Shiny web applications. Installation The dygraphs package depends on the development version of the htmlwidgets package so you need to install both packages. You can do this using the devtools package as follows: devtools::install_github(c(""ramnathv/htmlwidgets"", ""rstudio/dygraphs"")) Usage If you have an xts-compatible time-series object creating an interactive plot of it is as simple as this: dygraph(nhtemp, main = ""New Haven Temperatures"") You can also further customize axes and series display as well as add interacitve features like a range selector: dygraph(nhtemp, main = ""New Haven Temperatures"") %>%   dyAxis(""y"", label = ""Temp (F)"", valueRange = c(40, 60)) %>%   dyOptions(fillGraph = TRUE, drawGrid = FALSE) %>%   dyRangeSelector() See the online documentation for the dygraphs package for additional details and examples. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/dygraphs"	"Charting time-series data in R."	"true"
"HTML Widgets"	"formattable"	"http://renkun.me/formattable/"	"Formattable Data Structures."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"220"	"28"	"29"	"GitHub - renkun-ken/formattable: Formattable Data Structures Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 28 Star 220 Fork 29 renkun-ken/formattable Code Issues 16 Pull requests 0 Pulse Graphs Formattable Data Structures https://renkun.me/formattable/ 246 commits 7 branches 0 releases 6 contributors R 57.9% JavaScript 42.1% R JavaScript Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags feature/htmlwidget fix/add-class fix/add-jquery gh-pages html-table master v0.2 Nothing to show Nothing to show New pull request Latest commit 9e6511d Apr 11, 2016 renkun-ken update news Permalink Failed to load latest commit information. R preserve vector names (fixes #56) Apr 11, 2016 demo implement normalize_bar and proportion_bar (#49) Mar 2, 2016 inst/htmlwidgets delete woff2 to avoid pandoc error Feb 2, 2016 man refine docs for color_bar Mar 2, 2016 tests implement normalize_bar and proportion_bar (#49) Mar 2, 2016 .Rbuildignore include full-text license Feb 10, 2016 .gitignore update readme Apr 17, 2015 .travis.yml use codecov.io Sep 9, 2015 DESCRIPTION update description Apr 11, 2016 LICENSE update license Jan 13, 2016 LICENSE.md include full-text license Feb 10, 2016 NAMESPACE implement normalize_bar and proportion_bar (#49) Mar 2, 2016 NEWS update news Apr 11, 2016 README.Rmd update documents (#42, #49) Mar 2, 2016 README.ja.Rmd implement normalize_bar and proportion_bar (#49) Mar 2, 2016 README.ja.md implement normalize_bar and proportion_bar (#49) Mar 2, 2016 README.md update documents (#42, #49) Mar 2, 2016 appveyor.yml add windows build status Jul 24, 2015 formattable.Rproj package structure Apr 2, 2015 formattable.png update preview image Jun 4, 2015 README.md formattable This package is designed for applying formatting on vectors and data frames to make data presentation easier, richer, more flexible and hopefully convey more information. This document is also translated into 日本語 by @hoxo_m, @dichika and @teramonagi. Breaking changes In development version 0.1.7: color_bar is now broken into two versions using different transform functions: normalize_bar uses normalize, the same as color_bar in previous versions, and proportion_bar uses newly introduced proportion as x / max(abs(x)) to create bars of proportional width. (#42, #49) Install The package is available on both GitHub and CRAN. Install from GitHub: # install.packages(""devtools"") devtools::install_github(""renkun-ken/formattable"") Install from CRAN: install.packages(""formattable"") Introduction Atomic vectors are basic units to store data. Some data can be read more easily with formatting. A numeric vector, for example, stores a group of percentage numbers yet still shows in the form of typical floating numbers. This package provides functions to create data structures with predefined formatting rules so that these objects store the original data but are printed with formatting. The package provides several typical formattable objects such as percent, comma, currency, accounting and scientific. These objects are essentially numeric vectors with pre-defined formatting rules and parameters. For example, library(formattable) p <- percent(c(0.1, 0.02, 0.03, 0.12)) p ## [1] 10.00% 2.00%  3.00%  12.00%  The percent vector is no different from a numeric vector but has a percentage representation as being printed. It works with arithmetic operations and common functions and preserves its formatting. p + 0.05 ## [1] 15.00% 7.00%  8.00%  17.00%  max(p) ## [1] 12.00%  balance <- accounting(c(1000, 500, 200, -150, 0, 1200)) balance ## [1] 1,000.00 500.00   200.00   (150.00) 0.00     1,200.00  balance + 1000 ## [1] 2,000.00 1,500.00 1,200.00 850.00   1,000.00 2,200.00  These functions are special cases of what formattable() can do. formattable() applies highly customizable formatting to objects of a wide range of classes like numeric, logical, factor, Date, data.frame, etc. A typical data frame may look more friendly with formattable column vectors. For example, p <- data.frame(   id = c(1, 2, 3, 4, 5),    name = c(""A1"", ""A2"", ""B1"", ""B2"", ""C1""),   balance = accounting(c(52500, 36150, 25000, 18300, 7600), format = ""d""),   growth = percent(c(0.3, 0.3, 0.1, 0.15, 0.15), format = ""d""),   ready = formattable(c(TRUE, TRUE, FALSE, FALSE, TRUE), ""yes"", ""no"")) p ##   id name balance growth ready ## 1  1   A1  52,500    30%   yes ## 2  2   A2  36,150    30%   yes ## 3  3   B1  25,000    10%    no ## 4  4   B2  18,300    15%    no ## 5  5   C1   7,600    15%   yes  Formatting tables in dynamic document In a typical workflow of dynamic document production, knitr and rmarkdown are powerful tools to render documents with R code to different types of portable documents. knitr is able to render an RMarkdown document (markdown document with R code chunks) to Markdown document. rmarkdown calls pandoc to render a markdown document to HTML web page. To put a table (data.frame in R) on the page, one may call knitr::kable to produce its markdown representation. By default the resulted table is in a plain theme with no additional formatting. However, in some cases, additional formatting may help clarify the information and make contrast of the data. This package provides functions to produce formatted tables in dynamic documents. df <- data.frame(   id = 1:10,   name = c(""Bob"", ""Ashley"", ""James"", ""David"", ""Jenny"",      ""Hans"", ""Leo"", ""John"", ""Emily"", ""Lee""),    age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30),   grade = c(""C"", ""A"", ""A"", ""C"", ""B"", ""B"", ""B"", ""A"", ""C"", ""C""),   test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6),   test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8),   final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7),   registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE),   stringsAsFactors = FALSE) Plain table: id name age grade test1_score test2_score final_score registered 1 Bob 28 C 8.9 9.1 9.00 TRUE 2 Ashley 27 A 9.5 9.1 9.30 FALSE 3 James 30 A 9.6 9.2 9.40 TRUE 4 David 28 C 8.9 9.1 9.00 FALSE 5 Jenny 29 B 9.1 8.9 9.00 TRUE 6 Hans 29 B 9.3 8.5 8.90 TRUE 7 Leo 27 B 9.3 9.2 9.25 TRUE 8 John 27 A 9.9 9.3 9.60 FALSE 9 Emily 31 C 8.5 9.1 8.80 FALSE 10 Lee 30 C 8.6 8.8 8.70 FALSE Formatted table with the following visualizations: Ages are rendered in gradient. All A grades are displayed in green bold. test1_score and test2_score are indicated by horizontal bars and are background-colorized: white (low score) to pink (high score) final_score shows score and ranking. Top 3 are green, and others are gray. registered texts are transformed to an icon and yes/no text. library(formattable)  formattable(df, list(   age = color_tile(""white"", ""orange""),   grade = formatter(""span"",     style = x ~ ifelse(x == ""A"", style(color = ""green"", font.weight = ""bold""), NA)),   test1_score = normalize_bar(""pink"", 0.2),   test2_score = normalize_bar(""pink"", 0.2),   final_score = formatter(""span"",     style = x ~ style(color = ifelse(rank(-x) <= 3, ""green"", ""gray"")),     x ~ sprintf(""%.2f (rank: %02d)"", x, rank(-x))),   registered = formatter(""span"",      style = x ~ style(color = ifelse(x, ""green"", ""red"")),     x ~ icontext(ifelse(x, ""ok"", ""remove""), ifelse(x, ""Yes"", ""No""))) )) The icon set used in the table is by GLYPHICONS.com and included in Bootstrap. htmlwidget conversion in interactive environments formattable will automatically convert to an htmlwidget when in an interactive() context such as the console or RStudio IDE. If you would like to avoid this conversion and see the markdown table output, please use format_table that calls knitr::kable with formatters or call as.character with the formattable data.frame object. License This package is under MIT License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/renkun-ken/formattable"	"Formattable Data Structures."	"true"
"HTML Widgets"	"ggvis"	"https://github.com/rstudio/ggvis"	"Interactive grammar of graphics for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"554"	"116"	"151"	"GitHub - rstudio/ggvis: Interactive grammar of graphics for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 116 Star 554 Fork 151 rstudio/ggvis Code Issues 171 Pull requests 8 Pulse Graphs Interactive grammar of graphics for R 2,155 commits 2 branches 7 releases Fetching contributors R 54.3% JavaScript 40.1% HTML 5.1% Other 0.5% R JavaScript HTML Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags layer_group master Nothing to show v0.4.2 v0.4.1 v0.4 v0.3.0.1 v0.3 v0.2 v0.1 Nothing to show New pull request Latest commit be1aa1a Jun 13, 2016 wch Switch VignetteEngine to knitr::rmarkdown Permalink Failed to load latest commit information. R Qualify base functions Jun 10, 2016 bench Faster version of all_same, remove redundant is_constant Jun 15, 2013 data Add cocaine seizures data May 8, 2014 demo Update basic demo app Mar 31, 2015 inst Switched from stripped-down build to full build of jQuery UI 1.11.4 Oct 19, 2015 man-roxygen Deleting more files Apr 30, 2014 man Update roxygen2 Jun 10, 2016 revdep Prepare for release Jun 4, 2015 tests Merge branch 'master' of github.com:rstudio/ggvis Jun 10, 2016 tools Add javascript element resize detection library Apr 1, 2015 vignettes Switch VignetteEngine to knitr::rmarkdown Jun 13, 2016 .Rbuildignore Prepare for release Jun 4, 2015 .gitattributes Enable union merge for NEWS file Jul 9, 2014 .gitignore Ignore node_modules Sep 26, 2014 .travis.yml Switch to modern travis Jun 10, 2016 CONTRIBUTING.md Fix contributer URLSs Aug 21, 2014 DESCRIPTION Qualify base functions Jun 10, 2016 LICENSE Add javascript element resize detection library Apr 1, 2015 NAMESPACE Update roxygen2 Jun 10, 2016 NEWS.md Update NEWS Jun 10, 2016 README.md Update README.md Sep 19, 2014 cran-comments.md Prepare for release Jun 4, 2015 ggvis.Rproj Don't build vignettes before checking Jan 2, 2015 README.md ggvis The goal of ggvis is to make it easy to describe interactive web graphics in R. It combines: a grammar of graphics from ggplot2, reactive programming from shiny, and data transformation pipelines from dplyr. ggvis graphics are rendered with vega, so you can generate both raster graphics with HTML5 canvas and vector graphics with svg. ggvis is less flexible than raw d3 or vega, but is much more succinct and is tailored to the needs of exploratory data analysis. If you find a bug, please file a minimal reproducible example at http://github.com/rstudio/ggvis/issues. If you're not sure if something is a bug, you'd like to discuss new features or have any other questions about ggvis, please join us on the mailing list: https://groups.google.com/group/ggvis. Installation Install the latest release version from CRAN with: install.packages(""ggvis"") Install the latest development version with: # install.packages(""devtools"") devtools::install_github(""hadley/lazyeval"", build_vignettes = FALSE) devtools::install_github(""hadley/dplyr"", build_vignettes = FALSE) devtools::install_github(""rstudio/ggvis"", build_vignettes = FALSE) Getting started You construct a visualisation by piping pieces together with %>%. The pipeline starts with a data set, flows into ggvis() to specify default visual properties, then layers on some visual elements: mtcars %>% ggvis(~mpg, ~wt) %>% layer_points() The vignettes, available from http://ggvis.rstudio.com/, provide many more details. Start with the introduction, then work your way through the more advanced topics. Also check out the various demos in the demo/ directory. See the basics in demo/scatterplot.r then check out the the coolest demos, demo/interactive.r and demo/tourr.r. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/ggvis"	"Interactive grammar of graphics for R."	"true"
"HTML Widgets"	"Leaflet"	"http://rstudio.github.io/leaflet/"	"One of the most popular JavaScript libraries interactive maps."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Leaflet for R - Introduction Leaflet for R Introduction The Map Widget Basemaps Markers Popups Lines and Shapes JSON Raster Images Shiny Integration Colors Legends Show/Hide Layers Introduction Leaflet is one of the most popular open-source JavaScript libraries for interactive maps. It’s used by websites ranging from The New York Times and The Washington Post to GitHub and Flickr, as well as GIS specialists like OpenStreetMap, Mapbox, and CartoDB. This R package makes it easy to integrate and control Leaflet maps in R. Features Interactive panning/zooming Compose maps using arbitrary combinations of: Map tiles Markers Polygons Lines Popups GeoJSON Create maps right from the R console or RStudio Embed maps in knitr/R Markdown documents and Shiny apps Easily render Spatial objects from the sp package, or data frames with latitude/longitude columns Use map bounds and mouse events to drive Shiny logic Installation To install this R package, run this command at your R prompt: install.packages(""leaflet"") # to install the development version from Github, run # devtools::install_github(""rstudio/leaflet"") Once installed, you can use this package at the R console, within R Markdown documents, and within Shiny applications. Basic Usage You create a Leaflet map with these basic steps: Create a map widget by calling leaflet(). Add layers (i.e., features) to the map by using layer functions (e.g. addTiles, addMarkers, addPolygons) to modify the map widget. Repeat step 2 as desired. Print the map widget to display it. Here’s a basic example: library(leaflet)  m <- leaflet() %>%   addTiles() %>%  # Add default OpenStreetMap map tiles   addMarkers(lng=174.768, lat=-36.852, popup=""The birthplace of R"") m  # Print the map In case you’re not familiar with the magrittr pipe operator (%>%), here is the equivalent without using pipes: m <- leaflet() m <- addTiles(m) m <- addMarkers(m, lng=174.768, lat=-36.852, popup=""The birthplace of R"") m Next Steps We highly recommend that you proceed to The Map Widget page before exploring the rest of this site, as it describes common idioms we’ll use throughout the examples on the other pages. Although we have tried to provide an R-like interface to Leaflet, you may want to check out the API documentation of Leaflet occasionally when the meanings of certain parameters are not clear to you. The ""leaflet"" R package is copyright © 2014-2015 RStudio, Inc. The Leaflet JavaScript library is © 2010–2014 Vladimir Agafonkin, 2010–2011 CloudMade. Maps © OpenStreetMap contributors unless otherwise noted."	"null"	"null"	"One of the most popular JavaScript libraries interactive maps."	"true"
"HTML Widgets"	"MetricsGraphics"	"http://hrbrmstr.github.io/metricsgraphics/"	"Enables easy creation of D3 scatterplots, line charts, and histograms."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Introduction to metricsgraphics"	"null"	"null"	"Enables easy creation of D3 scatterplots, line charts, and histograms."	"true"
"HTML Widgets"	"networkD3"	"http://christophergandrud.github.io/networkD3/"	"D3 JavaScript Network Graphs from R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"networkD3 networkD3: D3 JavaScript Network Graphs from R Fork me on v0.2.13 Issues/suggestions Christopher Gandrud, JJ Allaire, & Kent Russell 2016-07-11 About This is a port of Christopher Gandrud’s R package d3Network for creating D3 network graphs to the htmlwidgets framework. The htmlwidgets framework greatly simplifies the package’s syntax for exporting the graphs, improves integration with RStudio’s Viewer Pane, RMarkdown, and Shiny web apps. See below for examples. It currently supports three types of network graphs: Force directed networks with simpleNetwork and forceNetwork Sankey diagrams with sankeyNetwork Reingold-Tilford Tree graphs with treeNetwork Install networkD3 works very well with the most recent version of RStudio (>=v0.99, download). When you use this version of RStudio, graphs will appear in the Viewer Pane. Not only does this give you a handy way of seeing and tweaking your graphs, but you can also export the graphs to the clipboard or a PNG/JPEG/TIFF/etc. file. The package can be downloaded from CRAN. Usage For a full set of examples for each of the functions see this page. Note: You are probably used to R’s 1-based numbering (i.e. counting in R starts from 1). However, networkD3 plots are created using JavaScript, which is 0-based. So, your data links will need to start from 0. See this data set for example. You can also use igraph to build your graph data and then use the igraph_to_networkD3 function to convert this data to a suitable object for networkD3 plotting. > simpleNetwork For very basic force directed network graphics you can use simpleNetwork. For example: # Load package library(networkD3)  # Create fake data src <- c(""A"", ""A"", ""A"", ""A"",         ""B"", ""B"", ""C"", ""C"", ""D"") target <- c(""B"", ""C"", ""D"", ""J"",             ""E"", ""F"", ""G"", ""H"", ""I"") networkData <- data.frame(src, target)  # Plot simpleNetwork(networkData) > forceNetwork Use forceNetwork to have more control over the appearance of the forced directed network and to plot more complicated networks. Here is an example: # Load data data(MisLinks) data(MisNodes)  # Plot forceNetwork(Links = MisLinks, Nodes = MisNodes,             Source = ""source"", Target = ""target"",             Value = ""value"", NodeID = ""name"",             Group = ""group"", opacity = 0.8) From version 0.1.3 you can also allow scroll-wheel zooming by setting zoom = TRUE. > sankeyNetwork You can also create Sankey diagrams with sankeyNetwork. Here is an example using downloaded JSON data: # Load energy projection data # Load energy projection data URL <- paste0(         ""https://cdn.rawgit.com/christophergandrud/networkD3/"",         ""master/JSONdata/energy.json"") Energy <- jsonlite::fromJSON(URL) # Plot sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = ""source"",              Target = ""target"", Value = ""value"", NodeID = ""name"",              units = ""TWh"", fontSize = 12, nodeWidth = 30) > radialNetwork From version 0.2, tree diagrams can be created using radialNetwork or diagonalNetwork. URL <- paste0(         ""https://cdn.rawgit.com/christophergandrud/networkD3/"",         ""master/JSONdata//flare.json"")  ## Convert to list format Flare <- jsonlite::fromJSON(URL, simplifyDataFrame = FALSE)  # Use subset of data for more readable diagram Flare$children = Flare$children[1:3]  radialNetwork(List = Flare, fontSize = 10, opacity = 0.9) diagonalNetwork(List = Flare, fontSize = 10, opacity = 0.9) > dendroNetwork From version 0.2, it is also possible to create dendrograms using dendroNetwork. hc <- hclust(dist(USArrests), ""ave"")  dendroNetwork(hc, height = 600) Interacting with igraph You can use igraph to create network graph data that can be plotted with networkD3. The igraph_to_networkD3 function converts igraph graphs to lists that work well with networkD3. For example: # Load igraph library(igraph)  # Use igraph to make the graph and find membership karate <- make_graph(""Zachary"") wc <- cluster_walktrap(karate) members <- membership(wc)  # Convert to object suitable for networkD3 karate_d3 <- igraph_to_networkD3(karate, group = members)  # Create force directed network plot forceNetwork(Links = karate_d3$links, Nodes = karate_d3$nodes,               Source = 'source', Target = 'target',               NodeID = 'name', Group = 'group') Output Saving to an external stand alone HTML file Use saveNetwork to save a network to a stand alone HTML file: library(magrittr)  simpleNetwork(networkData) %>% saveNetwork(file = 'Net1.html') Including in an RMarkdown file It is simple to include a networkD3 graphic in an RMarkdown file. Simply place the code to create the graph in a code chunk the same way you would any other plot. Checkout this simple example. Including in Shiny web apps You can also easily include networkD3 graphs in Shiny web apps. In the server.R file create the graph by placing the function inside of render*Network, where the * is either Simple, Force, or Sankey depending on the graph type. For example: output$force <- renderForceNetwork({ forceNetwork(Links = MisLinks, Nodes = MisNodes,             Source = ""source"", Target = ""target"",             Value = ""value"", NodeID = ""name"",             Group = ""group"", opacity = input$opacity) }) In the shinyUI part of your app.R file (for single-file Shiny apps) include *NetworkOutput (with * as before, but starting with a lowercase letter). The argument placed in this function should be the element specified with output, e.g.: forceNetworkOutput(""force"") You can run a simple example with the following code: shiny::runGitHub('christophergandrud/networkD3-shiny-example') Full source code for this example can be found here. Saving as static PNG image You can use RStudio to save static images of networkD3 plots as PNG files. Simply create your plot as usual in RStudio. The output should appear in the Viewer pane. Then click Export > Save as Image…. A new window will appear. You can use this window to manipulate the plot, resize it, and save the result as a PNG file. Please enable JavaScript to view the comments powered by Disqus. comments powered by Disqus Christopher Gandrud networkD3 is covered under the GPL-3 license. This site is covered under a CC By-NC-SA 4.0 License."	"null"	"null"	"D3 JavaScript Network Graphs from R."	"true"
"HTML Widgets"	"scatterD3"	"https://github.com/juba/scatterD3"	"Interactive scatterplots with D3."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"56"	"7"	"10"	"GitHub - juba/scatterD3: R scatter plot htmlwidget based on D3.js Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 7 Star 56 Fork 10 juba/scatterD3 Code Issues 3 Pull requests 1 Pulse Graphs R scatter plot htmlwidget based on D3.js 328 commits 1 branch 8 releases Fetching contributors JavaScript 78.3% R 18.7% CSS 3.0% JavaScript R CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 0.6.2 0.6.1 0.5.1 0.5 0.4 0.3 0.2 0.1.1 Nothing to show New pull request Latest commit c789b0b Jul 7, 2016 juba Slightly larger menu Permalink Failed to load latest commit information. R Add tools menu (reset zoom, SVG export, lasso toggle) Jul 6, 2016 inst/htmlwidgets Slightly larger menu Jul 7, 2016 man Add tools menu (reset zoom, SVG export, lasso toggle) Jul 6, 2016 resources Update demo gif Jul 7, 2016 vignettes Add labels positions export to vignette. Jul 7, 2016 .Rbuildignore Add .travis.yml Nov 23, 2015 .gitignore Add HTML vignette Jan 19, 2016 .travis.yml Update Travis-CI config Mar 10, 2016 DESCRIPTION Update NEWS and DESCRIPTION for 0.7 Jul 7, 2016 NAMESPACE Explicitly import stats::cov Feb 29, 2016 NEWS Add export labels position feature Jul 7, 2016 README.md Typo Apr 4, 2016 scatterD3.Rproj Remove unused argument from package check. Dec 14, 2015 README.md scatterD3 is an HTML R widget for interactive scatter plots visualization. It is based on the htmlwidgets R package and on the d3.js javascript library. Features scatterD3 currently provides the following features : Display points and text labels Possibility to map color, symbol and size with other variables (automatic legend) Zoom with mouse wheel, pan with mouse while zoomed in Ability to drag and move text labels Customizable tooltips when hovering points Points highlighting when hovering legend items Option to draw confidence ellipses around group of points Charts integrated inside a Shiny app are fully updatable with smooth transitions when settings or data change Lasso selection tool integration via d3-lasso-plugin for points highlighting Here is a small preview of what you will get : You can also test it live with the sample shiny app. Installation Install latest stable release from CRAN : install.packages(""scatterD3"")  Or from Github for the latest, bleeding edge, full of bugs version : devtools::install_github(""juba/scatterD3"")  Usage Quick example of the scatterD3 function based on the mtcars dataset : mtcars$names <- rownames(mtcars) scatterD3(data = mtcars, x = wt, y = mpg, lab = names,           col_var = cyl, symbol_var = am,           xlab = ""Weight"", ylab = ""Mpg"", col_lab = ""Cylinders"",           symbol_lab = ""Manual transmission"") See the introduction vignette for a step-by-step guide and details about the different function arguments. Shiny integration Like every R HTML widget, shiny integration is straightforward. But as a D3 widget, scatterD3 is updatable : changes in settings or data can be displayed via smooth transitions instead of a complete chart redraw, which can provide interesting visual clues. Furthermore, scatterD3 provides some additional handlers to two interactive features : SVG export and zoom resetting. The sample scatterD3 shiny app allows you to see the different features described here. You can check its source code on GitHub and the introduction vignette for a better understanding of the different arguments. Credits This package has been made possible by : Michael Bostock's incredible d3.js library and documentation RStudio's shiny and htmlwidgets packages Susie Lu's d3-legend module Rob Moore's article on reusable d3.js charts Speros Kokenes' d3 lasso plugin Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/juba/scatterD3"	"Interactive scatterplots with D3."	"true"
"HTML Widgets"	"plotly"	"https://github.com/ropensci/plotly"	"Interactive ggplot2 and Shiny plotting with."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"628"	"76"	"209"	"GitHub - ropensci/plotly: Create interactive web graphics from R via plotly's JavaScript graphing library Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 76 Star 628 Fork 209 ropensci/plotly Code Issues 59 Pull requests 15 Wiki Pulse Graphs Create interactive web graphics from R via plotly's JavaScript graphing library https://plot.ly/r/ 1,889 commits 23 branches 9 releases 19 contributors R 99.1% Other 0.9% R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags add-geo add-r-cookbook-tests baobao-equal_axes docs feature/inline feature/share-axes feature/stream feature/transition fix/CRAN-release2 fix/GeomSegment fix/assets fix/coordFixed fix/dependencies fix/nse fix/path-size fix/size fix_traces gh-pages hidden_to_secret joe/feature/crosstalk master plotlyjs13 update/plotlyjs-1.11.0 Nothing to show v3.6.1 v3.6.0 v3.5.5 v3.5.4 v3.5.3 v3.5.2 v3.5.1 v3.4.13 0.3 Nothing to show New pull request Latest commit c0eda78 Jul 15, 2016 cpsievert committed on GitHub Merge pull request #642 from ropensci/docs … Update vignettes Permalink Failed to load latest commit information. R Duplicated values of positional attributes are no longer removed Jul 14, 2016 data-raw Various improvements inspired by documentation Jun 23, 2015 data Various improvements inspired by documentation Jun 23, 2015 inst upgrade to plotlyjs 1.14.2; NEWS -> NEWS.md Jul 14, 2016 man deprecate last_plot() Jul 14, 2016 tests add test Jul 14, 2016 vignettes load package Jul 13, 2016 .Rbuildignore fixes for CRAN release Apr 12, 2016 .gitignore fix #537 Apr 6, 2016 .travis.yml go back to caching Jun 21, 2016 CONDUCT.md Pipeable interface Jun 8, 2015 CONTRIBUTING.md Update CONTRIBUTING.md Apr 26, 2016 DESCRIPTION Duplicated values of positional attributes are no longer removed Jul 14, 2016 LICENSE get add_lines() working Jun 20, 2016 NAMESPACE deprecate last_plot() Jul 14, 2016 NEWS.md add test Jul 14, 2016 README.md provide scaling escape hatch via I(); add alpha argument; get missing… Jul 13, 2016 plotly.Rproj add rstudio project Dec 18, 2015 README.md plotly An R package for creating interactive web graphics via the open source JavaScript graphing library plotly.js. Installation Install from CRAN: install.packages(""plotly"") Or install the latest development version (on GitHub) via devtools: devtools::install_github(""ropensci/plotly"") Getting Started Web-based ggplot2 graphics If you use ggplot2, ggplotly() converts your plots to an interactive, web-based version! It also provides sensible tooltips, which assists decoding of values encoded as visual properties in the plot. library(plotly) g <- ggplot(faithful, aes(x = eruptions, y = waiting)) +   stat_density_2d(aes(fill = ..level..), geom = ""polygon"") +    xlim(1, 6) + ylim(40, 100) ggplotly(g) If you'd like to see how ggplotly() does in converting different ggplot2 examples, we host a plotly version of the official ggplot2 documentation. We also have some of our own examples here. plotly's custom R interface plotly.js supports some chart types that ggplot2 doesn't (our cheatsheet provides a nice summary of the available chart types). You can create any of these charts via plot_ly(). plot_ly(z = ~volcano) We have a number of vignettes which explain the plot_ly() interface in depth as well as numerous examples on the plotly website and bundled with the package. Capturing plotly events plotly.js exposes a number of 'standard' events that work consistently across plot types. It's easy to hook into these events using the event_data() function in shiny apps, as these examples demonstrate: 2D events (source) Linked Clicks (source) Linked Brush (source) You can also hook into these events without shiny using htmlwidgets::onRender() (example). This, however, requires JavaScript knowledge and makes it much harder to coordinate views between htmlwidgets. Contributing Please read through our contributing guidelines. Included are directions for opening issues, asking questions, contributing changes to plotly, and our code of conduct. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/plotly"	"Interactive ggplot2 and Shiny plotting with."	"true"
"HTML Widgets"	"plot.ly"	"https://plot.ly"	"Interactive ggplot2 and Shiny plotting with."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Plotly | Make charts and dashboards online Search Pricing Industries FINANCE INSURANCE AEROSPACE ENERGY RESEARCH & DEVELOPMENT AUTOMOTIVE GOVERNMENT PHARMA & COMPUTATIONAL BIOLOGY JOURNALISM BUSINESS INTELLIGENCE API PYTHON R MATLAB JAVASCRIPT MORE Sign in SIGN UP UPGRADE REQUEST DEMO Plotly Visualize Data, Together Plotly is the state of the art in data viz, dashboards, and collaborative analysis. I want to make a... New chart Dashboard Compatible with a variety of tools Get started with the tools you already like and use Python R MATLAB Excel Javascript Web App Trusted by Charts that stand out Create a chart Or see some examples Excel | Python | R | MATLAB A GitHub for data scientists Never share charts or data by email again. Featured users sharing on Plotly: Journalist Mathematician Designer A new generation of data scientists Prefers open-source, powerful programmatic tools like R and Python over 'Big BI' software. Plotly is adding easy online sharing and world-class visualization to this ecosystem. Request a demo Success stories Goji Insurance Before Plotly, we were entangled in an enterprise BI quagmire. Our system was large, expensive to maintain in both time and effort, and slow to adapt to our fast-changing needs. Plotly was the ""big BI"" killer we had been waiting for. READ THE FULL STORY C-12 Energy Plotly is at the center of our business development platform, and serves as a starting point for modeling and fitting tools. We can quickly comprehend and analyze huge amounts of data, and use the results to make multi-million-dollar investment decisions. READ THE FULL STORY PLOTLY ACROSS INDUSTRIES API API Home Python R MATLAB JavaScript About Us Team Careers Plotly Blog Modern Data Help Plotly vs Tableau Plotly.js vs Highcharts Dashboard Examples Help Center Use Cases By Industry Excel Reporting Plotly for Dashboards Ad Hoc Analysis Connect Copyright © 2016 Plotly. All rights reserved. Terms of Service Privacy Policy Create Account Create Account Or sign up with a social network: Analyze and visualize data, together. Plotly is free and online. Plotly lets you collaboratively make beautiful graphs. You own your data and control your privacy. × Sign in Forgot password? Sign in Or sign in with a social network: × Feedback Ideas? Does something not look right? Leave your email if you're not signed in and would like us to be in touch. Or, write us at feedback@plot.ly. Send Sharing settings     Only collaborators can view or edit. Anyone can view, collaborators can edit. Public Private   Anyone with link can view, collaborators can edit.   Enable private share link. Facebook Twitter Google + Embed Notify people via email Include student options Name Date Project Class Close × Download / Export   PNG PDF SVG EPS Include public link Size as displayed W × H (pixels) Extra Resolution times the original size Export to Google Drive coming soon! Download Control number of memberships Number of users Price/Month/User Price/Month Cancel Update × JSON Viewer Switch to plain text × Data Sources × Embed plot in your site Loading... Paste this code where you want to embed this graph Prefer an iframe? quick copy × Plotly connects to SQL databases through our partnership with Alation. Plotly's integration with Alation increases analyst productivity by helping analysts to more quickly find, understand and query data stored in relational databases, Hadoop files or BI semantic layers. Alation delivers the industry's first data catalog built for collaboration. Visit the Alation Alation to learn more. You can also import database data into Plotly with Python or R - see our tutorials on Modern Data."	"null"	"null"	"Interactive ggplot2 and Shiny plotting with."	"true"
"HTML Widgets"	"rCharts"	"https://github.com/ramnathv/rCharts"	"Interactive JS Charts from R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"986"	"139"	"673"	"GitHub - ramnathv/rCharts: Interactive JS Charts from R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 139 Star 986 Fork 673 ramnathv/rCharts Code Issues 343 Pull requests 9 Wiki Pulse Graphs Interactive JS Charts from R http://rcharts.io 638 commits 4 branches 0 releases Fetching contributors JavaScript 82.6% HTML 8.0% R 7.0% CSS 2.3% Makefile 0.1% JavaScript HTML R CSS Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags dev gh-pages html_assets master Nothing to show Nothing to show New pull request Latest commit 479a4f9 Apr 26, 2016 ramnathv Merge pull request #696 from J0bbie/master … Updated Highcharts JS libs Permalink Failed to load latest commit information. R Merge pull request #449 from danielkrizian/master Aug 4, 2014 demo Import examples into demo so users can run them. Feb 25, 2014 inst Merge pull request #696 from J0bbie/master Apr 26, 2016 man add don't run to examples Apr 21, 2013 screenshots update readme Jun 22, 2013 .Rbuildignore initial commit of the package Apr 10, 2013 .gitignore update gitignore Jun 14, 2013 DESCRIPTION update DESCRIPTION and bump version. Jun 10, 2014 License.md add license.md for rCharts and add section in Readme.md Jun 19, 2013 NAMESPACE switch to RJSONIO and add toJSON2 support for MorrisJS Apr 25, 2013 README.md Merge pull request #512 from grantbrown/master Sep 15, 2014 makefile add a makefile to automate tasks Apr 10, 2013 README.md rCharts rCharts is an R package to create, customize and publish interactive javascript visualizations from R using a familiar lattice style plotting interface. Installation You can install rCharts from github using the devtools package require(devtools) install_github('ramnathv/rCharts') Features The design philosophy behind rCharts is to make the process of creating, customizing and sharing interactive visualizations easy. Create rCharts uses a formula interface to specify plots, just like the lattice package. Here are a few examples you can try out in your R console. require(rCharts)  ## Example 1 Facetted Scatterplot names(iris) = gsub(""\\."", """", names(iris)) rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')  ## Example 2 Facetted Barplot hair_eye = as.data.frame(HairEyeColor) rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar') Customize rCharts supports multiple javascript charting libraries, each with its own strengths. Each of these libraries has multiple customization options, most of which are supported within rCharts. More documentation is underway on how to use rCharts with each of these libraries. Polychart. We will create our first chart using Polychart, a javascript charting library based on the grammar of graphics, and inspired by ggplot2. r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = 'point', color = 'gear') r1 There, we have our first embedded chart with nice tooltips! Let me add some interactivity to this chart now using javascript. graph_chart1.addHandler(function(type, e){   var data = e.evtData;   if (type === 'click'){     return alert(""You clicked on car with mpg: "" + data.mpg.in[0]);   } }) Morris The next library we will be exploring is Morris. data(economics, package = 'ggplot2') econ <- transform(economics, date = as.character(date)) m1 <- mPlot(x = 'date', y = c('psavert', 'uempmed'), type = 'Line',   data = econ) m1$set(pointSize = 0, lineWidth = 1) m1 Hurray! There we have our second chart! NVD3 Next, I will demonstrate my all time favorite d3js library, NVD3, which produces amazing interactive visualizations with little customization. hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == ""Male"") n1 <- nPlot(Freq ~ Hair, group = ""Eye"", data = hair_eye_male,    type = 'multiBarChart') n1 See the interactivity that comes at zero cost! xCharts The next library to demo would be xCharts, a slick looking charting library using d3js, made by TenXer. require(reshape2) uspexp <- melt(USPersonalExpenditure) names(uspexp)[1:2] = c('category', 'year') x1 <- xPlot(value ~ year, group = 'category', data = uspexp,    type = 'line-dotted') x1 There is your xChart Highcharts h1 <- Highcharts$new() h1$chart(type = ""spline"") h1$series(data = c(1, 3, 2, 4, 5, 4, 6, 2, 3, 5, NA), dashStyle = ""longdash"") h1$series(data = c(NA, 4, 1, 3, 4, 2, 9, 1, 2, 3, 4), dashStyle = ""shortdot"") h1$legend(symbolWidth = 80) h1 Leaflet map3 <- Leaflet$new() map3$setView(c(51.505, -0.09), zoom = 13) map3$marker(c(51.5, -0.09), bindPopup = ""<p> Hi. I am a popup </p>"") map3$marker(c(51.495, -0.083), bindPopup = ""<p> Hi. I am another popup </p>"") map3 Rickshaw usp = reshape2::melt(USPersonalExpenditure) p4 <- Rickshaw$new() p4$layer(value ~ Var2, group = 'Var1', data = usp, type = 'area') p4 Share rCharts allows you to share your visualization in multiple ways, as a standalone page, embedded in a shiny application, or in a tutorial/blog post. Standalone You can publish your visualization as a standalone html page using the publish method. Here is an example. Currently, you can publish your chart as a gist or to rpubs. ##  names(iris) = gsub(""\\."", """", names(iris)) r1 <- rPlot(SepalLength ~ SepalWidth | Species, data = iris,    color = 'Species', type = 'point') r1$publish('Scatterplot', host = 'gist') r1$publish('Scatterplot', host = 'rpubs') Shiny Application rCharts is easy to embed into a Shiny application using the utility functions renderChart and showOutput. Here is an example of an rCharts Shiny App. ## server.r require(rCharts) shinyServer(function(input, output) {   output$myChart <- renderChart({     names(iris) = gsub(""\\."", """", names(iris))     p1 <- rPlot(input$x, input$y, data = iris, color = ""Species"",        facet = ""Species"", type = 'point')     p1$addParams(dom = 'myChart')     return(p1)   }) })  ## ui.R require(rCharts) shinyUI(pageWithSidebar(   headerPanel(""rCharts: Interactive Charts from R using polychart.js""),    sidebarPanel(     selectInput(inputId = ""x"",      label = ""Choose X"",      choices = c('SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth'),      selected = ""SepalLength""),     selectInput(inputId = ""y"",       label = ""Choose Y"",       choices = c('SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth'),       selected = ""SepalWidth"")   ),   mainPanel(     showOutput(""myChart"", ""polycharts"")   ) )) Blog Post rCharts can also be embedded into an Rmd document using knit2html or in a blog post using slidify. Here are a few examples of tutorials written using rCharts and slidify. Parallel Coordinate Plots NY Times Graphics Tutorial More in the rCharts website and the Gallery. More Credits Most of the implementation in rCharts is inspired by rHighcharts and rVega. I have reused some code from these packages verbatim, and would like to acknowledge the efforts of its author Thomas Reinholdsson. License rCharts is licensed under the MIT License. However, the JavaScript charting libraries that are included with this package are licensed under their own terms. All of them are free for non-commercial and commercial use, with the exception of Polychart and Highcharts, both of which require paid licenses for commercial use. For more details on the licensing terms, you can consult the License.md file in each of the charting libraries. See Also There has been a lot of interest recently in creating packages that allow R users to make use of Javascript charting libraries. gg2v by Hadley Wickham clickme by Nacho Caballero rVega by Thomas Reinholdsson Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ramnathv/rCharts"	"Interactive JS Charts from R."	"true"
"HTML Widgets"	"rbokeh"	"http://hafen.github.io/rbokeh/"	"R Interface to."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"rbokeh Toggle navigation rbokeh - R Interface to Bokeh Docs Package Ref Github Background Installation Preview Tutorial Building with layers Specifying data Hover Plot attributes Mapped attributes Legends Axes Tools Grids Themes Statistical layers Design / Dev Background Bokeh is a visualization library that provides a flexible and powerful declarative framework for creating web-based plots. Bokeh renders plots using HTML canvas and provides many mechanisms for interactivity. Bokeh has interfaces in Python, Scala, Julia, and now R. The Bokeh library is written and maintained by the Bokeh Core Team consisting of several members of Continuum Analytics and other members of the open source community. The rbokeh package is written and maintained by Ryan Hafen (@hafenstats) with several contributions from others. Contributions are welcome. If you find bugs or have issues, please file them on the github issue tracker or hop on the Bokeh mailing list and be sure tag your subject with [R]. Installation The rbokeh package can be installed from CRAN: install.packages(""rbokeh"") library(rbokeh) Plots are constructed by initializing a figure() and then adding layers on top through various glyphs available in Bokeh, or abstractions of those glyphs that we have created for common use cases. The data input is typically x and y, and how they are specified is quite flexible (see examples below). Preview Before providing a tutorial, we first show several examples of plots created with rbokeh. This will both give a feel for what the syntax looks like and provide some motivation to go through the more procedural tutorial. We thought this would be a more enjoyable way to begin than looking at 50 different versions of a plot of the iris data with different parameter settings. Speaking of the iris data, our first plot: p <- figure() %>%   ly_points(Sepal.Length, Sepal.Width, data = iris,     color = Species, glyph = Species,     hover = list(Sepal.Length, Sepal.Width)) p Here since we are specifying color and glyph by Species, a legend is automatically created and the points are colored according to the default color scheme. You can hover over points to see the tooltips we added with the hover argument. You can also play around with the other interactive components such as panning and zooming. We can also specify legend entries manually: z <- lm(dist ~ speed, data = cars) p <- figure(width = 600, height = 600) %>%   ly_points(cars, hover = cars) %>%   ly_lines(lowess(cars), legend = ""lowess"") %>%   ly_abline(z, type = 2, legend = ""lm"") p Histogram of old faithful geyser data with density overplotted: h <- figure(width = 600, height = 400) %>%   ly_hist(eruptions, data = faithful, breaks = 40, freq = FALSE) %>%   ly_density(eruptions, data = faithful) h Periodic table of the elements with additional info on hover: # prepare data elements <- subset(elements, !is.na(group)) elements$group <- as.character(elements$group) elements$period <- as.character(elements$period)  # add colors for groups metals <- c(""alkali metal"", ""alkaline earth metal"", ""halogen"",   ""metal"", ""metalloid"", ""noble gas"", ""nonmetal"", ""transition metal"") colors <- c(""#a6cee3"", ""#1f78b4"", ""#fdbf6f"", ""#b2df8a"", ""#33a02c"",   ""#bbbb88"", ""#baa2a6"", ""#e08e79"") elements$color <- colors[match(elements$metal, metals)] elements$type <- elements$metal  # make coordinates for labels elements$symx <- paste(elements$group, "":0.1"", sep = """") elements$numbery <- paste(elements$period, "":0.8"", sep = """") elements$massy <- paste(elements$period, "":0.15"", sep = """") elements$namey <- paste(elements$period, "":0.3"", sep = """")  # create figure p <- figure(title = ""Periodic Table"", tools = c(""resize"", ""hover""),   ylim = as.character(c(7:1)), xlim = as.character(1:18),   xgrid = FALSE, ygrid = FALSE, xlab = """", ylab = """",   height = 445, width = 800) %>%  # plot rectangles ly_crect(group, period, data = elements, 0.9, 0.9,   fill_color = color, line_color = color, fill_alpha = 0.6,   hover = list(name, atomic.number, type, atomic.mass,     electronic.configuration)) %>%  # add symbol text ly_text(symx, period, text = symbol, data = elements,   font_style = ""bold"", font_size = ""10pt"",   align = ""left"", baseline = ""middle"") %>%  # add atomic number text ly_text(symx, numbery, text = atomic.number, data = elements,   font_size = ""6pt"", align = ""left"", baseline = ""middle"") %>%  # add name text ly_text(symx, namey, text = name, data = elements,   font_size = ""4pt"", align = ""left"", baseline = ""middle"") %>%  # add atomic mass text ly_text(symx, massy, text = atomic.mass, data = elements,   font_size = ""4pt"", align = ""left"", baseline = ""middle"")  p Crude map of the world with capital cities: library(maps) data(world.cities) caps <- subset(world.cities, capital == 1) caps$population <- prettyNum(caps$pop, big.mark = "","") figure(width = 800, padding_factor = 0) %>%   ly_map(""world"", col = ""gray"") %>%   ly_points(long, lat, data = caps, size = 5,     hover = c(name, country.etc, population)) Hover for population info, etc. Google map plot: orstationc <- read.csv(""http://geog.uoregon.edu/bartlein/old_courses/geog414s05/data/orstationc.csv"")  gmap(lat = 44.1, lng = -120.767, zoom = 6, width = 700, height = 600) %>%   ly_points(lon, lat, data = orstationc, alpha = 0.8, col = ""red"",     hover = c(station, Name, elev, tann)) Time series plot of daily airline flights with hover and vertical line: p <- figure(width = 800, height = 400) %>%   ly_lines(date, Freq, data = flightfreq, alpha = 0.3) %>%   ly_points(date, Freq, data = flightfreq,     hover = list(date, Freq, dow), size = 5) %>%   ly_abline(v = as.Date(""2001-09-11"")) p Note that using your scroll wheel over the x or y axis activates a zoom in the dimension of the axis you are hovered over. Scatterplot matrix of iris data with linked panning, zooming, and brushing (try the pan, zoom, and box_select tools in the figure below): tools <- c(""pan"", ""wheel_zoom"", ""box_zoom"", ""box_select"", ""reset"") nms <- expand.grid(names(iris)[1:4], rev(names(iris)[1:4]), stringsAsFactors = FALSE) splom_list <- vector(""list"", 16) for(ii in seq_len(nrow(nms))) {   splom_list[[ii]] <- figure(width = 200, height = 200, tools = tools,     xlab = nms$Var1[ii], ylab = nms$Var2[ii]) %>%     ly_points(nms$Var1[ii], nms$Var2[ii], data = iris,       color = Species, size = 5, legend = FALSE) } grid_plot(splom_list, ncol = 4, same_axes = TRUE, link_data = TRUE) A hexbin plot: figure() %>% ly_hexbin(rnorm(10000), rnorm(10000)) Hovering will show the counts in the hexagon bin. Here’s a combination of many layers using hexbins to show the density of the fielding location of all doubles in the 2014 MLB season, inspired by this: f <- tempfile() download.file(""https://gist.githubusercontent.com/hafen/77f25b556725b3d0066b/raw/10f0e811f09f2b9f0f9ccfb542e296dfac2761d4/doubles.csv"", method=""curl"", f) doubles <- read.csv(f) ly_baseball <- function(x) {   base_x <- c(90 * cos(pi/4), 0, 90 * cos(3 * pi/4), 0)   base_y <- c(90 * cos(pi/4), sqrt(90^2 + 90^2), 90 * sin(pi/4), 0)   distarc_x <- lapply(c(2:4) * 100, function(a)     seq(a * cos(3 * pi/4), a * cos(pi/4), length = 200))   distarc_y <- lapply(distarc_x, function(x)     sqrt((x[1]/cos(3 * pi/4))^2 - x^2))    x %>%     ## boundary     ly_segments(c(0, 0), c(0, 0), c(-300, 300), c(300, 300), alpha = 0.4) %>%     ## bases     ly_crect(base_x, base_y, width = 10, height = 10,       angle = 45*pi/180, color = ""black"", alpha = 0.4) %>%     ## infield/outfield boundary     ly_curve(60.5 + sqrt(95^2 - x^2),       from = base_x[3] - 26, to = base_x[1] + 26, alpha = 0.4) %>%     ## distance arcs (ly_arc should work here and would be much simpler but doesn't)     ly_multi_line(distarc_x, distarc_y, alpha = 0.4) }  figure(xgrid = FALSE, ygrid = FALSE, width = 630, height = 540,   xlab = ""Horizontal distance from home plate (ft.)"",   ylab = ""Vertical distance from home plate (ft.)"") %>%   ly_baseball() %>%   ly_hexbin(doubles, xbins = 50, shape = 0.77, alpha = 0.75, palette = ""Spectral10"") Image plot of Maunga Whau volcano topography with contour line: p <- figure(title = ""Volcano"", padding_factor = 0) %>%   ly_image(volcano) %>%   ly_contour(volcano) p Log axes: figure() %>%   ly_points(Date, Packages, Ecdat::CRANpackages) %>%   y_axis(log = TRUE) Embedding images in a figure: url <- c(""http://bokeh.pydata.org/en/latest/_static/images/logo.png"",   ""http://developer.r-project.org/Logo/Rlogo-4.png"")  ss <- seq(0, 2*pi, length = 13)[-1] ws <- runif(12, 2.5, 5) * rep(c(1, 0.8), 6)  imgdat <- data.frame(   x = sin(ss) * 10, y = cos(ss) * 10,   w = ws, h = ws * rep(c(1, 0.76), 6),   url = rep(url, 6) )  p <- figure(xlab = ""x"", ylab = ""y"") %>%   ly_image_url(x, y, w = w, h = h, image_url = url, data = imgdat,     anchor = ""center"") %>%   ly_lines(sin(c(ss, ss[1])) * 10, cos(c(ss, ss[1])) * 10,     width = 15, alpha = 0.1) p Boxplot of voice data: figure(ylab = ""Height (inches)"", width = 600) %>%   ly_boxplot(voice.part, height, data = lattice::singer) Quantile plot with iris data: figure(legend_location = ""top_left"") %>%   ly_quantile(Sepal.Length, group = Species, data = iris) Washington cancer rates: wa_cancer <- droplevels(subset(latticeExtra::USCancerRates, state == ""Washington"")) ## y axis sorted by male rate ylim <- levels(with(wa_cancer, reorder(county, rate.male)))  figure(ylim = ylim, width = 700, height = 600, tools = """") %>%   ly_segments(LCL95.male, county, UCL95.male,     county, data = wa_cancer, color = NULL, width = 2) %>%   ly_points(rate.male, county, glyph = 16, data = wa_cancer) Tutorial Building with layers Plots in rbokeh are build by layering plot elements, called glyphs, to create the desired visualization. This is a familiar notion to those who have experience with ggplot2 geoms, ggvis layers, or even base R graphics functions points(), lines(), etc. To initialize a Bokeh figure, we call There are several arguments to figure() which control things like the width, height, and axes of the figure. We now have a figure object, p, which we are ready to add layers to. We can add a layer to the figure by calling a number of layer functions. All layer functions conveniently start with the ly_ prefix, and a full list can be found in the function reference. The first argument of a layer function is always the figure to be modified. Following this, most layer functions take as next arguments x and y to specify the x and y location of the placement of the glyphs, followed by several arguments for specifying attributes of the glyphs. All layer functions return a figure object, which can be passed to further layer functions. For example, suppose we would like to plot the distance to stop vs. speed from the cars data. We can build on the object p that we initialized above: p <- ly_points(p, cars$speed, cars$dist) We can now view the figure by simply typing p: p Note that since we didn’t specify x and y axis labels (which can be done with xlab and ylab in figure()), they were chosen for us based on the inputs. Also note that when we print the figure it tells us that we did not specify the xlim and ylim arguments and that it is computing limits for us. By default, the limits are chosen so that all glyphs can be seen in the plot. Since layer functions return figure objects, we can make use of pipes from the magrittr package to string function calls together: p <- figure() %>%   ly_points(cars$speed, cars$dist) To illustrate adding another layer to the figure, suppose we would like to add a line to the figure with an intercept of -17.6 and slope of 3.9. We can do this with the ly_abline() layer function. We can modify the existing figure with the following: p <- p %>% ly_abline(-17.6, 3.9) Or if we were to have built it up in one step, it would look like this: p <- figure() %>%   ly_points(cars$speed, cars$dist) %>%   ly_abline(-17.6, 3.9) p We can continue to add layers as we wish. Specifying data In the previous examples, we passed vectors of data to x and y. As an alternative, we can pass a data frame to layer functions through the data argument and then reference names of the data frame to pass to x, y, and other plot attributes, using non-standard evaluation. For example p <- figure() %>%   ly_points(speed, dist, data = cars) Or p <- figure() %>%   ly_points(speed, dist^2, data = cars) For those familiar with ggplot2, unlike ggplot2, we do not attach a default data set when we call figure(), but data is explicitly specified for each layer. We will see in the following sections how we can also reference variables in the data argument for other attributes as well. There are a few other conveniences for specifying data with plots that are similar to other R plotting systems. For example, if we only pass one vector of data, the x-axis will become an index and the y-axis will be vector. p <- figure() %>%   ly_points(speed, data = cars) Or if we only pass one vector and it is a list or data frame, the second element will be plotted against the first element. p <- figure() %>%   ly_points(cars) Hover Now is a good time to introduce hover capabilities in rbokeh. Most layer functions (those that render shapes and not lines), have a hover argument. This argument can be a data frame with the same number of rows as the length of x and y, or a vector of names in the data argument. When specified, the hover tool will be activated and when a point is hovered over in the plot, a list of the specified variable values for that point will be shown. For example, with the cars data, suppose we would like to see the actual data point values: figure() %>%   ly_points(speed, dist, data = cars, hover = c(speed, dist)) figure() %>%   ly_points(speed, dist, data = cars, hover = ""This car was going @speed mph!"") Plot attributes Now that we can get data in and add layers, we want to control the aesthetic attributes of the glyphs being plotted. By default, attributes are chosen based on the currently selected theme. We will cover more on themes later, and for now use the default color theme. We can also explicitly specify attributes such as size, color, etc. for each layer. For example, suppose we want to color the glyphs in our cars plot red and have them 20 pixels in size: figure() %>%   ly_points(cars, color = ""red"", size = 20) We can pass vectors of attributes as well: n <- nrow(cars) ramp <- colorRampPalette(c(""red"", ""blue""))(n) figure() %>%   ly_points(cars, color = ramp, size = seq_len(n)) In the following section, “Mapped attributes”, we will see how we can specify attributes to be applied automatically based on different variables in our data. Line and fill attributes Every layer function has either line attributes or line and fill attributes (except for ly_text(), which has text attributes). Which of these categories a glyph falls into is usually evident from the name of the layer function and is spelled out in the function reference. In the example above, the points in our plot have both line attributes (the outline of the circles) and fill attributes (the area inside the circles). But we specified color with a single argument color. color convenience argument, which we will provide more detail about below, but we can have finer control over line and fill attributes. The following are the available line and fill attributes we can specify: attribute description fill_color color to use to fill the glyph with - a hex code (with no alpha) or any of the 147 named CSS colors, e.g ‘green’, ‘indigo’ fill_alpha transparency value between 0 (transparent) and 1 (opaque) line_color color to use to stroke lines with - a hex code (with no alpha) or any of the 147 named CSS colors, e.g ‘green’, ‘indigo’ line_width stroke width in units of pixels line_alpha transparency value between 0 (transparent) and 1 (opaque) line_join how path segments should be joined together ‘miter’ ‘round’ ‘bevel’ line_cap how path segments should be terminated ‘butt’ ‘round’ ‘square’ line_dash array of integer pixel distances that describe the on-off pattern of dashing to use For example, suppose we want the fill to be blue and the line to be black: figure() %>%   ly_points(cars, fill_color = ""blue"", line_color = ""black"") Convenience line and fill attributes We provide convenience arguments color and alpha to deal with both line and/or fill attributes. How they behave differs depending on what attributes the glyph has. Glyphs with line and fill attributes When dealing with glyphs that have both line and color attributes (like the plots we have created so far), when color is specified, this will be the color of both the line and the fill, with the alpha level of the fill reduced by 50%. When alpha is specified, this will be the alpha of the line, with the alpha of the fill being set to 50% of this value. Glyphs with only line attributes When using a glyph that only has line properties, color maps directly to line_color and is simply a convenience as the line_ prefix is redundant, and similarly alpha maps directly to line_alphaAny attribute that starts with line_ or fill_ always overrides color and alpha. figure() %>%   ly_points(cars) %>%   ly_lines(lowess(cars), color = ""red"", width = 2) The glyph attribute in ly_points() Most of the attributes for different layer functions are self-explanatory from looking at the function reference, but there are a few that are worth spending some more time on. One is the glyph attribute in ly_points(). This is similar to the pch argument to base R’s points(). To see the avaialable possible values for glyph: point_types() The named glyphs on rows 4 and 5 are called “markers” in Bokeh and are shown with their default rendering when color is “blue”. The numbered glyphs map closely to the possible values for pch in R’s points() function. When a numbered glyph is specified, fill and line attributes will be handled accordingly to get the desired effect. For example, let’s plot the cars data with glyph = 12: figure() %>%   ly_points(cars, glyph = 12) The type attribute in ly_lines() and friends Similar to the glyph argument in ly_points(), there is a type argument in ly_lines() that maps to the lty argument in base R’s lines() function. For example: figure() %>%   ly_lines(lowess(cars), type = 2) We encourage you to explore all the different layer functions and the available attributes. They are well-documented in the function reference and most have examples. Mapped attributes Often we want to control the behavior of glyph attributes based on other properties of the data. The rbokeh package borrows from the ideas of ggplot2’s qplot() to allow easy specification of variables to map to different attributes. For example, turning to the famous iris data set, suppose we want to plot sepal width vs. sepal length and color the points by species: figure() %>%   ly_points(Sepal.Length, Sepal.Width, data = iris, color = Species) We see that points get colored according to species (based on the current theme, which is Tableau10) and a legend is added. We can map other attributes, and more than one attribute at once. For example, to vary both color and glyph type by species: figure() %>%   ly_points(Sepal.Length, Sepal.Width, data = iris,     color = Species, glyph = Species) rbokeh knows to map a variable when the variable it is given does not conform to what is expected for that attribute. For example, the species values of “setosa”, etc., are not hex codes or color names. In the future we could allow this specification to be more explicit through using I(). We can also map continuous variables, and in this case it it sliced up and values are mapped across a scale for the attribute. For example, coloring by petal width: figure() %>%   ly_points(Sepal.Length, Sepal.Width, data = iris,     color = Petal.Width) We can do this with other glyphs as well. Some glyphs have a group parameter where we would like to split the data up by a grouping variable but not vary an aesthetic attribute. For example, with ly_lines(), we may want to break the data up by a variable and get a different line for each, all of the same color: co2dat <- data.frame(   y = co2,   x = floor(time(co2)),   m = rep(month.abb, 39))  figure() %>%   ly_lines(x, y, group = m, data = co2dat) We can of course vary the color as well: figure(xlim = c(1958, 2010)) %>%   ly_lines(x, y, color = m, data = co2dat) Legends We saw that when mapping attributes to variables in our data, we get legends for free. But we may want to have more control over legends. Each layer we add to a plot can have a legend entry. Most layer functions have a legend argument that allows you to specify the legend entry for that layer. This only works if you are not mapping attributes or grouping. The value for the legend argument is simply the text you would like to have displayed next to the glyph in the legend. The glyph that appears in the legend is automatically created based on the attributes specified for the layer. An example we saw before made use of explicit specification of legend entries: z <- lm(dist ~ speed, data = cars) figure(width = 600, height = 600) %>%   ly_points(cars, hover = cars, legend = ""data"") %>%   ly_lines(lowess(cars), legend = ""lowess"") %>%   ly_abline(z, type = 2, legend = ""lm"") Bokeh provides finer control of parameters for legend appearance (such as where to put it) and we will expose these soon in rbokeh. Axes Bokeh allows you to specify numeric, categorical, and date/time axes. In the case of numeric axes, you can also specify a log scale. Examples for this are in the function reference under x_axis and y_axis. Axis labels formats can be controlled by specifying various tick format parameters in the axis layers. For example, the default Date axis monthly format of ‘%b%y’ can instead be specified as ‘%b’ using figure() %>%   ly_lines(seq(as.Date(""2012-01-01""),     as.Date(""2012-12-31""), by=""days""), rnorm(366)) %>%   x_axis(label = ""Date"", format = list(months = ""%b"")) or commas could be added to long numeric labels using figure() %>%   ly_points(rnorm(10), rnorm(10) * 10000) %>%   y_axis(number_formatter = ""numeral"", format = ""0,000"") A complete list of supported axis tick parameters can be found in the function reference under x_axis and y_axis. Tools Bokeh has many tools available for different types of interaction. Tools can be easily added to a plot either through the tools argument to figure(), in which case a vector of tool names is provided, or through any of the various tool_ functions. In the latter case, some tools have additional parameters that give us finer control over the behavior of the tool. For example, suppose I want to add the box_select and lasso_select tools to my figure: figure() %>%   ly_points(Sepal.Length, Sepal.Width, data = iris, color = Species) %>%   tool_box_select() %>%   tool_lasso_select() Now in the plot in the toolbar at the top I can choose the one of these tools and select points in the figure. This is particularly useful for linked brushing described in the next section. For more examples, see the examples in the tool_ functions in the function reference. Grids Bokeh allows us to construct grids of plots that can interact with each other through linked pan/zoom and brushing. There are several examples in the function reference for grid_plot Themes Theme support in rbokeh is pretty minimal right now but the groundwork is there. More to come on this. Statistical layers There are several layer functions that add statistically-derived glyphs to a plot, such as ly_boxplot, ly_hist, ly_density, etc. A major focus in the near future of this package will be the ability to add as many of these as we can and make them robust to different use cases. Design / Dev Notes on the design of rbokeh, roadmap, etc. to come. created with packagedocs"	"null"	"null"	"R Interface to."	"true"
"HTML Widgets"	"Bokeh"	"http://bokeh.pydata.org/en/latest/"	"R Interface to."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"4401"	"276"	"961"	"GitHub - bokeh/bokeh: Interactive Web Plotting for Python Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 276 Star 4,401 Fork 961 bokeh/bokeh Code Issues 652 Pull requests 11 Wiki Pulse Graphs Interactive Web Plotting for Python http://bokeh.pydata.org/en/latest/ 14,574 commits 60 branches 37 releases 173 contributors Python 57.1% CoffeeScript 28.6% CSS 11.5% HTML 1.3% TypeScript 0.7% Shell 0.4% Other 0.4% Python CoffeeScript CSS HTML TypeScript Shell Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 0_11_docs_examples_2 almarklein/arraybuffers almarklein/webgl-refactor almarklein/webgl-safari async-load-fix birdsarah/fix_grid_modes_after_bad_defaults_commit birdsarah/hotfix_print_out_examples_log_on_fail birdsarah/hotfix_print_out_examples_log_on_fail_2 birdsarah/new_layout_with_responsive_plot birdsarah/patches_with_holes birdsarah/svg_generation birdsarah/4395_choose_not_to_optimize birdsarah/4395_notebook_performance_one_solver_per_root birdsarah/4395_notebook_performance birdsarah/4578_bad_above_toolbar birdsarah/4652_fix_dialog_box bound-methods-fix bryanv/2269_date_slider bryanv/4737_spectrogram_updates bryanv/4800_multiselect_dicts bryanv/4808_stream bug/1135_datetime_axis_timezone_handling canvas2svg charts/color_binning charts/interactive clairetang6/4401_responsive_layout_bug country-phenotyping docs_updates/0.11.1 examples_runner feature/charts_data_adapter feature/dynamic-image-wrap-around feature/functickformatter_args feature/geojson_renderer_1 feature/geojson_renderer_2 feature_2321_patches_with_hole foo gh-pages havocp/develop_mode_server_changes havocp/develop_mode havocp/develop_mode_2 havocp/develop_shell hotfix/broken_examples layout-demo maggie-m/conda_version_check maggie-m/ion_slider maggie-m/ug_interactions master mattpap/1589_nodejs mattpap/3823_hover_management mattpap/4290_less_toolbar mistakevin/clean_package_json mistakevin/feature/canteen mistakevin/feature/selenium sandbox/appmaker2 scratch/geojson_data_source update_test_matrix_script vbar_hbar waterfall_chart wip/bootstrap wip/not-serialized-props-broken Nothing to show xdata-0.1rc 0.12.1dev2 0.12.1dev1 0.12.0 0.12.0rc5 0.12.0rc4 0.12.0rc3 0.12.0rc2 0.12.0rc1 0.11.1 0.11.0 0.10.0 0.9.3 0.9.2 0.9.1 0.9.0 0.8.2 0.8.1 0.8.0 0.7.1 0.7.0 0.6.1 0.6.0 0.5.2 0.5.1 0.5.0 0.4.4 0.4.3 0.4.2 0.4.2p1 0.4.1 0.4 0.3 0.2.0 0.2 0.1.1 0.1 Nothing to show New pull request Latest commit 200c83d Jul 14, 2016 crashMOGWAI committed with bryevdv Updates add_glyph docstring (#4805) Permalink Failed to load latest commit information. .github Remove wonky carriage return Mar 21, 2016 bin Add warning for bokeh-server Dec 30, 2015 bokeh Updates add_glyph docstring (#4805) Jul 14, 2016 bokehjs update last bounds computations to use correct rbush format (#4794) Jul 12, 2016 conda.recipe add missing test dependency (#4740) Jul 3, 2016 examples add cartodb tile provider (#4777) Jul 9, 2016 scripts factor JS version into version.coffee, compare to document version (#… Jul 5, 2016 sphinx Split annotations from plotting, into its own section. (#4801) Jul 13, 2016 tests Bryanv/3511 windows tests (#4744) Jul 5, 2016 .gitattributes add versioneer for version better automatic version number support Oct 9, 2013 .gitignore Improve Bokeh Layout (#4343) May 27, 2016 .travis.yml code quality testing improvements (#4732) Jul 3, 2016 CHANGELOG Updating CHANGELOG. Jun 27, 2016 LICENSE.txt remove unicode in LICENSE.txt Oct 12, 2015 MANIFEST.in Fixing missing modules, add the script entry point, load the yaml the… Oct 29, 2015 README.md Update README structure and edit grammar (#4441) Jun 4, 2016 requirements.txt Passed requirements to install_requires inside setup.py, close #319 too. Feb 10, 2014 secrets.tar.enc Enable npm.org and pypi uploads. Jun 18, 2015 setup.cfg Add new base screenshots May 4, 2016 setup.py Initialize colorama on Windows (#4481) Jun 12, 2016 versioneer.py Make versioneer aware of our devel build. Feb 6, 2015 README.md Bokeh Latest Release License Build Status Conda PyPI Gitter Bokeh, a Python interactive visualization library, enables beautiful and meaningful visual presentation of data in modern web browsers. With Bokeh, you can quickly and easily create interactive plots, dashboards, and data applications. Bokeh helps provide elegant, concise construction of novel graphics in the style of D3.js, while also delivering high-performance interactivity over very large or streaming datasets. Interactive gallery Installation We recommend using the Anaconda Python distribution and conda to install Bokeh. Enter this command at a Bash or Windows command prompt: conda install bokeh  This installs Bokeh and all needed dependencies. To begin using Bokeh or to install using pip, follow the Quickstart documentation. Documentation Visit the Bokeh web page for information and full documentation. Contribute to Bokeh To contribute to Bokeh, please review the Developer Guide. Follow us Follow us on Twitter @bokehplots, on Vine, and on YouTube. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/bokeh/bokeh"	"R Interface to."	"true"
"HTML Widgets"	"threejs"	"https://github.com/bwlewis/rthreejs"	"Interactive 3D scatter plots and globes."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"110"	"20"	"24"	"GitHub - bwlewis/rthreejs: Three.js widgets for R and shiny Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 20 Star 110 Fork 24 bwlewis/rthreejs Code Issues 17 Pull requests 0 Pulse Graphs Three.js widgets for R and shiny http://bwlewis.github.io/rthreejs 225 commits 4 branches 1 release 6 contributors JavaScript 74.3% R 25.7% JavaScript R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags dev gh-pages hover_labels master Nothing to show CRAN-version-0.2.1 Nothing to show New pull request Latest commit 9cb9a99 Apr 30, 2016 1 bwlewis fix of regression from issue #33, see #33 (comment) Permalink Failed to load latest commit information. R - Fixed error with r argument Apr 4, 2016 data Switched to 1-based index in LeMis data Jan 17, 2016 inst fix of regression from issue #33, see #33 (comment) Apr 30, 2016 man Removed broken link from doc Mar 31, 2016 tests stroke syntax Jan 16, 2016 .Rbuildignore linting Jan 14, 2016 .lintr linting Jan 15, 2016 .travis.yml Travis fix Jan 16, 2016 DESCRIPTION Updated MIT LICENSE file Mar 31, 2016 LICENSE Updated MIT LICENSE file Mar 31, 2016 NAMESPACE CRAN check fixes Mar 25, 2016 README.md Fix CRAN issues Mar 31, 2016 README.md Three.js and R Three.js widgets for R and shiny. The package includes graphjs: an interactive force directed graph widget scatterplot3js: a 3-d scatterplot widget similar to the scatterplot3d function globejs: a widget that plots data and images on a 3-d globe The widgets are easy to use and render directly in RStudio, in R markdown, in Shiny applications, and from command-line R via a web browser. They produce high-quality interactive visualizations with just a few lines of R code. Visualizations optionally use accelerated WebGL graphics, falling back to non-accelerated graphics for systems without WebGL. When WebGL is available, the scatterplot3js function can produce fluid, interactive pointclouds with hundreds of thousands of points. See http://threejs.org for details on three.js. See http://bwlewis.github.io/rthreejs for an example. This project is based on the new htmlwidgets package. See https://github.com/ramnathv/htmlwidgets for details and links to amazingly cool visualization widgets for R. What's new Create force directed graphs the graphjs function. The scatterplot3js function now supports scatterplot3d-like xlim, ylim and zlim options. The globejs function can draw arcs and bars. We include mouse-over labels for labeling scatterplot3js points, thanks to contributions from Alexey Stukalov, https://github.com/alyst, thanks Alexey! NOTE! These examples generally run best in WebGL-enabled viewers, including at least Chrome, and recent versions of Internet Explorer web browsers. Users have had some issues with Firefox on Windows. Safari on Mac OS X seems to fall back to Canvas (not WebGL) rendering, but works. We try to maintain basic support for non-WebGL equipped browsers, but the performance and rendering quality will generally be inferior to WebGL visualizations. The examples run inside RStudio, acting similarly to normal R plots. RStudio renders them using Canvas right now, but an upcoming version of RStudio will support WebGL. Install Use the devtools package to install threejs directly from GitHub on any R platform (Mac, Windows, Linux, ...). You'll need the 'devtools' package. if(!require(""devtools"")) install.packages(""devtools"") devtools::install_github(""bwlewis/rthreejs"") Examples The following example illustrates the 3D scatterplot widget. library(""shiny"") runApp(system.file(""examples/scatterplot"", package=""threejs"")) The next example illustrates the globe widget by plotting the relative population of some cities using data from the R maps package on a globe. It's based on the JavaScript WebGL Globe Toolkit (https://github.com/dataarts) by the Google Creative Lab Data Arts Team. runApp(system.file(""examples/globe"", package=""threejs"")) For detailed help on the widgets and additional examples, see ?scatterplot3js ?globejs Changes to the three.min.js JavaScript library The package now includes a check for a manual (but simple) change required of the three.min.js JavaScript library, discovered by Joe Cheng at RStudio. For details see https://github.com/bwlewis/rthreejs/issues/15. The required change is near the very beginning of the three.min.js file. Whenever we update this library we need to change: // threejs.org/license 'use strict';var THREE={REVISION: to // threejs.org/license 'use strict';var THREE=window.THREE={REVISION: That enables the library to work correctly with the shiny renderUI functions. Status Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/bwlewis/rthreejs"	"Interactive 3D scatter plots and globes."	"true"
"Reproducible Research"	"knitr"	"http://yihui.name/knitr/"	"Easy dynamic report generation in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1193"	"128"	"542"	"GitHub - yihui/knitr: A general-purpose tool for dynamic report generation in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 128 Star 1,193 Fork 542 yihui/knitr Code Issues 10 Pull requests 6 Pulse Graphs A general-purpose tool for dynamic report generation in R http://yihui.name/knitr 4,490 commits 2 branches 26 releases 72 contributors R 82.5% CSS 7.9% TeX 6.9% HTML 1.7% Other 1.0% R CSS TeX HTML Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v1.13 v1.12.3 v1.12 v1.11 v1.10.5 v1.10 v1.9 v1.8 v1.7 v1.6 v1.5 v1.4 v1.3 v1.2 v1.1 v1.0 v0.9 v0.8 v0.7 v0.6 v0.5 v0.4 v0.3 v0.2 v0.1 doc Nothing to show New pull request Latest commit 0652b6e Jul 15, 2016 jjallaire committed with yihui eng_sql: add caption to kable html output (#1243) … * eng_sql: add caption to kable html output  * display caption using kable  * use left alignment for columns  * force left alignment of first column by converting to character  * throw error if 'connection' option is not specified  * only force left alignment of the first column for id columns Permalink Failed to load latest commit information. R eng_sql: add caption to kable html output (#1243) Jul 15, 2016 demo the demo/ directory is supposed to contain .R demos; moving this Rmd … Jul 13, 2016 inst recompile examples and upload May 8, 2016 man roxygenize and bump version Jul 13, 2016 tests added string-align (#1240) Jul 12, 2016 tools skip make deps in make integration-run May 11, 2016 vignettes port \tightlist from Pandoc's LaTeX template Jul 11, 2015 .Rbuildignore move the contributing section to CONTRIBUTING.md Nov 26, 2014 .Rinstignore there is no makefile now Aug 5, 2013 .gitignore the demo/ directory is supposed to contain .R demos; moving this Rmd … Jul 13, 2016 .travis.yml make sure the exit code is 0 May 10, 2016 CONTRIBUTING.md on how to add the four spaces Apr 19, 2016 DESCRIPTION bump version Jul 14, 2016 FAQ.md FAQ: setwd() is not sticky across code chunks Jan 22, 2015 Makefile it is integration instead of integration-run that should install (e.g… May 10, 2016 NAMESPACE roxygenize and bump version Jul 13, 2016 NEWS.md a news item for #1241 Jul 13, 2016 README.md use the ""canonical"" form of CRAN URLs May 6, 2016 knitr.Rproj remove the --no-manual option Apr 29, 2016 README.md knitr The R package knitr is a general-purpose literate programming engine, with lightweight API's designed to give users full control of the output without heavy coding work. It combines many features into one package with slight tweaks motivated from my everyday use of Sweave. See the package homepage for details and examples. See FAQ's for a list of frequently asked questions (including where to ask questions). Installation You can install the stable version on CRAN: install.packages('knitr', dependencies = TRUE) You can also install the development version from XRAN, which provides daily build of knitr: # update all existing packages first update.packages(ask = FALSE, repos = 'http://cran.rstudio.org') install.packages('knitr', repos = c('http://yihui.name/xran', 'http://cran.rstudio.org')) Or use devtools to install the development version from Github: devtools::install_github('yihui/knitr', build_vignettes = TRUE) Motivation While Sweave and related add-on packages like cacheSweave and pgfSweave are fairly good engines for literate programming in R, but I often feel my hands are tied, for example: I stared at the source code of Sweave and wished for hundreds of times that if only I could easily insert [width=.8\textwidth] between \includegraphics and {my-plot.pdf} (the official way in Sweave is \setkeys{Gin} but it is setting a global width, which is unrealistic since we often have to set widths individually; yes, you can use \setkeys{Gin} for many times, but why not just provide an option for each chunk?) I wished for many times that if only I could use graphics devices other than PDF and postscript; now the dream has come true in the official R, but what I was hoping for was an option as simple as dev = 'png' or dev = 'CairoJPEG' I wished multiple plots in a code chunk could be recorded instead of only the last one I wished there was a way to round the numbers in \Sexpr{} other than writing expressions like \Sexpr{round(x, 3)} for each single \Sexpr{} I wished I did not have to print() plots from ggplot2 and a simple qplot(x, y) would just give me a plot in Sweave I wished users would never need instructions on Sweave.sty or run into troubles due to the fact that LaTeX cannot find Sweave.sty I wished cacheSweave could print the results of a code chunk even if it was cached I wished brew could support graphics I wished R2HTML could support R code syntax highlighting ... The package knitr was designed to give the user access to every part of the process of dealing with a literate programming document, so there is no need to hack at any core components if you want more freedom. I have gone through the source code of pgfSweave and cacheSweave for a couple of times, and I often feel uncomfortable with the large amount of code copied from official R, especially when R has a new version released (I will begin to worry if the add-on packages are still up-to-date with the official Sweave). Usage library(knitr) ?knit knit(input) If options are not explicitly specified, knitr will try to guess reasonable default settings. A few manuals are available such as the main manual, and the graphics manual. For a more organized reference, see the knitr book. License This package is free and open source software, licensed under GPL. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/yihui/knitr"	"Easy dynamic report generation in R."	"true"
"Reproducible Research"	"xtable"	"http://cran.r-project.org/web/packages/xtable/index.html"	"Export tables to LaTeX or HTML."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package xtable xtable: Export Tables to LaTeX or HTML Coerce data to LaTeX and HTML tables. Version: 1.8-2 Depends: R (≥ 2.10.0) Imports: stats, utils Suggests: knitr, lsmeans, spdep, splm, sphet, plm, zoo, survival Published: 2016-02-05 Author: David B. Dahl Maintainer: David Scott <d.scott at auckland.ac.nz> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://xtable.r-forge.r-project.org/ NeedsCompilation: no Materials: NEWS In views: ReproducibleResearch CRAN checks: xtable results Downloads: Reference manual: xtable.pdf Vignettes: xtable List of Tables Gallery xtable List of Tables Gallery xtable margintable xtable Gallery Package source: xtable_1.8-2.tar.gz Windows binaries: r-devel: xtable_1.8-2.zip, r-release: xtable_1.8-2.zip, r-oldrel: xtable_1.8-2.zip OS X Mavericks binaries: r-release: xtable_1.8-2.tgz, r-oldrel: xtable_1.8-2.tgz Old sources: xtable archive Reverse dependencies: Reverse depends: A3, acnr, AmpliconDuo, bayesMCClust, compareGroups, DATforDCEMRI, etable, FactoClass, fifer, generalCorr, gsDesign, IndependenceTests, klausuR, LeLogicielR, likert, LinRegInteractive, MAMA, multilevelPSA, pamctdp, papeR, permPATH, PIGE, quipu, RcmdrPlugin.Export, RcmdrPlugin.NMBU, reporttools, rplotengine, rtable, sdcMicro, SeleMix, seqDesign, stacomirtools, surveillance, survSNP, TableMonster, TRSbook, twang Reverse imports: AICcmodavg, BEQI2, BioGeoBEARS, BrailleR, confidence, Correlplot, CovSelHigh, Crossover, CUFF, DAMisc, descr, dynr, EasyHTMLReport, EMA, hierarchicalDS, inTrees, IsoGene, lfe, lsmeans, MAMA, midrangeMCP, miscset, MplusAutomation, MSBVAR, ncappc, NNTbiomarker, OpasnetUtils, pipe.design, pkgmaker, PopGenReport, qmethod, RecordLinkage, reportRx, reproducer, RItools, robustlmm, SciencesPo, SensMixed, shiny, shinystan, SIMMS, SixSigma, sparkTable, spduration, StatDA, summarytools, survMisc, userfriendlyscience, x.ent Reverse suggests: afex, ascii, attribrisk, AutoModel, BayesFactor, bestglm, blockTools, boostr, CALIBERrfimpute, caper, caschrono, chipPCR, CNVassoc, coin, dataRetrieval, dpcR, drLumi, dtwSat, e1071, EGRET, EloChoice, evtree, ExtDist, fbRanks, geoknife, gets, hamlet, hdm, HiveR, htmlTable, hwriterPlus, icarus, icd9, ifaTools, itsadug, JoSAE, knitrBootstrap, kyotil, MARSS, matlib, mcmc, micEconCES, microplot, mixedMem, MPSEM, multcomp, nFactors, NlsyLinks, NMF, NPC, optmatch, ordinal, pedometrics, phangorn, PharmacoGx, PMCMR, qtutils, randomLCA, RankAggreg, rbamtools, rcdk, robustbase, RSiena, rtf, sadists, SBSA, SeqFeatR, SharpeR, SII, soiltexture, sos4R, spdep, sqlutils, StMoMo, taRifx, textreg, TraMineR, TriMatch, tscount, waterData Reverse enhances: JM, JMbayes, pampe"	"null"	"null"	"Export tables to LaTeX or HTML."	"true"
"Reproducible Research"	"rapport"	"http://rapport-package.info/#intro"	"An R templating system."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"37"	"3"	"11"	"GitHub - Rapporter/rapport: rapport is an R package that facilitates the creation of reproducible statistical report templates Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 3 Star 37 Fork 11 Rapporter/rapport Code Issues 6 Pull requests 0 Wiki Pulse Graphs rapport is an R package that facilitates the creation of reproducible statistical report templates http://rapport-package.info/ 1,055 commits 14 branches 6 releases Fetching contributors R 76.2% CSS 11.8% JavaScript 11.2% Other 0.8% R CSS JavaScript Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags development gh-pages graph.name hi-res latticeExtra master matchable-default-value naming-conventions new-file-extension new-input-system pander pr/78 rapport-refactor recordedPlot Nothing to show v1.0 v0.40 v0.31 v0.3 v0.2 oldstable Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. R data demo inst man .Rbuildignore .gitignore .travis.yml DESCRIPTION INSTALL Makefile NAMESPACE NEWS README.md rapport.Rproj README.md rapport rapport is an R package that facilitates creation of reproducible statistical report templates. Once created, rapport templates can be exported to various external formats: HTML, LaTeX, PDF, ODT, etc. Apart from R, all you need to know to start writing your own templates is pandoc markup syntax, and some rapport conventions that allow the reproducibility of the template. Several predefined templates come bundled with default rapport installation, and their number will increase in future releases. Of course, we strongly encourage you to write your own templates, and/or customise the ones that are shipped with default package installation. Installation The most recent version of this package is hosted on GitHub, but we also submit stable versions to CRAN from time to time (read: once in a blue moon). Build status: Development branch: Master branch: We encourage everyone to install rapport via the nifty function from devtools package: library(devtools) install_github('rapport', 'rapporter')  Or download the sources in a zip file and build manually. To do so, please unzip the file to an empty dir and run the following commands there: R CMD build rapport R CMD INSTALL rapport_0.1.tar.gz  If you're running R on Windows, you need to install Rtools. Once you have installed Rtools, issue following command in command prompt: R CMD build --binary <path to .tar.gz file> R CMD INSTALL <path to .zip file>  Usage For a brief introcution to rapport functionality, run: demo(rapport)  Pages For more info head over to package homepage. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rapporter/rapport"	"An R templating system."	"true"
"Reproducible Research"	"rmarkdown"	"http://rmarkdown.rstudio.com/"	"Dynamic documents for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"550"	"85"	"296"	"GitHub - rstudio/rmarkdown: Dynamic Documents for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 85 Star 550 Fork 296 rstudio/rmarkdown Code Issues 155 Pull requests 7 Wiki Pulse Graphs Dynamic Documents for R http://rmarkdown.rstudio.com/ 1,677 commits 25 branches 1 release 37 contributors R 43.1% JavaScript 25.8% CSS 18.7% HTML 7.0% TeX 3.7% Lua 1.5% Other 0.2% R JavaScript CSS HTML TeX Lua Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bugfix/windows-output-dir cran-0.6 cran-0.7 cran-0.8 cran-0.9.2 cran-0.9.6 cran-1.0 feature/attach-methods feature/full-output-filenames feature/json-filter feature/knitsql-sticky-table-header feature/md-allow-html-dependencies feature/redesign feature/render-site-seed feature/render-site feature/shiny-dependencies feature/tabsets feature/vignette_document gh-pages-redesign gh-pages-shiny-docs gh-pages htmltools-refactor master v0.98.1000 v0.99-1000-preview Nothing to show v0.1.2 Nothing to show New pull request Latest commit b65e177 Jul 15, 2016 jjallaire regenerate docs Permalink Failed to load latest commit information. R no max_height for kable by default (don't want to truncate displays i… Jul 15, 2016 inst no max_height for kable by default (don't want to truncate displays i… Jul 15, 2016 man regenerate docs Jul 15, 2016 tests skip the test on CRAN (pandoc may not be available) May 22, 2016 tools update prune-mathjax script Jul 12, 2016 .Rbuildignore vignette re: html_notebook + output_source May 12, 2016 .gitignore vignette re: html_notebook + output_source May 12, 2016 .travis.yml Simplify Travis config Mar 21, 2016 CONTRIBUTING.Rmd use github_document for package .md files Jan 21, 2016 CONTRIBUTING.md use github_document for package .md files Jan 21, 2016 DESCRIPTION bump version Jul 15, 2016 NAMESPACE don't export stickytableheaders Jul 15, 2016 PANDOC.Rmd use github_document for package .md files Jan 21, 2016 PANDOC.md use github_document for package .md files Jan 21, 2016 README.Rmd change name of common options file to `_output.yml` Feb 11, 2016 README.md change name of common options file to `_output.yml` Feb 11, 2016 rmarkdown.Rproj Strip trailing white spaces Jan 19, 2016 README.md Overview The rmarkdown package is a next generation implementation of R Markdown based on pandoc. This implementation brings many enhancements to R Markdown, including: Create HTML, PDF, and MS Word documents as well as Beamer, ioslides, and Slidy presentations. New markdown syntax including expanded support for tables, definition lists, and bibliographies. Hooks for customizing HTML and PDF output (include CSS, headers, and footers). Include raw LaTeX within markdown for advanced customization of PDF output. Compile HTML, PDF, or MS Word notebooks from R scripts. Extensibility: easily define new formats for custom publishing requirements. Create interactive R Markdown documents using Shiny. Note that PDF output (including Beamer slides) requires an installation of TeX. See the R Markdown documentation for full details. Installation If you are working within RStudio then you can simply install the current release of RStudio (both the rmarkdown package and pandoc are included). If you want to use the rmarkdown package outside of RStudio then you can install the package from CRAN as follows: install.packages(""rmarkdown"") A recent version of pandoc (>= 1.12.3) is also required. See the pandoc installation instructions for details on installing pandoc for your platform. Usage The render function is used to convert R Markdown (Rmd) files into various output formats (the default is HTML). Calling render will knit the specified input document and then produce the final output document using pandoc: render(""input.Rmd"") You can also specify a plain markdown file in which case knitting will be bypassed: render(""input.md"") Output Formats R Markdown documents can contain a metadata section that includes both title, author, and date information as well as options for customizing output. For example, this metadata included at the top of an Rmd file adds a table of contents and chooses a different HTML theme: --- title: ""Sample Document"" output:   html_document:     toc: true     theme: united --- R Markdown has built in support for several output formats (HTML, PDF, and MS Word documents as well as Beamer presentations). These formats can also be specified in metadata, for example: --- title: ""Sample Document"" output:   pdf_document:     toc: true     highlight: zenburn --- If you aren't specifying format options you can also just use a simple format name: --- title: ""Sample Document"" output: pdf_document --- Multiple formats can be specified in metadata: --- title: ""Sample Document"" output:   html_document:     toc: true     theme: united   pdf_document:     toc: true     highlight: zenburn --- To select from the various formats defined you can pass a format name to render. For example: render(""input.Rmd"", ""pdf_document"") If no explicit format name is passed to render then the first one defined will be used. You can also render all formats defined in the file with: render(""input.Rmd"", ""all"") Shared Output Formats You can also define output formats externally in a file named _output.yml located in the same directory as the R Markdown source file. For example: html_document:   toc: true   theme: united pdf_document:   toc: true   highlight: zenburn Using an _output.yml file is a good way to share output settings across multiple R Markdown files in the same directory. Output Format Functions Output formats need not be specified in metadata. In fact, metadata is just a convenient way to invoke functions that implement output formats. There are seven built-in output formats each exported as a function from the package: html_document pdf_document word_document md_document beamer_presentation ioslides_presentation slidy_presentation As you'd expect, these functions can also be invoked as part of the call to render, for example: render(""input.Rmd"", html_document(toc = TRUE)) render(""input.Rmd"", pdf_document(latex_engine = ""lualatex"")) render(""input.Rmd"", beamer_presentation(incremental = TRUE)) For more details on the options available for each format see their respective help topics. License The rmarkdown package is licensed under the GPLv3 (http://www.gnu.org/licenses/gpl.html). Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/rmarkdown"	"Dynamic documents for R."	"true"
"Reproducible Research"	"slidify"	"https://github.com/ramnathv/slidify"	"Generate reproducible html5 slides from R markdown."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"706"	"65"	"313"	"GitHub - ramnathv/slidify: Generate reproducible html5 slides from R markdown Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 65 Star 706 Fork 313 ramnathv/slidify Code Issues 155 Pull requests 4 Wiki Pulse Graphs Generate reproducible html5 slides from R markdown http://www.slidify.org 302 commits 5 branches 2 releases 7 contributors R 73.2% JavaScript 20.1% HTML 4.1% CSS 2.6% R JavaScript HTML CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags dev fix-encode gh-pages master onefile Nothing to show v0.3.3 v0.2.2 Nothing to show New pull request Latest commit 1dd41a3 Sep 5, 2015 ramnathv Merge pull request #431 from Roon/patch-1 … Update README.md Permalink Failed to load latest commit information. R merge regex fix changes from john Sep 5, 2015 inst custom knit function for rstudio Mar 6, 2014 man add documentation for slidify. Jun 24, 2013 tests add tests Dec 24, 2012 .Rbuildignore add .travis.yml and update .Rbuildignore Jun 11, 2014 .Rinstignore add docs and examples to .Rinstignore Nov 7, 2012 .gitignore Merge branch 'warnings' into warnings-dev2 Dec 2, 2013 .travis.yml Create .travis.yml Feb 24, 2014 DESCRIPTION bump version and update versions of imported packages. Sep 5, 2015 NAMESPACE custom knit function for rstudio Mar 7, 2014 README.md Update README.md May 21, 2015 slidify.Rproj update slidify.Rproj Feb 12, 2014 README.md Slidify helps you create and publish beautiful HTML5 presentations from RMarkdown Getting Started Install Slidify is still under heavy development. You can install it from github using the devtools package. You will also need slidifyLibraries which contains all external libraries required by slidify. install_github('ramnathv/slidify') install_github('ramnathv/slidifyLibraries') Initialize You can initialize a presentation by running create. This will create a scaffold for your presentation and open an Rmd file for you to edit. library(slidify) author('mydeck') Author Write your presentation in RMarkdown, using a newline followed by three dashes to separate slides. You can mix markdown with code chunks to create a reproducible slide deck. Generate Generate your presentation by running slidify. This will create a static HTML5 presentation that you can open locally in your browser. slidify('index.Rmd') Publish # publish to github # create an empty repo on github. replace USER and REPO with your repo details publish(user = USER, repo = REPO)   # publish to rpubs publish(title = 'My Deck', 'index.html', host = 'rpubs') Customize Slidify is designed to be modular and provides a high degree of customization for the more advanced user. You can access the defaults using slidifyDefaults(). It is possible to override options by passing it to slidify as a named list or as a yaml file. framework      : slide generation framework to use theme          : theme to use for styling slide content highlighter    : tool to use for syntax highlighting hitheme        : style to use for syntax highlighting mode           : selfcontained, standalone, draft url            : paths to lib widgets        : widgets to include  Slidify makes it easy to create, customize and publish, reproducible HTML5 slide decks from R Markdown. It is designed to make it very easy for a HTML novice to generate a crisp, visually appealing HTML5 slide deck, while at the same time giving advanced users several options to customize their presentation. The guiding philosophy of slidify is to completely separate writing of content from its rendering, so that content can be written once in R Markdown, and rendered as an HTML5 presentation using any of the HTML5 slide frameworks supported. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ramnathv/slidify"	"Generate reproducible html5 slides from R markdown."	"true"
"Reproducible Research"	"Sweave"	"https://www.statistik.lmu.de/%7Eleisch/Sweave/"	"A package designed to write LaTeX reports using R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"LMU - Prof. Friedrich Leisch The Sweave Homepage What is Sweave? Sweave is a tool that allows to embed the R code for complete data analyses in latex documents. The purpose is to create dynamic reports, which can be updated automatically if data or analysis change. Instead of inserting a prefabricated graph or table into the report, the master document contains the R code necessary to obtain it. When run through R, all data analysis output (tables, graphs, etc.) is created on the fly and inserted into a final latex document. The report can be automatically updated if data or analysis change, which allows for truly reproducible research. Where can I get it? The Sweave software itself is part of every R installation, see help(""Sweave"", package=""utils"") to get started. This page features additional material that does not ship with standard R, like papers and additional examples. How do I cite Sweave? To cite Sweave please use the paper describing the first version: Friedrich Leisch. Sweave: Dynamic generation of statistical reports using literate data analysis. In Wolfgang Härdle and Bernd Rönz, editors, Compstat 2002 - Proceedings in Computational Statistics, pages 575-580. Physica Verlag, Heidelberg, 2002. ISBN 3-7908-1517-9. [ bib | PDF ] Manual and FAQ The Sweave manual and the list of frequently asked questions provide more detailed information: Manual FAQ Publications Friedrich Leisch. Sweave, part I: Mixing R and Latex. R News, 2(3):28-31, December 2002. [ bib | PDF ] Friedrich Leisch. Sweave, part II: Package vignettes. R News, 3(2):21-24, October 2003. [ bib | PDF ] Friedrich Leisch. Sweave and beyond: Computations on text documents. In Kurt Hornik, Friedrich Leisch, and Achim Zeileis, editors, Proceedings of the 3rd International Workshop on Distributed Statistical Computing, Vienna, Austria, 2003. ISSN 1609-395X. [ bib | http ] Friedrich Leisch and Anthony J. Rossini. Reproducible statistical research. Chance, 16(2):46-50, 2003. [ bib ] Anthony J. Rossini and Friedrich Leisch. Literate statistical practice. UW Biostatistics Working Paper Series 194, University of Washington, WA, USA, 2003. [ bib | http ] Example files Example 1: source (Snw), alternative source (Stex), PDF Example 2: source, PDF Example 3: source, PDF"	"null"	"null"	"A package designed to write LaTeX reports using R."	"true"
"Reproducible Research"	"texreg"	"http://www.philipleifeld.de/software/texreg/texreg.html"	"Formatting statistical models in LaTex and HTML."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Philip Leifeld - texreg: Conversion of Statistical Model Output in R to LaTeX and HTML Tables Philip Leifeld Philip Leifeld Philip Leifeld texreg: Conversion of Statistical Model Output in R to LaTeX and HTML Tables texreg is a package for the statistical computing environment R. It can be used to create fancy tables from regression output. The tables are available in several formats: LaTeX, HTML, MS Word, ASCII, and Markdown. texreg on CRAN: cran.r-project.org/package=texreg Project homepage on R-Forge: r-forge.r-project.org/projects/texreg/ Article about texreg in the Journal of Statistical Software: www.jstatsoft.org/v55/i08/ Research overview Publications Presentations Software Discourse Network Analyzer texreg xergm polnet giub.bst Teaching Curriculum vitae Dissertation award video Recent activities Contact Home Research overview Publications Presentations Software Discourse Network Analyzer texreg xergm polnet giub.bst Teaching Curriculum vitae Dissertation award video Recent activities Contact"	"null"	"null"	"Formatting statistical models in LaTex and HTML."	"true"
"Reproducible Research"	"checkpoint"	"https://github.com/RevolutionAnalytics/checkpoint"	"Install packages from snapshots on the checkpoint server."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"54"	"21"	"17"	"GitHub - RevolutionAnalytics/checkpoint: Install R packages from snapshots on checkpoint-server Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 54 Fork 17 RevolutionAnalytics/checkpoint Code Issues 13 Pull requests 1 Wiki Pulse Graphs Install R packages from snapshots on checkpoint-server 660 commits 22 branches 21 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 149_progress_report 160_scan_progress_report 192-setSnapshot 195-knitr-instead-of-sweave 212-log-data-usage BigBang CRAN-compat-1 CRAN-compat bugfix-143-library-checkpoint bugfix_154 bugfix_155 checkpoint-persist custom-mran dev https local-dev master no-R-dependency release remove-options remove_knitr_dependency undo-checkpoint Nothing to show v0.2.0 v0.1.12 v0.1.6 v0.1.0 v0.1-11 0.3.16 0.3.15 0.3.14 0.3.13 0.3.12 0.3.11 0.3.10 0.3.9 0.3.8 0.3.7 0.3.6 0.3.5 0.3.4 0.3.3 0.3.2 0.1.8 Nothing to show New pull request Latest commit af3c5ac Jun 14, 2016 andrie committed on GitHub Added code of conduct Permalink Failed to load latest commit information. R Include import from utils in NAMESPACE Apr 13, 2016 inst Don't run example on CRAN Sep 14, 2015 man Replaced RevolutionAnalytics with Microsoft, except for github links #… Apr 13, 2016 tests Replaced RevolutionAnalytics with Microsoft, except for github links #… Apr 13, 2016 vignettes Replaced RevolutionAnalytics with Microsoft, except for github links #… Apr 13, 2016 .Rbuildignore fixes #129 Sep 29, 2014 .gitignore Update .gitignore to ignore temporary vignette files. #130 Jan 12, 2015 .travis.yml Include rmarkdown in travis config #193 Apr 13, 2016 DESCRIPTION Changed ""Revolution Analytics"" to Microsoft #215 Apr 13, 2016 NAMESPACE Include import from utils in NAMESPACE Apr 13, 2016 NEWS Add NEWS file Sep 14, 2015 README.md Added code of conduct Jun 14, 2016 README.md checkpoint - Simple reproducibility for R scripts that depend on packages Build status master: dev: Version on CRAN Overview The goal of checkpoint is to solve the problem of package reproducibility in R. Specifically, checkpoint solve the problems that occur when you don't have the correct versions of R packages. Since packages get updated on CRAN all the time, it can be difficult to recreate an environment where all your packages are consistent with some earlier state. To solve this, checkpoint allows you to install packages from a specific snapshot date. In other words, checkpoint makes it possible to install package versions from a specific date in the past, as if you had a CRAN time machine. Checkpoint Features With the checkpoint package, you can easily: Write R scripts or projects using package versions from a specific point in time; Write R scripts that use older versions of packages, or packages that are no longer available on CRAN; Install packages (or package versions) visible only to a specific project, without affecting other R projects or R users on the same system; Manage multiple projects that use different package versions; Share R scripts with others that will automatically install the appropriate package versions; Write and share code R whose results can be reproduced, even if new (and possibly incompatible) package versions are released later. Using the checkpoint function Using checkpoint is simple: The checkpoint package has only a single function, checkpoint() where you specify the snapshot date. Example: checkpoint(""2015-01-15"") instructs R to install and use only package versions that existed on January 15, 2015. To write R code for reproducibility, simply begin your master R script as follows: library(checkpoint) checkpoint(""2015-01-15"") ## or any date in YYYY-MM-DD format after 2014-09-17 Choose a snapshot date that includes the package versions you need for your script (or today's date, to get the latest versions). Any package version published since September 17, 2014 is available for use. Sharing your scripts for reproducibility Sharing your R analysis reproducibly can be as easy as emailing a single R script. Begin your script with the following commands: Load the checkpoint package using library(checkpoint) Ensure you specify checkpoint() with your checkpoint date, e.g. checkpoint(""2014-10-01"") Then send this script to your collaborators. When they run this script on their machine, checkpoint will perform the same steps of installing the necessary packages, creating the checkpoint snapshot folder and producing the same results. How checkpoint works When you create a checkpoint, the checkpoint() function performs the following: Creates a snapshot folder to install packages. This library folder is located at ~/.checkpoint Scans your project folder for all packages used. Specifically, it searches for all instances of library() and requires() in your code. Installs these packages from the MRAN snapshot into your snapshot folder using install.packages() Sets options for your CRAN mirror to point to a MRAN snapshot, i.e. modify options(repos) This means the remainder of your script will run with the packages from a specific date. Where checkpoint finds historic package versions To achieve reproducibility, once a day we create a complete snapshot of CRAN, on the ""Managed R archived network"" (MRAN) server. At midnight (UTC) MRAN mirrors all of CRAN and saves a snapshot. (MRAN has been storing daily snapshots since September 17, 2014.) This allows you to install packages from a snapshot date, thus ""going back in time"" to this date, by installing packages as they were at that snapshot date. Together, the checkpoint package and the MRAN server act as a CRAN time machine. The checkpoint() function installs the packages to a local library exactly as they were at the specified point in time. Only those packages are available to your session, thereby avoiding any package updates that came later and may have altered your results. In this way, anyone using checkpoint() can ensure the reproducibility of your scripts or projects at any time. Resetting the checkpoint To revert to your default CRAN mirror and access globally-installed packages, simply restart your R session. Worked example  # Create temporary project and set working directory  example_project <- paste0(""~/checkpoint_example_project_"", Sys.Date())  dir.create(example_project, recursive = TRUE) oldwd <- setwd(example_project)   # Write dummy code file to project  cat(""library(MASS)"", ""library(foreach)"",     sep=""\n"",      file=""checkpoint_example_code.R"")   # Create a checkpoint by specifying a snapshot date  library(checkpoint) checkpoint(""2014-10-01"")  # Check that CRAN mirror is set to MRAN snapshot getOption(""repos"")  # Check that library path is set to ~/.checkpoint .libPaths()  # Check which packages are installed in checkpoint library installed.packages()  # cleanup unlink(example_project, recursive = TRUE) setwd(oldwd)  Installation To install checkpoint directly from CRAN, use: install.packages(""checkpoint"") library(""checkpoint"")  To install checkpoint directly from github, use the devtools package. In your R session, try: install.packages(""devtools"") devtools::install_github(""RevolutionAnalytics/checkpoint"") library(""checkpoint"")  Using knitr and rmarkdown with checkpoint Although checkpoint will scan for dependencies in .Rmd files if knitr is installed, it does not automatically install the knitr or rmarkdown packages. To build your .Rmd files, you will have to add a script in your project that explicitly loads all the packages required to build your .Rmd files. A line like the following may be sufficient: library(rmarkdown) This should automatically resolve dependencies on the packages knitr, yaml and htmltools To build your rmarkdown file, use a call to rmarkdown::render(). For example, to build a file called example.Rmd, use: rmarkdown::render(""example.Rmd"") More information Project website https://github.com/RevolutionAnalytics/checkpoint/wiki Issues Post an issue on the Issue tracker at https://github.com/RevolutionAnalytics/checkpoint/issues Checkpoint server https://github.com/RevolutionAnalytics/checkpoint-server Made by Microsoft Code of conduct This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/RevolutionAnalytics/checkpoint"	"Install packages from snapshots on the checkpoint server."	"true"
"Reproducible Research"	"brew"	"https://cran.r-project.org/web/packages/brew/index.html"	"Pre-compute data to enhance your report templates. Can be combined with knitr."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package brew brew: Templating Framework for Report Generation brew implements a templating framework for mixing text and R code for report generation. brew template syntax is similar to PHP, Ruby's erb module, Java Server Pages, and Python's psp module. Version: 1.0-6 Published: 2011-04-13 Author: Jeffrey Horner Maintainer: Jeffrey Horner <jeffrey.horner at gmail.com> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no In views: ReproducibleResearch CRAN checks: brew results Downloads: Reference manual: brew.pdf Package source: brew_1.0-6.tar.gz Windows binaries: r-devel: brew_1.0-6.zip, r-release: brew_1.0-6.zip, r-oldrel: brew_1.0-6.zip OS X Mavericks binaries: r-release: brew_1.0-6.tgz, r-oldrel: brew_1.0-6.tgz Old sources: brew archive Reverse dependencies: Reverse depends: SortableHTMLTables, sos Reverse imports: BatchJobs, diezeit, leafletR, mapview, opencpu, rdnb, Rook, roxygen2, tabplotd3"	"null"	"null"	"Pre-compute data to enhance your report templates. Can be combined with knitr."	"true"
"Reproducible Research"	"ReporteRs"	"http://davidgohel.github.io/ReporteRs/index.html"	"An R package to generate Microsoft Word, Microsoft PowerPoint and HTML reports."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"132"	"25"	"30"	"GitHub - davidgohel/ReporteRs: ReporteRs is an R package for creating MS Word, MS Powerpoint and html documents. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 25 Star 132 Fork 30 davidgohel/ReporteRs Code Issues 13 Pull requests 0 Pulse Graphs ReporteRs is an R package for creating MS Word, MS Powerpoint and html documents. http://davidgohel.github.io/ReporteRs/index.html 704 commits 2 branches 29 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v0.8.2 v0.8.1 v0.8.0 v0.7.9 v0.7.6 v0.7.5 v0.7.4 v0.7.3 v0.7.1 v0.6.9 v0.6.8 v0.6.6 v0.6.3 v0.6.1 v0.6.0 v0.5.9 v0.5.8 v0.5.7 v0.5.6 v0.5.5 v0.5.4 v0.5.3 v0.5.2 v0.5.1 v0.5 v0.4 v0.3 v0.2 v0.1 Nothing to show New pull request Latest commit d2e09fb Jun 6, 2016 dgohel [ci skip] Permalink Failed to load latest commit information. R dev version [ci skip] Jun 6, 2016 examples add colors opacity Mar 7, 2016 inst html table margins Jun 6, 2016 java html table margins Jun 6, 2016 man dev version [ci skip] Jun 6, 2016 tests doc Mar 4, 2016 .Rbuildignore deprecate fontname Jan 7, 2016 .gitattributes ReporteRs-0.1 Jan 27, 2014 .gitignore git Jan 12, 2016 .travis.yml [ci skip] Jun 6, 2016 DESCRIPTION dev version [ci skip] Jun 6, 2016 NAMESPACE add colors opacity Mar 7, 2016 NEWS dev version [ci skip] Jun 6, 2016 README.md dev version [ci skip] Jun 6, 2016 ReporteRs.Rproj git Jan 12, 2016 appveyor.yml appveyor Nov 9, 2015 README.md ReporteRs ReporteRs is an R package for creating Microsoft Word, Microsoft PowerPoint and HTML documents from R. Usefull links: Help pages: Documentation if you have questions, use the mailing list: Mailing list Report a bug: Bug report. If you report a bug, try to send a reproducible example and don't forget to send the result of sessionInfo(). Features Create docx, pptx or html files with only a few lines of R code. Add tables, plots, text or tables of contents into Word, PowerPoint and html documents. Customize formatting of R outputs. Design and format any complex table. Installation Dependencies Java (it has been tested with java version >= 1.6). CRAN install.packages(""ReporteRs"")  Github if( !require( devtools ) ) install.packages(""devtools"") devtools::install_github('davidgohel/ReporteRsjars') devtools::install_github('davidgohel/ReporteRs')  Getting Started library(ReporteRs)  example(docx) #run a complete and detailed docx example example(pptx) #run a complete and detailed pptx example example(bsdoc) #run a complete and detailed html example  License The ReporteRs package is licensed under the GPLv3. See COPYRIGHTS file in the inst directory for additional details. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/davidgohel/ReporteRs"	"An R package to generate Microsoft Word, Microsoft PowerPoint and HTML reports."	"true"
"Reproducible Research"	"bookdown"	"https://bookdown.org/"	"Authoring Books with R Markdown."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"220"	"46"	"77"	"GitHub - rstudio/bookdown: Authoring Books with R Markdown Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 46 Star 220 Fork 77 rstudio/bookdown Code Issues 14 Pull requests 2 Pulse Graphs Authoring Books with R Markdown https://bookdown.org 743 commits 2 branches 1 release 13 contributors JavaScript 76.5% R 12.8% CSS 8.8% HTML 1.6% TeX 0.2% Shell 0.1% JavaScript R CSS HTML TeX Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show v0.1 Nothing to show New pull request Latest commit b318ddd Jul 12, 2016 yihui CRAN version 0.1 Permalink Failed to load latest commit information. R test against v0.99.1200 Jul 11, 2016 inst out of beta now Jul 12, 2016 man roxygenize Jul 10, 2016 tests testit 0.5 is on CRAN Feb 19, 2016 tools gitbook assets have been moved Apr 11, 2016 .Rbuildignore ignore more files during R CMD build to reduce the package size Jul 11, 2016 .gitignore ignore .min.map files Apr 11, 2016 .travis.yml the latest version of webshot should install PhantomJS from Winston's… Jul 11, 2016 CONTRIBUTING.md add the contributing guide Nov 10, 2015 DESCRIPTION CRAN version 0.1 Jul 12, 2016 NAMESPACE import stats and utils to avoid notes in R CMD check Jul 10, 2016 README.md tweak readme Jul 12, 2016 bookdown.Rproj set up the RStudio project Oct 29, 2015 README.md bookdown A open-source (GPL-3) R package to facilitate writing books and long-form articles/reports with R Markdown. Features include: Multiple output formats: HTML, PDF, and ePub. Makes it easy to produce books that look visually pleasant. Styles include Gitbook (https://www.gitbook.com), Tufte CSS (http://rstudio.github.io/tufte/), and Tufte-LaTeX. Extended Markdown syntax to support numbering figures/tables, and cross-references, etc. Renders interactive HTML widgets and Shiny apps in books. Integrated with the RStudio IDE. One-click publishing to https://bookdown.org. Full documentation at https://bookdown.org/yihui/bookdown, and see ""Get Started"" at https://bookdown.org to know how to get started with writing a book. You are welcome to send us feedback using Github issues. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/bookdown"	"Authoring Books with R Markdown."	"true"
"Lists"	"Web Technologies"	"https://github.com/ropensci/webservices"	"Information about how to use R and the world wide web together."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"107"	"26"	"43"	"GitHub - ropensci/webservices: CRAN WebTechnologies Task View Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 26 Star 107 Fork 43 ropensci/webservices Code Issues 16 Pull requests 1 Wiki Pulse Graphs CRAN WebTechnologies Task View http://cran.r-project.org/web/views/WebTechnologies.html 357 commits 3 branches 3 releases Fetching contributors HTML 95.6% R 3.0% Makefile 1.4% HTML R Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages jennybc-patch-1 master Nothing to show v2016-04-28 v2016-03-21 2016-02-05 Nothing to show New pull request Latest commit 00b25ed Jul 14, 2016 leeper add RoogleVision (closes #317) Permalink Failed to load latest commit information. .gitattributes add .gitattributes Feb 5, 2016 .gitignore update Makefile Feb 5, 2016 CONTRIBUTING.md update Makefile Feb 5, 2016 Makefile fix url problems Apr 28, 2016 README.md add RoogleVision (closes #317) Jul 14, 2016 WebTechnologies.ctv add RoogleVision (closes #317) Jul 14, 2016 WebTechnologies.html add RoogleVision (closes #317) Jul 14, 2016 buildxml.R fix pkg names with periods Sep 19, 2015 checkurls.R fix url problems Apr 28, 2016 webtech.md add RoogleVision (closes #317) Jul 14, 2016 README.md CRAN Task View: Web Technologies and Services Do not edit this README by hand. See CONTRIBUTING.md. ----------------- ---------------------------------------------------------------------------------- Maintainer: Thomas Leeper, Scott Chamberlain, Patrick Mair, Karthik Ram, Christopher Gandrud Contact: thosjleeper at gmail.com Version: 2016-07-14 This Task View contains information about to use R and the world wide web together. The base version of R does not ship with many tools for interacting with the web. Thankfully, there are an increasingly large number of tools for interacting with the web. This task view focuses on packages for obtaining web-based data and information, frameworks for building web-based R applications, and online services that can be accessed from R. A list of available packages and functions is presented below, grouped by the type of activity. The Open Data Task View provides further discussion of online data sources that can be accessed from R. If you have any comments or suggestions for additions or improvements for this Task View, go to GitHub and submit an issue, or make some changes and submit a pull request. If you can't contribute on GitHub, send Thomas an email (thosjleeper at gmail dot com) . If you have an issue with one of the packages discussed below, please contact the maintainer of that package. If you know of a web service, API, data source, or other online resource that is not yet supported by an R package, consider adding it to the package development to do list on GitHub. Tools for Working with the Web from R Core Tools For HTTP Requests There are two packages that should cover most use cases of interacting with the web from R. httr provides a user-friendly interface for executing HTTP methods (GET, POST, PUT, HEAD, DELETE, etc.) and provides support for modern web authentication protocols (OAuth 1.0, OAuth 2.0). HTTP status codes are helpful for debugging HTTP calls. httr makes this easier using, for example, stop_for_status(), which gets the http status code from a response object, and stops the function if the call was not successful. (See also warn_for_status().) Note that you can pass in additional libcurl options to the config parameter in http calls. RCurl is a lower-level package that provides a closer interface between R and the libcurl C library, but is less user-friendly. It may be useful for operations on web-based XML or to perform FTP operations. For more specific situations, the following resources may be useful: curl is another libcurl client that provides the curl() function as an SSL-compatible replacement for base R's url() and support for http 2.0, ssl (https, ftps), gzip, deflate and more. For websites serving insecure HTTP (i.e. using the ""http"" not ""https"" prefix), most R functions can extract data directly, including read.table and read.csv; this also applies to functions in add-on packages such as jsonlite::fromJSON and XML::parseXML. httpRequest is another low-level package for HTTP requests that implements the GET, POST and multipart POST verbs. curlconverter is a useful package for converting curl command-line code, for example from a browser developer's console, into R code. request (GitHub) provides a high-level package that is useful for developing other API client packages. httping (GitHub) provides simplified tools to ping and time HTTP requests, around httr calls. httpcache (GitHub) provides a mechanism for caching HTTP requests. For dynamically generated webpages (i.e., those requiring user interaction to display results), RSelenium (GitHub) can be used to automate those interactions and extract page contents. It provides a set of bindings for the Selenium 2.0 webdriver using the JsonWireProtocol. It can also aid in automated application testing, load testing, and web scraping. rdom (not on CRAN) uses phantomjs to access a webpage's Document Object Model (DOM). Another, higher-level alternative package useful for webscraping is rvest (GitHub), which is designed to work with magrittr to make it easy to express common web scraping tasks. Many base R tools can be used to download web content, provided that the website does not use SSL (i.e., the URL does not have the ""https"" prefix). download.file() is a general purpose function that can be used to download a remote file. For SSL, the download() function in downloader wraps download.file(), and takes all the same arguments. Tabular data sets (e.g., txt, csv, etc.) can be input using read.table(), read.csv(), and friends, again assuming that the files are not hosted via SSL. An alternative is to use httr::GET (or RCurl::getURL) to first read the file into R as a character vector before parsing with read.table(text=...), or you can download the file to a local directory. rio (GitHub) provides an import() function that can read a number of common data formats directly from an https:// URL. The repmis function source_data() can load and cache plain-text data from a URL (either http or https). That package also includes source_Dropbox() for downloading/caching plain-text data from non-public Dropbox folders and source_XlsxData() for downloading/caching Excel xlsx sheets. Authentication: Using web resources can require authentication, either via API keys, OAuth, username:password combination, or via other means. Additionally, sometimes web resources that require authentication be in the header of an http call, which requires a little bit of extra work. API keys and username:password combos can be combined within a url for a call to a web resource (api key: http://api.foo.org/?key=yourkey; user/pass: http://username:password@api.foo.org), or can be specified via commands in RCurl or httr. OAuth is the most complicated authentication process, and can be most easily done using httr. See the 6 demos within httr, three for OAuth 1.0 (linkedin, twitter, vimeo) and three for OAuth 2.0 (facebook, GitHub, google). ROAuth is a package that provides a separate R interface to OAuth. OAuth is easier to to do in httr, so start there. googleAuthR provides an OAuth 2.0 setup specifically for Google web services. Parsing Structured Web Data The vast majority of web-based data is structured as plain text, HTML, XML, or JSON (javascript object notation). Web service APIs increasingly rely on JSON, but XML is still prevalent in many applications. There are several packages for specifically working with these format. These functions can be used to interact directly with insecure webpages or can be used to parse locally stored or in-memory web files. XML/HTML: There are two packages for working with XML: XML and xml2 (GitHub). Both support general XML (and HTML) parsing, including XPath queries. The package xml2 is less fully featured, but more user friendly with respect to memory management, classes (e.g., XML node vs. node set vs. document), and namespaces. Of the two, only the XML supports de novo creation of XML nodes and documents. The XML2R (GitHub) package is a collection of convenient functions for coercing XML into data frames. An alternative to XML is selectr, which parses CSS3 Selectors and translates them to XPath 1.0 expressions. XML package is often used for parsing xml and html, but selectr translates CSS selectors to XPath, so can use the CSS selectors instead of XPath. The selectorgadget browser extension can be used to identify page elements. RHTMLForms reads HTML documents and obtains a description of each of the forms it contains, along with the different elements and hidden fields. scrapeR provides additional tools for scraping data from HTML and XML documents. htmltab extracts structured information from HTML tables, similar to XML::readHTMLTable of the XML package, but automatically expands row and column spans in the header and body cells, and users are given more control over the identification of header and body rows which will end up in the R table. JSON: There are three packages for reading and writing JSON: rjson, RJSONIO, and jsonlite. jsonlite includes a different parser from RJSONIO called yajl. We recommend using jsonlite. Check out the paper describing jsonlite by Jeroen Ooms http://arxiv.org/abs/1403.2805. tidyjson (GitHub) converts JSON into a data.frame. jqr provides bindings for the fast JSON library, jq. Tools for Working with URLs The httr::parse_url() function can be used to extract portions of a URL. The RCurl::URLencode() and utils::URLencode() functions can be used to encode character strings for use in URLs. utils::URLdecode() decodes back to the original strings. urltools (GitHub) can also handle URL encoding, decoding, parsing, and parameter extraction. The tldextract package extract top level domains and subdomains from a host name. It's a port of a Python library of the same name. iptools can facilitate working with IPv4 addresses, including for use in geolocation. urlshorteneR (GitHub) offers URL expansion and analysis for Bit.ly, Goo.gl, and is.gd. longurl uses the longurl.org API to provide similar functionality. gdns (not on CRAN) provides access to Google's secure HTTP-based DNS resolution service. Tools for Working with Scraped Webpage Contents Several packages can be used for parsing HTML documents. boilerpipeR provides generic extraction of main text content from HTML files; removal of ads, sidebars and headers using the boilerpipe Java library. RTidyHTML interfaces to the libtidy library for correcting HTML documents that are not well-formed. This library corrects common errors in HTML documents. W3CMarkupValidator provides an R Interface to W3C Markup Validation Services for validating HTML documents. For XML documents, the XMLSchema package provides facilities in R for reading XML schema documents and processing them to create definitions for R classes and functions for converting XML nodes to instances of those classes. It provides the framework for meta-computing with XML schema in R. xslt is a package providing an interface to the xmlwrapp an XML processing library that provides an XSLT engine for transforming XML data using a transform stylesheet. (It can be seen as a modern replacement for Sxslt, which is an interface to Dan Veillard's libxslt translator, and the SXalan package.) This may be useful for webscraping, as well as transforming XML markup into another human- or machine-readable format (e.g., HTML, JSON, plain text, etc.). SSOAP provides a client-side SOAP (Simple Object Access Protocol) mechanism. It aims to provide a high-level interface to invoke SOAP methods provided by a SOAP server. XMLRPC provides an implementation of XML-RPC, a relatively simple remote procedure call mechanism that uses HTTP and XML. This can be used for communicating between processes on a single machine or for accessing Web services from within R. Rcompression (not on CRAN): Interface to zlib and bzip2 libraries for performing in-memory compression and decompression in R. This is useful when receiving or sending contents to remote servers, e.g. Web services, HTTP requests via RCurl. tm.plugin.webmining: Extensible text retrieval framework for news feeds in XML (RSS, ATOM) and JSON formats. Currently, the following feeds are implemented: Google Blog Search, Google Finance, Google News, NYTimes Article Search, Reuters News Feed, Yahoo Finance and Yahoo Inplay. webshot uses PhantomJS to provide screenshots of web pages without a browser. It can be useful for testing websites (such as Shiny applications). Other Useful Packages and Functions Javascript: V8 (GitHub) is an R interface to Google's open source, high performance JavaScript engine. It can wrap Javascript libraries as well as NPM packages. The SpiderMonkey package provides another means of evaluating JavaScript code, creating JavaScript objects and calling JavaScript functions and methods from within R. This can work by embedding the JavaScript engine within an R session or by embedding R in an browser such as Firefox and being able to call R from JavaScript and call back to JavaScript from R. Email:: mailR is an interface to Apache Commons Email to send emails from within R. sendmailR provides a simple SMTP client. gmailr provides access the Google's gmail.com RESTful API. Miscellaneous: webutils (GitHub) contains various functions for developing web applications, including parsers for application/x-www-form-urlencoded as well as multipart/form-data. mime (GitHub) guesses the MIME type for a file from its extension. rsdmx (GitHub) provides tools to read data and metadata documents exchanged through the Statistical Data and Metadata Exchange (SDMX) framework. The package currently focuses on the SDMX XML standard format (SDMX-ML). robotstxt (not on CRAN) provides R6 classes for parsing and checking robots.txt files. Web and Server Frameworks DeployR Open is a server-based framework for integrating R into other applications via Web Services. The shiny package makes it easy to build interactive web applications with R. prairie (not on CRAN) is new, light weight web framework that uses magrittr-style syntax and is modeled after expressjs. rcloud (not on CRAN) provides an iPython notebook-style web-based R interface. The Rook web server interface contains the specification and convenience software for building and running Rook applications. The opencpu framework for embedded statistical computation and reproducible research exposes a web API interfacing R, LaTeX and Pandoc. This API is used for example to integrate statistical functionality into systems, share and execute scripts or reports on centralized servers, and build R based apps. Rserve and RSclient provide server and client functionality for TCP/IP or local socket interfaces. httpuv provides a low-level socket and protocol support for handling HTTP and WebSocket requests directly within R. Another related package, perhaps which httpuv replaces, is websockets. servr provides a simple HTTP server to serve files under a given directory based on httpuv. The WADL package provides tools to process Web Application Description Language (WADL) documents and to programmatically generate R functions to interface to the REST methods described in those WADL documents. (not on CRAN) The RDCOMServer provides a mechanism to export R objects as (D)COM objects in Windows. It can be used along with the RDCOMClient package which provides user-level access from R to other COM servers. (not on CRAN) rapporter.net provides an online environment (SaaS) to host and run rapport statistical report templates in the cloud. radiant (Archived on CRAN) is Shiny-based GUI for R that runs in a browser from a server or local machine. neocities wraps the API for the Neocities web hosting service. (not on CRAN) The Tiki Wiki CMS/Groupware framework has an R plugin (PluginR) to run R code from wiki pages, and use data from their own collected web databases (trackers). A demo: http://r.tiki.org. More info in a useR!2013 presentation. The MediaWiki has an extension (Extension:R) to run R code from wiki pages, and use uploaded data. Links to demo pages (in German) can be found at the category page for R scripts at MM-Stat. A mailing list is available: R-sig-mediawiki. whisker: Implementation of logicless templating based on Mustache in R. Mustache syntax is described in http://mustache.github.io/mustache.5.html CGIwithR (not on CRAN) allows one to use R scripts as CGI programs for generating dynamic Web content. HTML forms and other mechanisms to submit dynamic requests can be used to provide input to R scripts via the Web to create content that is determined within that R script. Several packages offer functionality for turning R code into a web API. jug is a simple API-builder web framework, built around httpuv. FastRWeb provides some basic infrastructure for this. plumber is a similar package not yet on CRAN (see http://plumber.trestletech.com/ for details). Web Services Cloud Computing and Storage Amazon Web Services is a popular, proprietary cloud service offering a suite of computing, storage, and infrastructure tools. aws.signature provides functionality for generating AWS API request signatures. Simple Storage Service (S3) is a commercial server that allows one to store content and retrieve it from any machine connected to the Internet. RAmazonS3 and s3mpi (not on CRAN) provides basic infrastructure for communicating with S3. AWS.tools (GitHub) interacts with S3 and EC2 using the AWS command line interface (an external system dependency). The CRAN version is archived. awsConnect (not on CRAN) is another package using the AWS Command Line Interface to control EC2 and S3, which is only available for Linux and Mac OS. Elastic Cloud Compute (EC2) is a cloud computing service. AWS.tools and awsConnect (not on CRAN) both use the AWS command line interface to control EC2. segue (not on CRAN) is another package for managing EC2 instances and S3 storage, which includes a parallel version of lapply() for the Elastic Map Reduce (EMR) engine called emrlapply(). It uses Hadoop Streaming on Amazon's EMR in order to get simple parallel computation. DBREST: RAmazonDBREST provides an interface to Amazon's Simple DB API. The cloudyr project, which is currently under active development on GitHub, aims to provide a unified interface to the full Amazon Web Services suite without the need for external system dependencies. Cloud Storage: boxr (GitHub) is a lightweight, high-level interface for the box.com API. rDrop2 (GitHub; not on CRAN) is a Dropbox interface that provides access to a full suite of file operations, including dir/copy/move/delete operations, account information (including quotas) and the ability to upload and download files from any Dropbox account. backblazer (GitHub) provides access to the Backblaze B2 storage API. Docker: analogsea is a general purpose client for the Digital Ocean v2 API. In addition, the package includes functions to install various R tools including base R, RStudio server, and more. There's an improving interface to interact with docker on your remote droplets via this package. rcrunch (not on CRAN) provides an interface to crunch.io storage and analytics. Document and Code Sharing Code Sharing: gistr (GitHub) works with GitHub gists (gist.github.com) from R, allowing you to create new gists, update gists with new files, rename files, delete files, get and delete gists, star and un-star gists, fork gists, open a gist in your default browser, get embed code for a gist, list gist commits, and get rate limit information when authenticated. git2r provides bindings to the git version control system and rgithub (not on CRAN) provides access to the GitHub.com API, both of which can facilitate code or data sharing via GitHub. gitlabr is a GitLab -specific client. Data archiving: dvn (GitHub) provides access to The Dataverse Network API. rfigshare (GitHub) connects with Figshare.com. dataone provides read/write access to data and metadata from the DataONE network of Member Node data repositories. Google Drive/Google Documents: driver (not on CRAN) is a thin client for the Google Drive API. The RGoogleDocs package is an example of using the RCurl and XML packages to quickly develop an interface to the Google Documents API. RGoogleStorage provides programmatic access to the Google Storage API. This allows R users to access and store data on Google's storage. We can upload and download content, create, list and delete folders/buckets, and set access control permissions on objects and buckets. Google Sheets: googlesheets (GitHub) can access private or public Google Sheets by title, key, or URL. Extract data or edit data. Create, delete, rename, copy, upload, or download spreadsheets and worksheets. gsheet (GitHub) can download Google Sheets using just the sharing link. Spreadsheets can be downloaded as a data frame, or as plain text to parse manually. imguR (GitHub) is a package to share plots using the image hosting service Imgur.com. knitr also has a function imgur_upload() to load images from literate programming documents. rscribd (not on CRAN): API client for publishing documents to Scribd. Data Analysis and Processing Services Crowdsourcing: Amazon Mechanical Turk is a paid crowdsourcing platform that can be used to semi-automate tasks that are not easily automated. MTurkR (GitHub)) provides access to the Amazon Mechanical Turk Requester API. microworkers (not on CRAN) can distribute tasks and retrieve results for the Microworkers.com platform. Geolocation/Geocoding: Several packages connect to geolocation/geocoding services. rgeolocate (GitHub) offers several online and offline tools. rydn (not on CRAN) is an interface to the Yahoo Developers network geolocation APIs, geocodeHERE (GitHub): Wrapper for Nokia's HERE geocoding API, and ipapi (GitHub) can be used to geolocate IPv4/6 addresses and/or domain names using the ip-api.com API. threewords connects to the What3Words API, which represents every 3-meter by 3-meter square on earth as a three-word phrase. opencage (GitHub) provides access to to the OpenCage geocoding service. geoparser (GitHub) interfaces with the Geoparser.io web service to identify place names from plain text. Image Processing: RoogleVision (not on CRAN) links to the Google Cloud Vision image recognition service. Machine Learning as a Service: Several packages provide access to cloud-based machine learning services. AzureML links with the Microsoft Azure machine learning service. bigml (GitHub) connects to BigML. ddeploy wraps the Duke Analytics model deployment API. indicoio (Archived on CRAN) connects to APIs at http://indico.io/, with wrappers for Positive/Negative Sentiment Analysis, Political Sentiment Analysis, Image Feature Extraction, Facial Emotion Recognition, Facial Feature Extraction, and Language Detection. clarifai (GitHub) is a Clarifai.com client that enables automated image description. rLTP (GitHub) accesses the ltp-cloud service. googlepredictionapi (not on CRAN): is an R client for the Google Prediction API, a suite of cloud machine learning tools. Finally, RDataCanvas (GitHub) can write a module for datacanvas.io, a big data analytics platform. yhatr lets you deploy, maintain, and invoke models via the Yhat REST API. datarobot works with Data Robot's predictive modeling platform. mscsweblm4r (GitHub) interfaces with the Microsoft Cognitive Services Web Language Model API. rosetteApi links to the Rosette text analysis API. Machine Translation: translate provides bindings for the Google Translate API v2 and translateR provides bindings for both Google and Microsoft translation APIs. mstranslator (GitHub) provides an R wrapper for the Microsoft Translator API. RYandexTranslate (GitHub) connects to Yandex Translate. transcribeR provides automated audio transcription via the HP IDOL service. Document Processing: abbyyR GitHub and captr (GitHub) connect to optical character recognition (OCR) APIs. pdftables (GitHub) uses the PDFTables.com webservice to extract tables from PDFs. Mapping: osmar provides infrastructure to access OpenStreetMap data from different sources to work with the data in common R manner and to convert data into available infrastructure provided by existing R packages (e.g., into sp and igraph objects). osrm (GitHub) provides shortest paths and travel times from OpenStreetMap. osmplotr (GitHub) extracts customizable map images from OpenStreetMap. RgoogleMaps serves two purposes: it provides a comfortable R interface to query the Google server for static maps, and use the map as a background image to overlay plots within R. R2GoogleMaps provides a mechanism to generate JavaScript code from R that displays data using Google Maps. RKMLDevice allows to create R graphics in Keyhole Markup Language (KML) format in a manner that allows them to be displayed on Google Earth (or Google Maps), and RKML provides users with high-level facilities to generate KML. plotKML can visualization spatial and spatio-temporal objects in Google Earth. plotGoogleMaps pls SP or SPT (STDIF,STFDF) data as an HTML map mashup over Google Maps. ggmap allows for the easy visualization of spatial data and models on top of Google Maps, OpenStreetMaps, Stamen Maps, or CloudMade Maps using ggplot2. leafletR: Allows you to display your spatial data on interactive web-maps using the open-source JavaScript library Leaflet. CartoDB (not on CRAN) provides an API interface to Cartodb.com. Online Surveys: Rmonkey (GitHub) provides programmatic access to Survey Monkey for creating simple surveys and retrieving survey results. qualtrics (not on CRAN) provides functions to interact with Qualtrics. WufooR (GitHub) can retrieve data from Wufoo.com forms. redcapAPI (GitHub) can provide access to data stored in a REDCap (Research Electronic Data CAPture) database, which is a web application for building and managing online surveys and databases developed at Vanderbilt University. formr facilitates use of the formr survey framework, which is built on openCPU. Rexperigen is a client for the Experigen experimental platform. Visualization: Plot.ly is a company that allows you to create visualizations in the web using R (and Python). They have an R package in development here (not on CRAN), as well as access to their services via a REST API. googleVis provides an interface between R and the Google chart tools. The RUbigraph package provides an R interface to a Ubigraph server for drawing interactive, dynamic graphs. You can add and remove vertices/nodes and edges in a graph and change their attributes/characteristics such as shape, color, size. Interactive, Javascript-enabled graphics are an increasingly useful output format for data analysis. ggvis makes it easy to describe interactive web graphics in R. It fuses the ideas of ggplot2 and shiny, rendering graphics on the web with Vega. d3Network provides tools for creating D3 JavaScript network, tree, dendrogram, and Sankey graphs from R. rCharts (not on CRAN) and clickme (not on CRAN) allow for interactive Javascript charts from R. animint (not on CRAN) allows an interactive animation to be defined using a list of ggplots with clickSelects and showSelected aesthetics, then exported to CSV/JSON/D3/JavaScript for viewing in a web browser. rVega (not on CRAN) is an R wrapper for Vega. Other : genderizeR (GitHub) uses the genderize.io API to predict gender from first names extracted from a text vector. rrefine can import to and export from the OpenRefine data cleaning service. Social Media Clients plusser has been designed to to facilitate the retrieval of Google+ profiles, pages and posts. It also provides search facilities. Currently a Google+ API key is required for accessing Google+ data. Rfacebook provides an interface to the Facebook API. fbRads can manage Facebook ads via the Facebook Marketing API. The Rflickr package provides an interface to the Flickr photo management and sharing application Web service. (not on CRAN) instaR (GitHub) is a client for the Instagram API. Rlinkedin (not on CRAN) is a client for the LinkedIn API. Auth is via OAuth. SocialMediaMineR is an analytic tool that returns information about the popularity of a URL on social media sites. tumblR (GitHub) is a client for the Tumblr API ( https://www.tumblr.com/docs/en/api/v2). Tumblr is a microblogging platform and social networking website https://www.tumblr.com/. Twitter: twitteR provides an interface to the Twitter web API. RTwitterAPI (not on CRAN) is yet another Twitter client. twitterreport (not on CRAN) focuses on report generation based on Twitter data. streamR provides a series of functions that allow users to access Twitter's filter, sample, and user streams, and to parse the output into data frames. OAuth authentication is supported. tweet2r is an alternative iplementation geared toward SQLite and postGIS databases. graphTweets produces a network graph from a data.frame of tweets. tweetscores (not on CRAN) implements a political ideology scaling measure for specified Twitter users. Web Analytics Services Google Trends: GTrendsR (not on CRAN) offers functions to perform and display Google Trends queries. Another GitHub package (rGtrends) is now deprecated, but supported a previous version of Google Trends and may still be useful for developers. RGoogleTrends provides another alternative. Google Analytics: GoogleAnalyticsR (GitHub), RGoogleAnalytics (GitHub), ganalytics (GitHub; not on CRAN), GAR (GitHub), and RGA provide functions for accessing and retrieving data from the Google Analytics APIs. The latter supports OAuth 2.0 authorization. RGA provides a shiny app to explore data. searchConsoleR (GitHub) links to the Google Search Console (formerly Webmaster Tools). Other services: RSiteCatalyst has functions for accessing the Adobe Analytics (Omniture SiteCatalyst) Reporting API. RAdwords (GitHub) is a package for loading Google Adwords data. anametrix is a bidirectional connector to the Anametrix API. webreadr (GitHub) can process various common forms of request log, including the Common and Combined Web Log formats and AWS logs. ApacheLogProcessor (GitHub) can process Apache Web Server log files. Other Web Services Fitness Apps: fitbitScraper (GitHub) and fitcoach retrieve Fitbit data. RGoogleFit provides similar functionality for Google Fit. Push Notifications: RPushbullet provides an easy-to-use interface for the Pushbullet service which provides fast and efficient notifications between computers, phones and tablets. pushoverr (GitHub) can sending push notifications to mobile devices (iOS and Android) and desktop using Pushover. Reference/bibliography/citation management: RefManageR imports and manage BibTeX and BibLaTeX references with RefManager. RMendeley: Implementation of the Mendeley API in R. Archived on CRAN. It's been archived on CRAN temporarily until it is updated for the new Mendeley API. rmetadata (not on CRAN) can get scholarly metadata from around the web. rorcid (GitHub) is a programmatic interface the Orcid.org API, which can be used for identifying scientific authors and their publications (e.g., by DOI). rplos is a programmatic interface to the Web Service methods provided by the Public Library of Science journals for search. rpubmed (not on CRAN) provides tools for extracting and processing Pubmed and Pubmed Central records. scholar provides functions to extract citation data from Google Scholar. Convenience functions are also provided for comparing multiple scholars and predicting future h-index values. pubmed.mineR is a package for text mining of PubMed Abstracts that supports fetching text and XML from PubMed. rdatacite (GitHub) connects to DataCite. oai (GitHub) and OAIHarvester harvest metadata using the Open Archives Initiative Protocol for Metadata Harvesting (OAI-PMH) standard. JSTORr (Not on CRAN) provides simple text mining of journal articles from JSTOR's Data for Research service. aRxiv (GitHub) is a client for the arXiv API, a repository of electronic preprints for computer science, mathematics, physics, quantitative biology, quantitative finance, and statistics. alm is a wrapper to the almetrics API platform developed by PLoS. Wikipedia: WikipediR (GitHub) is a wrapper for the MediaWiki API, aimed particularly at the Wikimedia 'production' wikis, such as Wikipedia. rwikidata and WikidataR (GitHub) can request data from Wikidata.org, the free knowledgebase. wikipediatrend (GitHub) provides access to Wikipedia page access statistics. WikiSocio can retrieve contributor lists and revision data. bigrquery (GitHub): An interface to Google's bigquery. colourlovers (GitHub) extracts colors and multi-color patterns from COLOURlovers, for use in creating R graphics color palettes. cymruservices queries Team Cymru web security services. datamart: Provides an S4 infrastructure for unified handling of internal datasets and web based data sources. Examples include dbpedia, eurostat and sourceforge. discgolf (GitHub) provides a client to interact with the API for the Discourse web forum platform. The API is for an installed instance of Discourse, not for the Discourse site itself. factualR: Thin wrapper for the Factual.com server API. GFusionTables (not on CRAN): An interface to Google Fusion Tables. Google Fusion Tables is a data management system in the cloud. This package provides functions to browse Fusion Tables catalog, retrieve data from Gusion Tables dtd storage to R and to upload data from R to Fusion Tables HIBPwned (not on CRAN) is a client for Have I Been Pwned. infochimps (GitHub; archived) is an R wrapper for the infochimps.com API services. internetarchive (not on CRAN): API client for internet archive metadata. jSonarR: Enables users to access MongoDB by running queries and returning their results in data.frames. jSonarR uses data processing and conversion capabilities in the jSonar Analytics Platform and the JSON Studio Gateway, to convert JSON to a tabular format. livechatR is a client for the LiveChat API. lucr performs currency conversions using Open Exchange Rates. mockaRoo (not on CRAN) uses the MockaRoo API to generate mock or fake data based on an input schema. randNames (GitHub) generates random names and personal identifying information using the https://randomapi.com/ API. Rbitcoin allows both public and private API calls to interact with Bitcoin. rbitcoinchartsapi is a package for the BitCoinCharts.com API. From their website: ""Bitcoincharts provides financial and technical data related to the Bitcoin network and this data can be accessed via a JSON application programming interface (API)."" RCryptsy (GitHub) wraps the API for the Cryptsy crypto-currency trading platform. Rblpapi (GitHub) is a client for Bloomberg Finance L.P. rerddap (GitHub; not on CRAN): A generic R client to interact with any ERDDAP instance, which is a special case of OPeNDAP ( https://en.wikipedia.org/wiki/OPeNDAP), or Open-source Project for a Network Data Access Protocol . Allows user to swap out the base URL to use any ERDDAP instance. ripplerestr provides an interface to the Ripple protocol for making financial transactions. restimizeapi provides an interface to trading website estimize.com. RForcecom: RForcecom provides a connection to Force.com and Salesforce.com. Rgoodreads (not on CRAN) interacts with Goodreads. RLastFM (archived on CRAN) is a package to interface to the last.fm API. Archived on CRAN. ROpenWeatherMap is a client for location-based weather data and forecasting from Open Weather Map. RSocrata access data for Socrata open data portals. soql is a pipe-oriented set of tools for constructing Socrata queries. RZabbix links with the Zabbix network monitoring service API. shopifyr: An interface to the API of the E-commerce service Shopify https://docs.shopify.com/api. slackr (GitHub) is a client for Slack.com messaging platform. SlideShaRe (not on CRAN) is a client for Slideshare. stackr (not on CRAN): An unofficial wrapper for the read-only features of the Stack Exchange API. telegram (GitHub) connects with the Telegram Bot API. tuber (not on CRAN): A YouTube API client. udapi (not on CRAN) connects to Urban Dictionary. yummlyr (GitHub) provides an interface to the Yummly recipe database. zendeskR: This package provides a wrapper for the Zendesk API. ZillowR is a client for the Zillow real estate service. CRAN packages: abbyyR alm anametrix ApacheLogProcessor aRxiv aws.signature AzureML backblazer bigml bigrquery boilerpipeR boxr captr clarifai colourlovers curl curlconverter cymruservices d3Network datamart datarobot ddeploy discgolf downloader dvn factualR FastRWeb fbRads fitbitScraper fitcoach GAR genderizeR geocodeHERE geoparser ggmap ggvis gistr git2r gitlabr gmailr GoogleAnalyticsR googlesheets googleVis graphTweets gsheet httpcache httping httpRequest httpuv httr (core) imguR instaR jqr jSonarR jsonlite (core) jug leafletR livechatR longurl lucr magrittr mailR mime mscsweblm4r MTurkR oai OAIHarvester opencage opencpu osmar osmplotr osrm pdftables plotGoogleMaps plotKML plusser pubmed.mineR pushoverr RAdwords randNames rapport Rbitcoin rbitcoinchartsapi Rblpapi RCryptsy RCurl (core) RDataCanvas rdatacite redcapAPI RefManageR repmis request restimizeapi Rexperigen Rfacebook rfigshare RForcecom RGA rgeolocate RGoogleAnalytics RGoogleFit RgoogleMaps rio rjson RJSONIO rLTP Rmonkey ROAuth Rook ROpenWeatherMap rorcid rosetteApi rplos RPushbullet rrefine RSclient rsdmx RSelenium Rserve RSiteCatalyst RSocrata rvest RYandexTranslate RZabbix scholar scrapeR searchConsoleR sendmailR servr shiny (core) shopifyr slackr SocialMediaMineR soql streamR telegram threewords tidyjson tm.plugin.webmining transcribeR translate translateR tumblR tweet2r twitteR urlshorteneR urltools V8 W3CMarkupValidator webreadr webshot webutils whisker WikidataR wikipediatrend WikipediR WikiSocio WufooR XML (core) xml2 XML2R yhatr yummlyr zendeskR Related links: Open Data TaskView Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/webservices"	"Information about how to use R and the world wide web together."	"true"
"Web Technologies and Services"	"shiny"	"https://github.com/rstudio/shiny"	"Easy interactive web applications with R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1803"	"249"	"1003"	"GitHub - rstudio/shiny: Easy interactive web applications with R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 249 Star 1,803 Fork 1,003 rstudio/shiny Code Issues 213 Pull requests 7 Wiki Pulse Graphs Easy interactive web applications with R http://shiny.rstudio.com 2,936 commits 32 branches 39 releases 28 contributors R 49.5% JavaScript 39.4% HTML 5.8% CSS 5.3% R JavaScript HTML CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bookmarkable-state bugfix/clear-select-choices feature/alerts feature/as_html feature/graph-domain feature/initialize-outputs feature/pool-scheduler feature/rmd-doc-template feature/shiny.browser gh-pages htmltools-refactor joe/bootstrap-3.3.5 joe/bugfix/blackberry joe/bugfix/chrome-unsafe-ports joe/bugfix/flexcol joe/bugfix/gadgets joe/bugfix/module-progress joe/bugfix/multiline-label joe/bugfix/respect-warn joe/bugfix/validation-error-behavior joe/destroy-old-outputs joe/doc-tweaks joe/error-stopApp joe/feature/bookmarkable-state joe/reactive-graph-layout joe/reactlog-late-2015 master patch/v0.12.1 progress-notification reactlog revert-1074-reconnect templates Nothing to show v0.13.2 v0.13.1 v0.13.0 v0.12.2 v0.12.1 v0.12.0 v0.11.1 v0.11 v0.10.2.2 v0.10.2.1 v0.10.2 v0.10.1 v0.10.0 v0.10.0-staticdocs v0.9.1 v0.9.0 v0.8.0 v0.7.0 v0.6.0 v0.5.0 v0.4.1 v0.4.0 v0.3.1 v0.3.0 v0.2.4 v0.2.1 v0.2.0 v0.1.14 v0.1.13 v0.1.12 v0.1.9 v0.1.8 v0.1.7 v0.1.6 v0.1.5 v0.1.4 v0.1.3 v0.1.2 rubyesque Nothing to show New pull request Latest commit a45b58d Jul 6, 2016 bborgesr committed on GitHub Merge pull request #1239 from rstudio/joe/bugfix/insert-ui-initialize … Fix insertUI bug. Closes #1220, #1231, #1232 Permalink Failed to load latest commit information. R moved `multiple` to 4th argument Jul 6, 2016 inst rebased with master Jul 6, 2016 man-roxygen throw error instead of warning in validateIcon(); updated documentation Mar 18, 2016 man moved `multiple` to 4th argument Jul 6, 2016 res Update documentation for renderXX Feb 14, 2013 smoketests More tests Nov 16, 2015 srcjs Input not being initialized with insertUI if beforeStart/afterEnd Jul 5, 2016 tests Fix tests May 6, 2016 tools Add modal dialogs Apr 5, 2016 .Rbuildignore Quick and dirty smoke test infrastructure Nov 16, 2015 .Rinstignore Fix Rmd build tooling Apr 3, 2014 .gitattributes Treat shiny.js as binary Apr 23, 2015 .gitignore verify that button icons are in the right format (not necessarily val… Mar 15, 2016 .travis.yml Set sudo to false explicitly to enable caching Feb 10, 2016 CONTRIBUTING.md Add CONTRIBUTING file Nov 18, 2014 DESCRIPTION Add ability to reset brush with session$resetBrush/Shiny.resetBrush May 25, 2016 LICENSE LICENSE typo Oct 12, 2015 NAMESPACE Merge remote-tracking branch 'origin/joe/feature/insert-UI' May 4, 2016 NEWS Update NEWS Jun 30, 2016 README.md Update README.md Sep 4, 2015 cran-comments.md Clear cran comments May 18, 2015 shiny.Rproj Use --run-donttest when checking package Jan 12, 2016 README.md Shiny Shiny is a new package from RStudio that makes it incredibly easy to build interactive web applications with R. For an introduction and examples, visit the Shiny Dev Center. Features Build useful web applications with only a few lines of code—no JavaScript required. Shiny applications are automatically ""live"" in the same way that spreadsheets are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser. Shiny user interfaces can be built entirely using R, or can be written directly in HTML, CSS, and JavaScript for more flexibility. Works in any R environment (Console R, Rgui for Windows or Mac, ESS, StatET, RStudio, etc.). Attractive default UI theme based on Bootstrap. A highly customizable slider widget with built-in support for animation. Pre-built output widgets for displaying plots, tables, and printed output of R objects. Fast bidirectional communication between the web browser and R using the httpuv package. Uses a reactive programming model that eliminates messy event handling code, so you can focus on the code that really matters. Develop and redistribute your own Shiny widgets that other developers can easily drop into their own applications (coming soon!). Installation To install the stable version from CRAN, simply run the following from an R console: install.packages(""shiny"") To install the latest development builds directly from GitHub, run this instead: if (!require(""devtools""))   install.packages(""devtools"") devtools::install_github(""rstudio/shiny"") Getting Started To learn more we highly recommend you check out the Shiny Tutorial. The tutorial explains the framework in-depth, walks you through building a simple application, and includes extensive annotated examples. We hope you enjoy using Shiny. If you have general questions about using Shiny, please use the Shiny mailing list. For bug reports, please use the issue tracker. Bootstrap 3 migration Shiny versions 0.10.2.2 and below used the Bootstrap 2 web framework. After 0.10.2.2, Shiny switched to Bootstrap 3. For most users, the upgrade should be seamless. However, if you have have customized your HTML-generating code to use features specific to Bootstrap 2, you may need to update your code to work with Bootstrap 3. If you do not wish to update your code at this time, you can use the shinybootstrap2 package for backward compatibility. If you prefer to install an older version of Shiny, you can do it using the devtools package: devtools::install_version(""shiny"", version = ""0.10.2.2"") Development notes The Javascript code in Shiny is minified using tools that run on Node.js. See the tools/ directory for more information. License The shiny package is licensed under the GPLv3. See these files in the inst directory for additional details: COPYING - shiny package license (GPLv3) NOTICE - Copyright notices for additional included software Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/shiny"	"Easy interactive web applications with R."	"true"
"Web Technologies and Services"	"RCurl"	"http://cran.r-project.org/web/packages/RCurl/index.html"	"General network (HTTP/FTP/...) client interface for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RCurl RCurl: General Network (HTTP/FTP/...) Client Interface for R A wrapper for 'libcurl' <http://curl.haxx.se/libcurl/> Provides functions to allow one to compose general HTTP requests and provides convenient functions to fetch URIs, get & post forms, etc. and process the results returned by the Web server. This provides a great deal of control over the HTTP/FTP/... connection and the form of the request while providing a higher-level interface than is available just using R socket connections. Additionally, the underlying implementation is robust and extensive, supporting FTP/FTPS/TFTP (uploads and downloads), SSL/HTTPS, telnet, dict, ldap, and also supports cookies, redirects, authentication, etc. Version: 1.95-4.8 Depends: R (≥ 3.0.0), methods, bitops Suggests: Rcompression, XML Published: 2016-03-01 Author: Duncan Temple Lang and the CRAN team Maintainer: Duncan Temple Lang <duncan at r-project.org> BugReports: NA License: BSD URL: http://www.omegahat.net/RCurl NeedsCompilation: yes SystemRequirements: GNU make, libcurl Materials: README In views: WebTechnologies CRAN checks: RCurl results Downloads: Reference manual: RCurl.pdf Package source: RCurl_1.95-4.8.tar.gz Windows binaries: r-devel: RCurl_1.95-4.8.zip, r-release: RCurl_1.95-4.8.zip, r-oldrel: RCurl_1.95-4.8.zip OS X Mavericks binaries: r-release: RCurl_1.95-4.8.tgz, r-oldrel: RCurl_1.95-4.8.tgz Old sources: RCurl archive Reverse dependencies: Reverse depends: aqr, brewdata, CHCN, couchDB, crn, factualR, fds, helsinki, hkex.api, jSonarR, LightningR, LSPFP, notifyR, OIdata, ONETr, osmar, psidR, pullword, pumilioR, R4CouchDB, rbiouml, rbitcoinchartsapi, RDSTK, restimizeapi, RGoogleFit, rHpcc, Rjpstatdb, Rlabkey, rLTP, RNaviCell, rneos, ROMIplot, ropensecretsapi, rPlant, RSelenium, RStars, Rtts, RYoudaoTranslate, scrapeR, shopifyr, sos4R, sotkanet, source.gist, SPARQL, streamR, support.CEs, SynergizeR, tibbrConnector, tumblR, VarfromPDB, VideoComparison, zendeskR Reverse imports: acs, AmostraBrasil, archivist, atsd, bigml, biomartr, blsAPI, Causata, clifro, creditr, dams, datamart, demography, dvn, easyVerification, Ecfun, fbRads, FinCal, finreportr, GetTDData, gfcanalysis, gmapsdistance, gProfileR, gtrendsR, GuardianR, h2o, hddtools, HierO, HMDHFDplus, interAdapt, IRISMustangMetrics, IRISSeismic, MODISTools, nhlscrapr, Ohmage, OIdata, OpasnetUtils, osrm, OutbreakTools, paleobioDB, phylosignal, pinnacle.API, plusser, polidata, pubmed.mineR, PubMedWordcloud, qdap, qdapTools, RAdwords, rainfreq, rAltmetric, rAvis, rbefdata, RbioRXN, Rbitcoin, rClinicalCodes, RCriteo, RCryptsy, rdatamarket, rdefra, rDVR, rechonest, RefManageR, Reol, retrosheet, reutils, Rexperigen, rglobi, rite, RKlout, RLumShiny, RMixpanel, rNOMADS, rnrfa, ROAuth, ROpenWeatherMap, RPresto, RProtoBuf, rpubchem, rsconnect, rsdmx, RSmartlyIO, rsnps, RStripe, rtematres, rusda, RYandexTranslate, rYoutheria, scidb, seeclickfixr, SocialMediaLab, SocialMediaMineR, sophisthse, spatialEco, stplanr, stringgaussnet, swirl, Thinknum, tm.plugin.webmining, TR8, translate, translateR, treebase, ukgasapi, umx, uptimeRobot, warbleR, webchem, WikiSocio, XML2R, ZillowR, zoon Reverse suggests: bio3d, boilerpipeR, cycleRtools, d3Network, Ecdat, EFDR, exams, fbRanks, fda, GSIF, hsdar, knitr, markdown, mlr, mosaic, plotKML, rDNAse, rstan, rts, sorvi, switchr, sysfonts, trajectories, XML"	"null"	"null"	"General network (HTTP/FTP/...) client interface for R."	"true"
"Web Technologies and Services"	"httr"	"https://github.com/hadley/httr"	"User-friendly RCurl wrapper."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"532"	"69"	"1462"	"GitHub - hadley/httr: httr: a friendly http package for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 69 Star 532 Fork 1,462 hadley/httr Code Issues 8 Pull requests 2 Pulse Graphs httr: a friendly http package for R 857 commits 7 branches 12 releases 36 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags curl httr-0.2.1 master oauth retry safer-cache sign Nothing to show v1.2.1 v1.2.0 v1.1.0 v1.0.0 v0.6.1 v0.6 v0.5 v0.4 v0.3 httr_0.1 httr-0.2 httr-0.1.1 Nothing to show New pull request Latest commit 71b9ead Jul 3, 2016 hadley Use development version Permalink Failed to load latest commit information. R Check if cache is empty Jun 16, 2016 demo Add reddit oauth2.0 demo. May 20, 2016 man Update parsing functions Jun 14, 2016 revdep Run revdeps and update cran comments Jun 9, 2016 tests Add option for raw body encoding May 22, 2016 vignettes Reduce number of API calls in vignette Jun 14, 2016 .Rbuildignore Final submission tweaks Jan 27, 2016 .gitignore Add changes from ROpenSci Apr 2, 2016 .travis.yml Update travis. Jun 14, 2016 DESCRIPTION Use development version Jul 3, 2016 LICENSE Update copyright Aug 30, 2014 NAMESPACE Implement RETRY() May 25, 2016 NEWS.md Use development version Jul 3, 2016 README.md Fix another url Jun 9, 2016 cran-comments.md Point release Jul 3, 2016 httr.Rproj Std proj opts Feb 26, 2014 README.md httr The aim of httr is to provide a wrapper for the curl package, customised to the demands of modern web APIs. Key features: Functions for the most important http verbs: GET(), HEAD(), PATCH(), PUT(), DELETE() and POST(). Automatic connection sharing across requests to the same website (by default, curl handles are managed automatically), cookies are maintained across requests, and a up-to-date root-level SSL certificate store is used. Requests return a standard reponse object that captures the http status line, headers and body, along with other useful information. Response content is available with content() as a raw vector (as = ""raw""), a character vector (as = ""text""), or parsed into an R object (as = ""parsed""), currently for html, xml, json, png and jpeg. You can convert http errors into R errors with stop_for_status(). Config functions make it easier to modify the request in common ways: set_cookies(), add_headers(), authenticate(), use_proxy(), verbose(), timeout(), content_type(), accept(), progress(). Support for OAuth 1.0 and 2.0 with oauth1.0_token() and oauth2.0_token(). The demo directory has eight OAuth demos: four for 1.0 (twitter, vimeo, withings and yahoo) and four for 2.0 (facebook, github, google, linkedin). OAuth credentials are automatically cached within a project. httr wouldn't be possible without the hard work of the authors of curl and libcurl. Thanks! httr is inspired by http libraries in other languages, such as Resty, Requests and httparty. Installation To get the current released version from CRAN: install.packages(""httr"") To get the current development version from github: # install.packages(""devtools"") devtools::install_github(""hadley/httr"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/httr"	"User-friendly RCurl wrapper."	"true"
"Web Technologies and Services"	"httpuv"	"https://github.com/rstudio/httpuv"	"HTTP and WebSocket server library."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"62"	"18"	"30"	"GitHub - rstudio/httpuv Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 18 Star 62 Fork 30 rstudio/httpuv Code Issues 17 Pull requests 9 Pulse Graphs No description or website provided. 172 commits 9 branches 8 releases 5 contributors C 90.0% C++ 6.3% R 1.3% Python 1.0% Makefile 0.8% Shell 0.3% Other 0.3% C C++ R Python Makefile Shell Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags daemonize libuv-0.10.27 libuv-0.10.29 libuv-1.8.0 master playground require_latest_rcpp subtree win-fixup Nothing to show v/1/3/3 v/1/2/3 v/1/2/2 v/1/2/0 v/1/1/0 v/1/0/6.1 v/1/0/6 v/1/0/5 Nothing to show New pull request Latest commit 6aeca57 Aug 3, 2015 jcheng5 Import utils::packageVersion Permalink Failed to load latest commit information. R Import utils::packageVersion Aug 3, 2015 demo Fix warnings Mar 24, 2014 man Import utils::packageVersion Aug 3, 2015 src Merge pull request #48 from dernst/master Jul 16, 2015 .Rbuildignore Update ignores, build number Feb 27, 2013 .gitignore Ignore Qt Creator project files Sep 21, 2013 .gitmodules Remove submodules; will replace with subtrees Aug 12, 2013 DESCRIPTION Import utils::packageVersion Aug 3, 2015 LICENSE Change license field per Kurt Hornik's suggestion May 16, 2013 NAMESPACE Import utils::packageVersion Aug 3, 2015 NEWS Update metadata Aug 3, 2015 README.md add the instruction for installing from CRAN Oct 22, 2014 httpuv.Rproj Cleanup; license changed to GPLv3 Feb 26, 2013 README.md httpuv: HTTP and WebSocket server library for R httpuv provides low-level socket and protocol support for handling HTTP and WebSocket requests directly from within R. It is primarily intended as a building block for other packages, rather than making it particularly easy to create complete web applications using httpuv alone. httpuv is built on top of the libuv and http-parser C libraries, both of which were developed by Joyent, Inc. Installing You can install the stable version from CRAN, or the development version using devtools: # install from CRAN install.packages(""httpuv"")  # or if you want to test the development version here if (!require(""devtools"")) install.packages(""devtools"") devtools::install_github(""rstudio/httpuv"") Since httpuv contains C code, you'll need to make sure you're set up to install packages. Follow the instructions at http://www.rstudio.com/ide/docs/packages/prerequisites © 2013-2014 RStudio, Inc. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/httpuv"	"HTTP and WebSocket server library."	"true"
"Web Technologies and Services"	"XML"	"http://cran.r-project.org/web/packages/XML/index.html"	"Tools for parsing and generating XML within R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package XML XML: Tools for Parsing and Generating XML Within R and S-Plus Many approaches for both reading and creating XML (and HTML) documents (including DTDs), both local and accessible via HTTP or FTP. Also offers access to an 'XPath' ""interpreter"". Version: 3.98-1.4 Depends: R (≥ 2.13.0), methods, utils Suggests: bitops, RCurl Published: 2016-03-01 Author: Duncan Temple Lang and the CRAN Team Maintainer: Duncan Temple Lang <duncan at r-project.org> BugReports: NA License: BSD_2_clause + file LICENSE Copyright: see file COPYRIGHTS URL: http://www.omegahat.net/RSXML NeedsCompilation: yes SystemRequirements: libxml2 (>= 2.6.3) Materials: README In views: WebTechnologies CRAN checks: XML results Downloads: Reference manual: XML.pdf Package source: XML_3.98-1.4.tar.gz Windows binaries: r-devel: XML_3.98-1.4.zip, r-release: XML_3.98-1.4.zip, r-oldrel: XML_3.98-1.4.zip OS X Mavericks binaries: r-release: XML_3.98-1.4.tgz, r-oldrel: XML_3.98-1.4.tgz Old sources: XML archive Reverse dependencies: Reverse depends: acs, aidar, apsimr, biorxivr, brewdata, compareODM, easyPubMed, EcoHydRology, EcoTroph, EIAdata, ESEA, gnumeric, grImport, hkex.api, iDynoR, ips, mseapca, mtk, MUCflights, odfWeave, ONETr, osmar, pMineR, pmml, pumilioR, rFDSN, RFinanceYJ, rgexf, rgrass7, rHpcc, Rjpstatdb, Rlinkedin, rneos, RSDA, RSelenium, RXMCDA, scrapeR, sos4R, SPARQL, spgrass6, StatDataML, SubpathwayGMir, support.CEs, symbolicDA, VarfromPDB, weatherr, WikipediaR, XML2R Reverse imports: abbyyR, archiDART, aRxiv, aws.alexa, BIGDAWG, biomartr, BoolNet, causaleffect, Causata, chillR, clifro, colourlovers, comato, coreNLP, creditr, cricketr, DataClean, datamart, dataone, datapack, dataRetrieval, DDIwR, dplR, dvn, Ecfun, edeaR, edgar, geoknife, gmapsdistance, Gmisc, googlePublicData, graphicsQC, gridSVG, hddtools, HierO, hive, HMDHFDplus, hoardeR, htmltab, IncucyteDRC, inegiR, IRISMustangMetrics, IRISSeismic, letsR, Luminescence, MALDIquantForeign, megaptera, meteoForecast, miniCRAN, mldr, mlxR, MODISTools, mtconnectR, MTurkR, MTurkRGUI, myepisodes, OAIHarvester, OData, ODMconverter, OpenRepGrid, optiRum, osmplotr, PBSmodelling, pdfetch, pinnacle.API, plotKML, PreKnitPostHTMLRender, primerTree, pubmed.mineR, PubMedWordcloud, pvsR, qdap, qdapTools, rAvis, rbefdata, rbhl, rClinicalCodes, rclinicaltrials, RCriteo, rdefra, RDML, rdomains, readMLData, readMzXmlData, RefManageR, rentrez, Reol, retrosheet, reutils, RevEcoR, rfigshare, rfml, RForcecom, RKEEL, rlist, RNeXML, rnoaa, rNOMADS, rpubchem, rsdmx, rsml, rsnps, RStoolbox, rtematres, rusda, Ryacas, Sabermetrics, sejmRP, selectr, semPlot, SetRank, soilDB, solr, solrium, sophisthse, sss, stressr, svIDE, SWMPr, TCGA2STAT, TFX, timetree, tmap, tmod, tm.plugin.europresse, tm.plugin.factiva, tm.plugin.lexisnexis, tm.plugin.webmining, TR8, trackeR, treebase, ukgasapi, ustyc, vegdata, waterData, WaterML, WikiSocio, WMCapacity, ZillowR Reverse suggests: arules, bio3d, bReeze, ctv, dcemriS4, diseasemapping, dismo, Ecdat, ecospat, fbRanks, FinancialInstrument, frbs, gemtc, GSIF, HelpersMG, htmlTable, icd9, installr, io, knitr, kulife, logging, mcr, mlr, Mobilize, nat, Ohmage, oro.nifti, pacman, partykit, plumber, quanteda, quantmod, R2SWF, randomForestSRC, rattle, RCurl, Renext, rgeos, RGraphics, RObsDat, rplos, RSurvey, RUnit, semPLS, spartan, SubpathwayLNCE, svgPanZoom, svUnit, TCGAretriever, tidytext, tm, tm.plugin.dc, topicmodels"	"null"	"null"	"Tools for parsing and generating XML within R."	"true"
"Web Technologies and Services"	"rvest"	"https://github.com/hadley/rvest"	"Simple web scraping for R, using CSSSelect or XPath syntax."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"604"	"67"	"163"	"GitHub - hadley/rvest: Simple web scraping for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 67 Star 604 Fork 163 hadley/rvest Code Issues 16 Pull requests 4 Pulse Graphs Simple web scraping for R 229 commits 1 branch 5 releases Fetching contributors R 99.5% HTML 0.5% R HTML Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.3.2 v0.3.1 v0.3.0 v0.2.0 v0.1.0 Nothing to show New pull request Latest commit 9a51a5d Jun 17, 2016 hadley Use development version Permalink Failed to load latest commit information. R Fix session navigation Jun 16, 2016 demo Use unicode escape in demo Jun 15, 2016 inst/html-ex Replace encoding example with static file Jun 15, 2016 man Fix session navigation Jun 16, 2016 revdep Check revdeps Jun 16, 2016 tests Style tweaks Dec 12, 2015 vignettes fix typo ""selector"" -> ""selected"" Nov 20, 2015 .Rbuildignore NEWS can now go on CRAN Jun 16, 2016 .gitignore Initial commit Jul 19, 2014 .travis.yml Test on all R versions Jun 15, 2016 DESCRIPTION Use development version Jun 17, 2016 NAMESPACE Update roxygen Oct 30, 2015 NEWS.md Use development version Jun 17, 2016 README.Rmd Fix missing url & re-knit readme Jun 16, 2016 README.md Fix missing url & re-knit readme Jun 16, 2016 codecov.yml Update travis and codecov Jun 15, 2016 cran-comments.md Note about SSL url Jun 16, 2016 rvest.Rproj Rename to rvest Jul 23, 2014 README.md rvest rvest helps you scrape information from web pages. It is designed to work with magrittr to make it easy to express common web scraping tasks, inspired by libraries like beautiful soup. library(rvest) lego_movie <- read_html(""http://www.imdb.com/title/tt1490017/"")  rating <- lego_movie %>%    html_nodes(""strong span"") %>%   html_text() %>%   as.numeric() rating #> [1] 7.8  cast <- lego_movie %>%   html_nodes(""#titleCast .itemprop span"") %>%   html_text() cast #>  [1] ""Will Arnett""     ""Elizabeth Banks"" ""Craig Berry""     #>  [4] ""Alison Brie""     ""David Burrows""   ""Anthony Daniels"" #>  [7] ""Charlie Day""     ""Amanda Farinos""  ""Keith Ferguson""  #> [10] ""Will Ferrell""    ""Will Forte""      ""Dave Franco""     #> [13] ""Morgan Freeman""  ""Todd Hansen""     ""Jonah Hill""  poster <- lego_movie %>%   html_nodes("".poster img"") %>%   html_attr(""src"") poster #> [1] ""http://ia.media-imdb.com/images/M/MV5BMTg4MDk1ODExN15BMl5BanBnXkFtZTgwNzIyNjg3MDE@._V1_UX182_CR0,0,182,268_AL_.jpg"" Overview The most important functions in rvest are: Create an html document from a url, a file on disk or a string containing html with read_html(). Select parts of a document using css selectors: html_nodes(doc, ""table td"") (or if you've a glutton for punishment, use xpath selectors with html_nodes(doc, xpath = ""//table//td"")). If you haven't heard of selectorgadget, make sure to read vignette(""selectorgadget"") to learn about it. Extract components with html_tag() (the name of the tag), html_text() (all text inside the tag), html_attr() (contents of a single attribute) and html_attrs() (all attributes). (You can also use rvest with XML files: parse with xml(), then extract components using xml_node(), xml_attr(), xml_attrs(), xml_text() and xml_tag().) Parse tables into data frames with html_table(). Extract, modify and submit forms with html_form(), set_values() and submit_form(). Detect and repair encoding problems with guess_encoding() and repair_encoding(). Navigate around a website as if you're in a browser with html_session(), jump_to(), follow_link(), back(), forward(), submit_form() and so on. (This is still a work in progress, so I'd love your feedback.) To see examples of these function in use, check out the demos. Installation Install the release version from CRAN: install.packages(""rvest"") Or the development version from github # install.packages(""devtools"") devtools::install_github(""hadley/rvest"") Inspirations Python: Robobrowser, beautiful soup. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/rvest"	"Simple web scraping for R, using CSSSelect or XPath syntax."	"true"
"Web Technologies and Services"	"OpenCPU"	"https://www.opencpu.org/"	"HTTP API for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"268"	"47"	"61"	"GitHub - jeroenooms/opencpu: OpenCPU system for embedded scientific computation and reproducible research Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 47 Star 268 Fork 61 jeroenooms/opencpu Code Issues 67 Pull requests 2 Wiki Pulse Graphs OpenCPU system for embedded scientific computation and reproducible research http://opencpu.org 591 commits 1 branch 14 releases Fetching contributors R 93.1% HTML 3.4% JavaScript 2.1% CSS 1.1% Makefile 0.3% R HTML JavaScript CSS Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v1.5.6 v1.5.4 v1.4.6 v1.4.5 v1.4.3 v1.4.1 v1.2.3 v1.2.2 v1.2.1 v1.2.0 v1.0.7 v1.0.4 v1.0.1 1.0 Nothing to show New pull request Latest commit d61e1c0 Jun 15, 2016 jeroenooms Bump Permalink Failed to load latest commit information. R Fix /html manual page May 26, 2016 inst Add static vignette Mar 8, 2016 man Remove system imports Apr 29, 2016 teststuff Fix for JSON payload Jun 17, 2014 vignettes Add static vignette Mar 8, 2016 .Rbuildignore CI and readme Apr 20, 2016 .gitignore stealing travis from yihui Sep 25, 2013 .travis.yml Remove system imports Apr 29, 2016 DESCRIPTION Bump Jun 15, 2016 LICENSE Update LICENSE Apr 29, 2016 Makefile adding travis from yihui Sep 25, 2013 NAMESPACE Remove system imports Apr 29, 2016 NEWS Bump May 26, 2016 README.md Update readme Apr 29, 2016 appveyor.yml Fix Apr 20, 2016 opencpu.Rproj Lazy load imports Apr 29, 2016 sample.travis.yml update travis CI Dec 13, 2013 README.md opencpu A System for Embedded Scientific Computing and Reproducible Research with R The OpenCPU system exposes an http API for embedded scientific computing with R. The server can run either as a single-user development server within the interactive R session, or as a multi-user linux stack based on rApache and NGINX. The current R package implements the core of the system. When loaded in R, it automatically initiates the single-user server and displays the web address in the console. The OpenCPU website has more detailed API documentation. Documentation Official API documentation Paper: Towards a Universal Interface for Scientific Computing through Separation of Concerns Example apps JavaScript client: opencpu.js Server manual: PDF Cloud Server To install the cloud server in Ubuntu 14.04 or Ubuntu 16.04 #requires ubuntu 14.04 (Trusty) or 16.04 (Xenial) sudo add-apt-repository -y ppa:opencpu/opencpu-1.5 sudo apt-get update  sudo apt-get upgrade  #install opencpu server sudo apt-get install -y opencpu  #optional sudo apt-get install -y rstudio-server See the opencpu website for details how to install on other platforms. Local Development server The single-user development server will automatically start when the package is loaded in R: > library(opencpu) Initiating OpenCPU server... Using config: /Users/jeroen/.opencpu.conf OpenCPU started. [httpuv] http://localhost:7722/ocpu OpenCPU single-user server ready. Use opencpu$browse() to open the testing page in a browser. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jeroenooms/opencpu"	"HTTP API for R."	"true"
"Web Technologies and Services"	"Rfacebook"	"https://github.com/pablobarbera/Rfacebook"	"Access to Facebook API via R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"139"	"48"	"133"	"GitHub - pablobarbera/Rfacebook: Dev version of Rfacebook package: Access to Facebook API via R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 48 Star 139 Fork 133 pablobarbera/Rfacebook Code Issues 5 Pull requests 0 Pulse Graphs Dev version of Rfacebook package: Access to Facebook API via R http://cran.r-project.org/web/packages/Rfacebook 187 commits 1 branch 1 release 9 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.5 Nothing to show New pull request Latest commit 50ea5cc Jul 12, 2016 pablobarbera version bump: v0.6.7 Permalink Failed to load latest commit information. Rfacebook version bump: v0.6.7 Jul 12, 2016 images updated readme Nov 26, 2013 test added getInsights unit test Apr 30, 2015 .gitignore unit tests Dec 26, 2014 README.md version bump Jul 11, 2016 README.md Rfacebook: Access to Facebook API via R This package provides a series of functions that allow R users to access Facebook's API to get information about public pages, groups, and posts, as well as some of the authenticated user's private data. Current CRAN release is 0.6.3. To install the most updated version (0.6.6) from GitHub using devtools, type: library(devtools) install_github(""pablobarbera/Rfacebook/Rfacebook"") Click here to read the documentation. Installation and authentication Rfacebook can be installed directly from CRAN, but the most updated version will always be on GitHub. The code below shows how to install from both sources. install.packages(""Rfacebook"") # from CRAN library(devtools) install_github(""pablobarbera/Rfacebook/Rfacebook"") # from GitHub  Most API requests require the use of an access token. There are two ways of making authenticated requests with Rfacebook. One option is to generate a temporary token on the Graph API Explorer. Then just copy and paste the code into the R console and save it as a string vector to be passed as an argument to any Rfacebook function, as I show below. However, note that this access token will only be valid for two hours. It is possible to generate a 'long-lived' token (valid for two months) using the fbOAuth function, but the process is a bit more complicated. For a step-by-step tutorial, check this fantastic blog post by JulianHi. # token generated here: https://developers.facebook.com/tools/explorer  token <- 'XXXXXXXX' me <- getUsers(""me"", token, private_info=TRUE) me$name # my name # [1] ""Pablo Barberá"" me$hometown # my hometown # [1] ""Cáceres, Spain""  The example above shows how to retrieve information about a Facebook user. Note that this can be applied to obtain information about any user (or vector of users) with public profiles -- that is, pages. Both user screen names or IDs can be used as arguments, e.g.: getUsers(c(""barackobama"", ""donaldtrump""), token)  This function cannot be used to obtain profile information for users with private profiles, with the exception of those profiles who are using the application created by the authenticated user. When using a temporary token, only the information of profiles who have ever created a temporary token in the authenticated user's network of friends will be returned. Analyzing your network of friends The function getFriends allows the user to capture information about their Facebook friends, as long as they are using the application created to authenticate with the API. Since user IDs are assigned in consecutive order, it's possible to find out which of our friends was the first one to open a Facebook account. my_friends <- getFriends(token, simplify = TRUE) head(my_friends$id, n = 1) # get lowest user ID  To access additional information about a list of friends using the token application, you can use the getUsers function, which will return a data frame with users' Facebook data. Some of the variables that are available for all users are: gender, language, and country. It is also possible to obtain relationship status, hometown, birthday, and location for our friends if we set private_info=TRUE. (Note that language and country are extracted from the locale codes.) my_friends_info <- getUsers(my_friends$id, token, private_info = TRUE) table(my_friends_info$gender)  # gender table(substr(my_friends_info$locale, 1, 2))  # language table(substr(my_friends_info$locale, 4, 5))  # country table(my_friends_info$relationship_status)  # relationship status Finally, the function getNetwork extracts a list of all the mutual friendships among the friends using the application with which the token was created. This list can be then used to analyze and visualize a Facebook ego network. The first step is to use the getNetwork function. If the format option is set equal to edgelist, it will return a list of all the edges of that network. If format=adj.matrix, then it will return an adjacency matrix of dimensions (n x n), with n being the number of friends, and 0 or 1 indicating whether the user in row 'i' is also friends with user in column 'j'. mat <- getNetwork(token, format = ""adj.matrix"") dim(mat) # dimension of matrix This adjacency matrix can then be converted into an igraph object, which facilitates the task of computing measures of centrality, discovering communities, or visualizing the structure of the network. As an illustration, the plot below displays my Facebook ego network, where the colors represent clusters discovered with a community detection algorithm, which clearly overlap with membership in offline communities. This was one of the examples from my workshop on data visualization with R and ggplot2. The code to replicate it with your own Facebook data is available here. David Smith has also posted code to generate a similar network plot. Note that since version 2.0 of the Graph API, only the friends using the application with which the authenticated token was created are returned by this application. Old versions of the API are no longer available. Searching public Facebook posts Prior to version 2.0 of the Graph API, it was possible to collect public Facebook posts mentioning specific keywords, using the searchFacebook function. This option is no longer available through the public API. Analyzing data from a Facebook page Facebook pages are probably the best source of information about how individuals use this social networking site, since all posts, likes, and comments can be collected combining the getPage and getPost functions. For example, assume that we're interested in learning about how the Facebook page Humans of New York has become popular, and what type of audience it has. The first step would be to retrieve a data frame with information about all of its posts using the code below. To make sure I collect every single post, I set n to a very high number, and the function will stop automatically when it reaches the total number of available posts (3,674). page <- getPage(""humansofnewyork"", token, n = 5000) page[which.max(page$likes_count), ] ##              from_id          from_name ## 1915 102099916530784 Humans of New York                message ## 1915 Today I met an NYU student named Stella.  I took a photo of her.  (...) ##                  created_time  type ## 1915 2012-10-19T00:27:36+0000 photo ##                                                                                                                            link ## 1915 https://www.facebook.com/photo.php?fbid=375691212504985&set=a.102107073196735.4429.102099916530784&type=1&relevant_count=1 ##                                   id likes_count comments_count ## 1915 102099916530784_375691225838317      894583         117337 ##      shares_count ## 1915        60528 The most popular post ever received almost 900,000 likes and 120,000 comments, and was shared over 60,000 times. As we can see, the variables returned for each post are the same as when we search for Facebook posts: information about the content of the post, its author, and its popularity and reach. Using this data frame, it is relatively straightforward to visualize how the popularity of Humans of New York has grown exponentially over time. The code below illustrates how to aggregate the metrics by month in order to compute the median count of likes/comments/shares per post: for example, in November 2013 the average post received around 40,000 likes. ## convert Facebook date format to R date format format.facebook.date <- function(datestring) {     date <- as.POSIXct(datestring, format = ""%Y-%m-%dT%H:%M:%S+0000"", tz = ""GMT"") } ## aggregate metric counts over month aggregate.metric <- function(metric) {     m <- aggregate(page[[paste0(metric, ""_count"")]], list(month = page$month),          mean)     m$month <- as.Date(paste0(m$month, ""-15""))     m$metric <- metric     return(m) } # create data frame with average metric counts per month page$datetime <- format.facebook.date(page$created_time) page$month <- format(page$datetime, ""%Y-%m"") df.list <- lapply(c(""likes"", ""comments"", ""shares""), aggregate.metric) df <- do.call(rbind, df.list) # visualize evolution in metric library(ggplot2) library(scales) ggplot(df, aes(x = month, y = x, group = metric)) + geom_line(aes(color = metric)) +      scale_x_date(breaks = ""years"", labels = date_format(""%Y"")) + scale_y_log10(""Average count per post"",      breaks = c(10, 100, 1000, 10000, 50000)) + theme_bw() + theme(axis.title.x = element_blank()) It is also possible to subset posts by date. For example, imagine we want to get only posts posted during 2015: page <- getPage(""humansofnewyork"", token, n = 5000, since='2015/01/01', until='2015/12/31') To retrieve more information about each individual post, you can use the getPost function, which will return the same variables as above, as well as a list of comments and likes. Continuing with my example, the code below shows how to collect a list of 1,000 users who liked the most recent post, for which we will also gather information in order to analyze the audience of this page in terms of gender, language, and country. post_id <- head(page$id, n = 1)  ## ID of most recent post post <- getPost(post_id, token, n = 1000, likes = TRUE, comments = FALSE) Analyzing data from a Facebook group Just like public Facebook pages, the data from public groups can also be easily downloaded with the getGroup function. Note that this will only work for groups that the authenticated user is a member of. group <- getGroup(""150048245063649"", token, n=50) Extracting personal information Rfacebook also allows to read personal information about the authenticated user, such as the list of likes and the content from the Newsfeed. Private information about the user's friends is no longer available through the API. getLikes('me', token)[1,] ## id           names ## 1 687958677914631 FiveThirtyEight ## website ## 1 http://www.fivethirtyeight.com/ getNewsfeed(token, n=1) ## 1 51191684997 Rob DenBleyker  <NA>    <NA> ##                                                                    message ## 1 Sorry for the late comic, it's up now!\n\nhttp://explosm.net/comics/3512/ ##               created_time type                            link ## 1 2014-04-02T12:38:46+0000 link http://explosm.net/comics/3512/ ##                              id likes_count comments_count   shares_count ## 1 51191684997_10152084439949998        6942            110            497 Executing other API calls To facilitate making API queries not implemented in the current version of the package, I have added the callAPI function, which will return an R list with the result of the query. A trivial example: callAPI(""https://graph.facebook.com/v2.0/barackobama?fields=id"", token) Page insights Rfacebook provides some limited access to the insights features, available admin accounts of public pages. See the documentation of getInsights for more information. Updating your Facebook status from R Finally, yes: updateStatus(""You can also update your Facebook status from R"", token) ## Success! Link to status update: ## http://www.facebook.com/557698085_10152090718708086 However, to make this work you will need to get a long-lived OAuth token first, setting private_info=TRUE in the fbOAUth function. Frequently Asked Questions How can I search public Facebook posts? Can I get any information from users' private profiles? How can I extract my entire network of friends? All these features used to be available through the API, but unfortunately that's not the case anymore. There's no fix to Rfacebook that could bring back these features. I get the following error when I run getUsers: username is deprecated for versions v2.0 and higher This is related to the previous question. It is no longer possible to query users by their user names. If the user is a public page, try with the page ID number. For any other questions, feature requests, or bugs, please open an issue in this repository. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/pablobarbera/Rfacebook"	"Access to Facebook API via R."	"true"
"Web Technologies and Services"	"RSiteCatalyst"	"https://github.com/randyzwitch/RSiteCatalyst"	"R client library for the Adobe Analytics."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"77"	"26"	"34"	"GitHub - randyzwitch/RSiteCatalyst: R package to access Adobe Analytics Reporting API Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 26 Star 77 Fork 34 randyzwitch/RSiteCatalyst Code Issues 3 Pull requests 0 Pulse Graphs R package to access Adobe Analytics Reporting API 401 commits 1 branch 0 releases 7 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit bcc35ac Jun 21, 2016 randyzwitch v1.4.9 to CRAN Permalink Failed to load latest commit information. R v1.4.9 to CRAN Jun 21, 2016 man v1.4.9 to CRAN Jun 22, 2016 tests Fix broken test, update version num Jun 9, 2016 .Rbuildignore Try #3 Dec 19, 2014 .gitignore Initial fix for metric names error due to null breakdowns. Still to b… Jun 16, 2015 .travis.yml Remedy Travis error Mar 25, 2016 DESCRIPTION v1.4.9 to CRAN Jun 22, 2016 LICENSE Change SCAuth success message Apr 17, 2015 NAMESPACE fixed devtools check errors Jun 6, 2016 NEWS Fix broken test, update version num Jun 9, 2016 README.md Revise pattern to get non-empty results calling QueuePathing function. Apr 7, 2015 README.md RSiteCatalyst R client library for the Adobe Analytics 1.4 API Installation RSiteCatalyst v1.4 is on CRAN. You can also install directly from GitHub. install.packages(""devtools"") library(devtools) install_github(""randyzwitch/RSiteCatalyst"", ref=""master"")  library(RSiteCatalyst) You may also need to install other packages that RSiteCatalyst v1.4 depends on. jsonlite (>=0.9.5) plyr (>=1.8.1) httr (>= 0.3) stringr (>=0.6.2) digest base64enc install.packages(c(""jsonlite"",""plyr"",""httr"",""stringr"",""digest"",""base64enc""))  Authorisation Authorisation can be done using the legacy auth method (username:company + shared secret), or using the newer OAUTH method. Either is fine, but ultimately you should move towards using the OAUTH method, as the legacy auth method is deprecated. The OAUTH method is not universally available for all Adobe Analytics accounts, so legacy auth remains the default. Using legacy auth (web service credentials) This auth method is pretty straight-forward. You will simply need your username, and your shared secret, which you can retrieve from your account settings page in the Adobe Analytics web interface. SCAuth(""your_username:your_company"", ""your_shared_secret"")  Using OAUTH First you will need to create an application in the Adobe Dev Center. The application name can be whatever you want. The redirect URI should be left blank. This will provide you with a identifier and secret that you can use to access the Adobe Analytics API. SCAuth(""your_identifier"",        ""your_secret"",        ""your company"")  Running Reports Once you've authorised, reports can be queued and retrieved using the helper functions for each report type. Using the report helper functions RSiteCatalyst v1.4 has helper functions that make it easier to generate all report types (ranked, overtime, trended, pathing, fallout). These take parameters in R, convert them to JSON, then call JsonQueueReport. QueueOvertime Returns an overtime report. This is similar to the key metrics report in that the only granularity allowed is time. QueueOvertime requires a start and end date, a reportsuite ID, and a character vector of metrics. date.from <- ""2014-01-01"" date.to <- ""2013-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"")  report.data <- QueueOvertime(reportsuite.id, date.from, date.to, metrics)  You may also wish to set any of the 5 optional named parameters. date.from <- ""2014-01-01"" date.to <- ""2014-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"") date.granularity <- ""hour"" segment.id <- ""Visit_Natural_Search"" anomaly.detection <- TRUE data.current <- TRUE expedite <- TRUE  report.data <- QueueOvertime(reportsuite.id, date.from, date.to, metrics,date.granularity=date.granularity,segment.id=segment.id,anomaly.detection=anomaly.detection,data.current=data.current,expedite=expedite)  QueueRanked Returns a ranked report. This is an ordered list of elements and associated metrics with no time granularity. QueueRanked requires a start and end date, a reportsuite ID, a character vector of elements and a character vector of metrics. date.from <- ""2014-01-01"" date.to <- ""2014-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"",""event10"") elements <- c(""page"",""geoCountry"",""geoCity"")  report.data <- QueueRanked(reportsuite.id, date.from, date.to, metrics, elements)  You may also wish to set any of the 6 optional named parameters. The 1.4 API only supports this for the first element specified. In the example below, selected applies to the first element, page. date.from <- ""2014-01-01"" date.to <- ""2013-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"",""event10"",""event10"") elements <- c(""page"",""geoCountry"",""geoCity"") top <- 100 start <- 100 selected <- c(""Home"",""Search"",""About"") segment.id <- ""dw:12345"" data.current <- TRUE expedite <- TRUE  report.data <- QueueRanked(reportsuite.id, date.from, date.to, metrics,elements,top=top,start=start,selected=selected,segment.id=segment.id,data.current=data.current,expedit=expedite)  QueueTrended Returns a trended report. This is an ordered list of elements and associated metrics with time granularity. QueueTrended requires a start and end date, a reportsuite ID, a character vector of elements and a character vector of metrics. date.from <- ""2014-01-01"" date.to <- ""2014-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"",""event10"") elements <- c(""page"",""geoCountry"",""geoCity"")  report.data <- QueueTrended(reportsuite.id, date.from, date.to, metrics, elements)  You may also wish to set any of the 7 optional named parameters. As with QueueRanked the 1.4 API only supports selected for the first element specified. date.from <- ""2014-01-01"" date.to <- ""2013-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"",""event10"") elements <- c(""page"",""geoCountry"",""geoCity"") top <- 100 start <- 100 selected <- list(page=c(""Home"",""Search"",""About"")) date.granularity <- ""hour"" segment.id <- ""dw:12345"" data.current <- TRUE expedite <- TRUE  report.data <- QueueTrended(reportsuite.id, date.from, date.to, metrics,elements,top=top,start=start,selected=selected,segment.id=segment.id,data.current=data.current,expedit=expedite)  QueuePathing Returns a pathing report. This is an ordered list of paths matching the specified pattern. QueuePathing requires a start and end date, a reportsuite ID, a single element, a single metric and a pattern of element values that defined the path. date.from <- ""2014-01-01"" date.to <- ""2014-01-07"" reportsuite.id <- ""your_report_suite"" metric <- ""pageviews"" element <- ""page"" pattern <- c(""Home"",""::anything::"",""::anything::"")  report.data <- QueuePathing(reportsuite.id, date.from, date.to, metric, element, pattern)  QueueFallout Returns a fallout report. This is a pathed list of elements, with fallout values for each. QueuePathing requires a start and end date, a reportsuite ID, a single element, a character vector of metrics and a character vector of element values that defined the checkpoints. date.from <- ""2014-01-01"" date.to <- ""2014-01-07"" reportsuite.id <- ""your_report_suite"" metrics <- c(""visits"",""uniquevisitors"",""pageviews"",""event10"") element <- ""page"" checkpoints <- c(""Home"",""Contact"",""ThankYou"")  report.data <- QueuePathing(reportsuite.id, date.from, date.to, metrics, element, checkpoints)  Understanding the Available Data Using the API, you can retrieve the setup of your report suite and view definitions for evars and sprops, success events, report suites and segments. GetElements Gets valid elements for a report suite for the current user. This list is restricted by optionally specified existing elements, existing metrics and date granularity. elements.valid <- GetElements(""your_report_suite"",metrics=c('visitors','pageviews'),elements=c('page','geoCountry'),date.granularity='day')  GetMetrics Gets valid metrics for a report suite for the current user. This list is restricted by optionally specified existing elements, existing metrics and date granularity. metrics.valid <- GetMetrics(""your_report_suite"",metrics=c('visitors','pageviews'),elements=c('page','geoCountry'),date.granularity='day')  GetEvars Gets evar (conversion variable) definitions for the specified report suite(s). Useful to audit or document a report suite or company in Adobe Analytics. evars <- GetEvars(c(""your_prod_report_suite"",""your_dev_reportsuite""))  GetProps Gets sprop (traffic variable) definitions for the specified report suite(s). Useful to audit or document a report suite or company in Adobe Analytics. props <- GetProps(c(""your_prod_report_suite"",""your_dev_reportsuite""))  GetSuccessEvents Gets success event definitions for the specified report suite(s). Useful to audit or document a report suite or company in Adobe Analytics. successevents <- GetSuccessEvents(c(""your_prod_report_suite"",""your_dev_reportsuite""))  GetReportSuites Gets all report suites for the company. reportsuites <- GetReportSuites()  GetSegments Gets a list of segments for the specified report suites. Useful to find segment IDs for use in reporting helper functions or JSON report definitions. segments <- GetSegments(c(""your_prod_report_suite"",""your_dev_reportsuite""))  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/randyzwitch/RSiteCatalyst"	"R client library for the Adobe Analytics."	"true"
"Parallel Computing"	"parallel"	"http://cran.r-project.org/web/views/HighPerformanceComputing.html"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN Task View: High-Performance and Parallel Computing with R CRAN Task View: High-Performance and Parallel Computing with R Maintainer: Dirk Eddelbuettel Contact: Dirk.Eddelbuettel at R-project.org Version: 2016-06-27 This CRAN task view contains a list of packages, grouped by topic, that are useful for high-performance computing (HPC) with R. In this context, we are defining 'high-performance computing' rather loosely as just about anything related to pushing R a little further: using compiled code, parallel computing (in both explicit and implicit modes), working with large objects as well as profiling. Unless otherwise mentioned, all packages presented with hyperlinks are available from CRAN, the Comprehensive R Archive Network. Several of the areas discussed in this Task View are undergoing rapid change. Please send suggestions for additions and extensions for this task view to the task view maintainer . Suggestions and corrections by Achim Zeileis, Markus Schmidberger, Martin Morgan, Max Kuhn, Tomas Radivoyevitch, Jochen Knaus, Tobias Verbeke, Hao Yu, David Rosenberg, Marco Enea, Ivo Welch, Jay Emerson, Wei-Chen Chen, Bill Cleveland, Ross Boylan, Ramon Diaz-Uriarte, Mark Zeligman, and Kevin Ushey (as well as others I may have forgotten to add here) are gratefully acknowledged. Contributions are always welcome, and encouraged. Since the start of this CRAN task view in October 2008, most contributions have arrived as email suggestions. The source file for this particular task view file now also reside in a GitHub repository (see below) so that pull requests are also possible. Direct support in R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages multicore and snow. Some types of clusters are not handled directly by the base package 'parallel'. However, and as explained in the package vignette, the parts of parallel which provide snow -like functions will accept snow clusters including MPI clusters. The parallel package also contains support for multiple RNG streams following L'Ecuyer et al (2002), with support for both mclapply and snow clusters. The version released for R 2.14.0 contains base functionality: higher-level convenience functions are planned for later R releases. Parallel computing: Explicit parallelism Several packages provide the communications layer required for parallel computing. The first package in this area was rpvm by Li and Rossini which uses the PVM (Parallel Virtual Machine) standard and libraries. rpvm is no longer actively maintained, but available from its CRAN archive directory. In recent years, the alternative MPI (Message Passing Interface) standard has become the de facto standard in parallel computing. It is supported in R via the Rmpi by Yu. Rmpi package is mature yet actively maintained and offers access to numerous functions from the MPI API, as well as a number of R-specific extensions. Rmpi can be used with the LAM/MPI, MPICH / MPICH2, Open MPI, and Deino MPI implementations. It should be noted that LAM/MPI is now in maintenance mode, and new development is focussed on Open MPI. The pbdMPI package provides S4 classes to directly interface MPI in order to support the Single Program/Multiple Data (SPMD) parallel programming style which is particularly useful for batch parallel execution. The pbdSLAP builds on this and uses scalable linear algebra packages (namely BLACS, PBLAS, and ScaLAPACK) in double precision based on ScaLAPACK version 2.0.2. The pbdBASE builds on these and provides the core classes and methods for distributed data types upon which the pbdDMAT builds to provide distributed dense matrices for ""Programming with Big Data"". The pbdNCDF4 package permits multiple processes to write to the same file (without manual synchronization) and supports terabyte-sized files. The pbdDEMO package provides examples for these packages, and a detailed vignette. The pbdPROF package profiles MPI communication SPMD code via MPI profiling libraries, such as fpmpi, mpiP, or TAU. An alternative is provided by the nws (NetWorkSpaces) packages from REvolution Computing. It is the successor to the earlier LindaSpaces approach to parallel computing, and is implemented on top of the Twisted networking toolkit for Python. The snow (Simple Network of Workstations) package by Tierney et al. can use PVM, MPI, NWS as well as direct networking sockets. It provides an abstraction layer by hiding the communications details. The snowFT package provides fault-tolerance extensions to snow. The snowfall package by Knaus provides a more recent alternative to snow. Functions can be used in sequential or parallel mode. The foreach package allows general iteration over elements in a collection without the use of an explicit loop counter. Using foreach without side effects also facilitates executing the loop in parallel which is possible via the doMC (using parallel/multicore on single workstations), doSNOW (using snow, see above), doMPI (using Rmpi) packages and doRedis (using rredis) packages. The future package allows for synchroneous (sequential) and asynchronous (parallel) evaluations via abstraction of futures, either via function calls or implicitly via promises. Global variables are automatically identified. Iteration over elements in a collection is supported. The Rborist package employs OpenMP pragmas to exploit predictor-level parallelism in the Random Forest algorithm which promotes efficient use of multicore hardware in restaging data and in determining splitting criteria, both of which are performance bottlenecks in the algorithm. The h2o package connects to the h2o open source machine learning environment which has scalable implementations of random forests, GBM, GLM (with elastic net regularization), and deep learning. The randomForestSRC package can use both OpenMP as well as MPI for random forest extensions suitable for survival analysis, competing risks analysis, classification as well as regression Parallel computing: Implicit parallelism The pnmath package by Tierney ( link ) uses the Open MP parallel processing directives of recent compilers (such gcc 4.2 or later) for implicit parallelism by replacing a number of internal R functions with replacements that can make use of multiple cores --- without any explicit requests from the user. The alternate pnmath0 package offers the same functionality using Pthreads for environments in which the newer compilers are not available. Similar functionality is expected to become integrated into R 'eventually'. The romp package by Jamitzky was presented at useR! 2008 ( slides ) and offers another interface to Open MP using Fortran. The code is still pre-alpha and available from the Google Code project romp. An R-Forge project romp was initiated but there is no package, yet. The R/parallel package by Vera, Jansen and Suppi offers a C++-based master-slave dispatch mechanism for parallel execution ( link ) The Rdsm package provides a threads-like parallel computing environment, both on multicore machine and across the network by providing facilities inspired from distributed shared memory programming. The RhpcBLASctl detects the number of available BLAS cores, and permits explicit selection of the number of cores. The Rhpc permits *apply() style dispatch via MPI. Parallel computing: Grid computing The multiR package by Grose was presented at useR! 2008 but has not been released. It may offer a snow-style framework on a grid computing platform. The biocep-distrib project by Chine offers a Java-based framework for local, Grid, or Cloud computing. It is under active development. Parallel computing: Hadoop The RHIPE package, started by Saptarshi Guha and now developed by a core team via GitHub , provides an interface between R and Hadoop for analysis of large complex data wholly from within R using the Divide and Recombine approach to big data. The rmr package by Revolution Analytics also provides an interface between R and Hadoop for a Map/Reduce programming framework. ( link ) A related package, segue package by Long, permits easy execution of embarassingly parallel task on Elastic Map Reduce (EMR) at Amazon. ( link ) The RProtoBuf package provides an interface to Google's language-neutral, platform-neutral, extensible mechanism for serializing structured data. This package can be used in R code to read data streams from other systems in a distributed MapReduce setting where data is serialized and passed back and forth between tasks. The HistogramTools package provides a number of routines useful for the construction, aggregation, manipulation, and plotting of large numbers of Histograms such as those created by Mappers in a MapReduce application. The toaster package performs in-database computations utilizing the parallel / distributed Teradata Aster analytical platform Parallel computing: Random numbers Random-number generators for parallel computing are available via the rlecuyer package by Sevcikova and Rossini. The doRNG package provides functions to perform reproducible parallel foreach loops, using independent random streams as generated by the package rstream, suitable for the different foreach backends. Parallel computing: Resource managers and batch schedulers Job-scheduling toolkits permit management of parallel computing resources and tasks. The slurm (Simple Linux Utility for Resource Management) set of programs works well with MPI. ( link ) The Condor toolkit ( link ) from the University of Wisconsin-Madison has been used with R as described in this R News article . The sfCluster package by Knaus can be used with snowfall. ( link ) but is currently limited to LAM/MPI. The batch package by Hoffmann can launch parallel computing requests onto a cluster and gather results. The BatchJobs package provides Map, Reduce and Filter variants to manage R jobs and their results on batch computing systems like PBS/Torque, LSF and Sun Grid Engine. Multicore and SSH systems are also supported. The BatchExperiments package extends it with an abstraction layer for running statistical experiments. The flowr package offers a scatter-gather approach to submit jobs lists (including dependencies) to the computing cluster via simple data.frames as inputs. It supports LSF, SGE, Torque and SLURM. Parallel computing: Applications The caret package by Kuhn can use various frameworks (MPI, NWS etc) to parallelized cross-validation and bootstrap characterizations of predictive models. The maanova package on Bioconductor by Wu can use snow and Rmpi for the analysis of micro-array experiments. The pvclust package by Suzuki and Shimodaira can use snow and Rmpi for hierarchical clustering via multiscale bootstraps. The tm package by Feinerer can use snow and Rmpi for parallelized text mining. The varSelRF package by Diaz-Uriarte can use snow and Rmpi for parallelized use of variable selection via random forests. The bcp package by Erdman and Emerson for the Bayesian analysis of change points can use foreach for parallelized operations. The multtest package by Pollard et al. on Bioconductor can use snow, Rmpi or rpvm for resampling-based testing of multiple hypothesis. The GAMBoost package by Binder for glm and gam model fitting via boosting using b-splines, the Geneland package by Estoup, Guillot and Santos for structure detection from multilocus genetic data, the Matching package by Sekhon for multivariate and propensity score matching, the STAR package by Pouzat for spike train analysis, the bnlearn package by Scutari for bayesian network structure learning, the latentnet package by Krivitsky and Handcock for latent position and cluster models, the lga package by Harrington for linear grouping analysis, the peperr package by Porzelius and Binder for parallised estimation of prediction error, the orloca package by Fernandez-Palacin and Munoz-Marquez for operations research locational analysis, the rgenoud package by Mebane and Sekhon for genetic optimization using derivatives the affyPara package by Schmidberger, Vicedo and Mansmann for parallel normalization of Affymetrix microarrays, and the puma package by Pearson et al. which propagates uncertainty into standard microarray analyses such as differential expression all can use snow for parallelized operations using either one of the MPI, PVM, NWS or socket protocols supported by snow. The bugsparallel package uses Rmpi for distributed computing of multiple MCMC chains using WinBUGS. The partDSA package uses nws for generating a piecewise constant estimation list of increasingly complex predictors based on an intensive and comprehensive search over the entire covariate space. The dclone package provides a global optimization approach and a variant of simulated annealing which exploits Bayesian MCMC tools to get MLE point estimates and standard errors using low level functions for implementing maximum likelihood estimating procedures for complex models using data cloning and Bayesian Markov chain Monte Carlo methods with support for JAGS, WinBUGS and OpenBUGS; parallel computing is supported via the snow package. The pmclust package utilizes unsupervised model-based clustering for high dimensional (ultra) large data. The package uses pbdMPI to perform a parallel version of the EM algorithm for finite mixture Gaussian models. The harvestr package provides helper functions for (reproducible) simulations. Nowadays, many packages can use the facilities offered by the parallel package. One example is pls, another is PGICA which can run ICA analysis in parallel on SGE or multicore platforms. The sprint (an acronym for ""Simple Parallel R INTerface"") package provides a parallel computing framework for R making High Performance Computing (HPC) accessible to users who are not familiar with parallel programming and the use of HPC architectures. It contains a library of parallelised R functions for correlation, partitioning around medoids, apply, permutation testing, bootstrapping, random forest, rank product and hamming distance. Parallel computing: GPUs The gputools package by Buckner and Seligman provides several common data-mining algorithms which are implemented using a mixture of nVidia's CUDA langauge and cublas library. Given a computer with an nVidia GPU these functions may be substantially more efficient than native R routines. The cudaBayesreg package by da Silva implements the rhierLinearModel from the bayesm package using nVidia's CUDA langauge and tools to provide high-performance statistical analysis of fMRI voxels. The rgpu package (see below for link) aims to speed up bioinformatics analysis by using the GPU. The gcbd package implements a benchmarking framework for BLAS and GPUs (using gputools). The OpenCL package provides an interface from R to OpenCL permitting hardware- and vendor neutral interfaces to GPU programming. The HiPLARM package provide High-Performance Linear Algebra for R using multi-core and/or GPU support using the PLASMA / MAGMA libraries from UTK, CUDA, and accelerated BLAS. The gmatrix package enables the evaluation of matrix and vector operations using GPU coprocessors such that intermediate computations may be kept on the coprocessor and reused, with potentially significant performance enhancements by minimizing data movement. The gpuR package offers GPU-enabled functions: New gpu* and vcl* classes are provided to wrap typical R objects (e.g. vector, matrix) mirroring typical R syntax without the need to know OpenCL. Large memory and out-of-memory data The biglm package by Lumley uses incremental computations to offer lm() and glm() functionality to data sets stored outside of R's main memory. The ff package by Adler et al. offers file-based access to data sets that are too large to be loaded into memory, along with a number of higher-level functions. The bigmemory package by Kane and Emerson permits storing large objects such as matrices in memory (as well as via files) and uses external pointer objects to refer to them. This permits transparent access from R without bumping against R's internal memory limits. Several R processes on the same computer can also share big memory objects. A large number of database packages, and database-alike packages (such as sqldf by Grothendieck and data.table by Dowle) are also of potential interest but not reviewed here. The HadoopStreaming package provides a framework for writing map/reduce scripts for use in Hadoop Streaming; it also facilitates operating on data in a streaming fashion which does not require Hadoop. The speedglm package permits to fit (generalised) linear models to large data. For in-memory data sets, speedlm() or speedglm() can be used along with update.speedlm() which can update fitted models with new data. For out-of-memory data sets, shglm() is available; it works in the presence of factors and can check for singular matrices. The biglars package by Seligman et al can use the ff to support large-than-memory datasets for least-angle regression, lasso and stepwise regression. The MonetDB.R package allows R to access the MonetDB column-oriented, open source database system as a backend. The ffbase package by de Jonge et al adds basic statistical functionality to the ff package. The LaF package provides methods for fast access to large ASCII files in csv or fixed-width format. Easier interfaces for Compiled code The inline package by Sklyar et al eases adding code in C, C++ or Fortran to R. It takes care of the compilation, linking and loading of embeded code segments that are stored as R strings. The Rcpp package by Eddelbuettel and Francois offers a number of C++ clases that makes transferring R objects to C++ functions (and back) easier, and the RInside package by the same authors allows easy embedding of R itself into C++ applications for faster and more direct data transfer. The RcppParallel package by Allaire et al. bundles the Intel Threading Building Blocks and TinyThread libraries. Together with Rcpp, RcppParallel makes it easy to write safe, performant, concurrently-executing C++ code, and use that code within R and R packages. The rJava package by Urbanek provides a low-level interface to Java similar to the .Call() interface for C and C++. Profiling tools The profr package by Wickham can visualize output from the Rprof interface for profiling. The proftools package by Tierney, and the aprof package by Visser, can also be used to analyse profiling output. The GUIProfiler package visualizes the results of profiling R programs. CRAN packages: aprof batch BatchExperiments BatchJobs bayesm bcp biglars biglm bigmemory bnlearn caret cudaBayesreg data.table dclone doMC doMPI doRedis doRNG doSNOW ff ffbase flowr foreach future GAMBoost gcbd Geneland gmatrix gpuR gputools GUIProfiler h2o HadoopStreaming harvestr HiPLARM HistogramTools inline LaF latentnet lga Matching MonetDB.R nws OpenCL orloca partDSA pbdBASE pbdDEMO pbdDMAT pbdMPI pbdNCDF4 pbdPROF pbdSLAP peperr PGICA pls pmclust profr proftools pvclust randomForestSRC Rborist Rcpp RcppParallel Rdsm rgenoud Rhpc RhpcBLASctl RInside rJava rlecuyer Rmpi (core) RProtoBuf rredis snow (core) snowfall snowFT speedglm sprint sqldf STAR tm toaster varSelRF Related links: HPC computing notes by Luke Tierney for HPC class at University of Iowa Mailing List: R Special Interest Group High Performance Computing Schmidberger, Morgan, Eddelbuettel, Yu, Tierney and Mansmann (2009) paper on 'State of the Art in Parallel Computing with R' Luke Tierney's code directory for pnmath and pnmath0 R-Forge Project: biocep-distrib Bioconductor Package: affyPara Bioconductor Package: maanova Bioconductor Package: multtest Bioconductor Package: puma Google Code Project: romp Google Code Project: bugsparallel Slurm open-source workload manager Condor project at University of Wisconsin-Madison Parallel Computing in R with sfCluster/snowfall Wikipedia: Message Passing Interface (MPI) Wikipedia: Parallel Virtual Machine (PVM) Slides from Introduction to High-Performance Computing with R tutorial help in Nov 2009 at the Institute for Statistical Mathematics, Tokyo, Japan rgpu project at nbic.nl Magma: Matrix Algebra on GPU and Multicore architectures Parallel R: Data Analysis in the Distributed World"" High Performance Statistical Computing for Data Intensive Research Rth: Parallel R through Thrust Programming with Big Data in R RHIPE GitHub repository for this Task View"	"null"	"null"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"true"
"Parallel Computing"	"multicore"	"http://cran.r-project.org/web/packages/multicore/index.html"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package multicore Package ‘multicore’ was removed from the CRAN repository. Formerly available versions can be obtained from the archive. Consider using package ‘parallel’ instead."	"null"	"null"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"true"
"Parallel Computing"	"snow"	"http://cran.r-project.org/web/packages/snow/index.html"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package snow snow: Simple Network of Workstations Support for simple parallel computing in R. Version: 0.4-1 Depends: R (≥ 2.13.1), utils Suggests: Rmpi, rlecuyer, nws Published: 2015-10-31 Author: Luke Tierney, A. J. Rossini, Na Li, H. Sevcikova Maintainer: Luke Tierney <luke-tierney at uiowa.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: no Materials: README In views: HighPerformanceComputing CRAN checks: snow results Downloads: Reference manual: snow.pdf Package source: snow_0.4-1.tar.gz Windows binaries: r-devel: snow_0.4-1.zip, r-release: snow_0.4-1.zip, r-oldrel: snow_0.4-1.zip OS X Mavericks binaries: r-release: snow_0.4-1.tgz, r-oldrel: snow_0.4-1.tgz Old sources: snow archive Reverse dependencies: Reverse depends: BioPhysConnectoR, CePa, doSNOW, snowfall, snowFT Reverse imports: dclone, gimme, Haplin, mcGlobaloptim Reverse suggests: ConjointChecks, IndependenceTests, lga, SpaDES, STAR"	"null"	"null"	"R started with release 2.14.0 which includes a new package parallel incorporating (slightly revised) copies of packages and."	"true"
"Parallel Computing"	"Rmpi"	"http://cran.r-project.org/web/packages/Rmpi/index.html"	"Rmpi provides an interface (wrapper) to MPI APIs. It also provides interactive R slave environment."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package Rmpi Rmpi: Interface (Wrapper) to MPI (Message-Passing Interface) An interface (wrapper) to MPI APIs. It also provides interactive R manager and worker environment. Version: 0.6-6 Depends: R (≥ 2.15.1) Imports: parallel Published: 2016-06-02 Author: Hao Yu Maintainer: Hao Yu <hyu at stats.uwo.ca> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.stats.uwo.ca/faculty/yu/Rmpi NeedsCompilation: yes Citation: Rmpi citation info Materials: README ChangeLog In views: HighPerformanceComputing CRAN checks: Rmpi results Downloads: Reference manual: Rmpi.pdf Package source: Rmpi_0.6-6.tar.gz Windows binaries: r-devel: Rmpi_0.6-6.zip, r-release: Rmpi_0.6-6.zip, r-oldrel: Rmpi_0.6-5.zip OS X Mavericks binaries: r-release: not available, r-oldrel: not available Old sources: Rmpi archive Reverse dependencies: Reverse depends: bigGP, doMPI Reverse imports: metaMix, regRSM Reverse suggests: ConjointChecks, ergm, IndependenceTests, irace, npsf, OpenMx, P2C2M, parallelMap, PCIT, pls, plsVarSel, simsalapar, snow, snowfall, snowFT"	"null"	"null"	"Rmpi provides an interface (wrapper) to MPI APIs. It also provides interactive R slave environment."	"true"
"Parallel Computing"	"foreach"	"http://cran.r-project.org/web/packages/foreach/index.html"	"Executing the loop in parallel."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package foreach foreach: Provides Foreach Looping Construct for R Support for the foreach looping construct. Foreach is an idiom that allows for iterating over elements in a collection, without the use of an explicit loop counter. This package in particular is intended to be used for its return value, rather than for its side effects. In that sense, it is similar to the standard lapply function, but doesn't require the evaluation of a function. Using foreach without side effects also facilitates executing the loop in parallel. Version: 1.4.3 Depends: R (≥ 2.5.0) Imports: codetools, utils, iterators Suggests: randomForest Enhances: compiler, doMC, RUnit, doParallel Published: 2015-10-13 Author: Rich Calaway [cre], Revolution Analytics [aut, cph], Steve Weston [aut] Maintainer: Rich Calaway <richcala at microsoft.com> BugReports: NA License: Apache License (== 2.0) URL: NA NeedsCompilation: no Materials: NEWS In views: HighPerformanceComputing CRAN checks: foreach results Downloads: Reference manual: foreach.pdf Vignettes: foreach Manual Nesting Foreach Loops Package source: foreach_1.4.3.tar.gz Windows binaries: r-devel: foreach_1.4.3.zip, r-release: foreach_1.4.3.zip, r-oldrel: foreach_1.4.3.zip OS X Mavericks binaries: r-release: foreach_1.4.3.tgz, r-oldrel: foreach_1.4.3.tgz Old sources: foreach archive Reverse dependencies: Reverse depends: BANFF, biganalytics, cffdrs, clustvarsel, cubfits, DNMF, doFuture, doMC, doMPI, doParallel, doRedis, doRNG, doSNOW, eiCompare, GA, gam, gamsel, gdm, GenCAT, GiNA, glmnet, gmDatabase, gofCopula, gpmap, hdlm, hzar, localgauss, MAVTgsa, MEGENA, MetaPCA, MetaQC, missForest, MixRF, MonoInc, multicon, PAGWAS, parfossil, PAWL, penDvine, permGPU, perspectev, PortfolioAnalytics, QuantumClone, ramsvm, randomGLM, REPTILE, Rlof, RVPedigree, s4vd, sdcTarget, SDDE, selfingTree, sms, spatial.tools, SurvRank, survSNP, turboEM, unbalanced, vacem, VTrack Reverse imports: abcrf, admixturegraph, ApacheLogProcessor, bastah, BayesBinMix, bayou, bcRep, bdots, BDWreg, bingat, biwavelet, bnspatial, boostr, brainGraph, breakpoint, BSGW, bst, BTR, calibrar, cape, caret, Causata, CFC, Compositional, condSURV, corr2D, covmat, CovSelHigh, D2C, dCovTS, Directional, dtwclust, EasyMARK, ecospat, EFDR, ei, ENMeval, enpls, EnsembleBase, EpiModel, exifr, ezsim, fdasrvf, fuzzyforest, gapfill, gdalUtils, GENLIB, gimme, gimms, grpss, GSODR, GWLelast, GWRM, hbm, hdnom, HighDimOut, HMP, HMPTrees, hybridModels, icenReg, iLaplace, inctools, Information, intercure, JBTools, LANDD, ldamatch, lfl, lint, LPR, mbest, Mediana, metaheur, metricTester, minimaxdesign, mistral, modellingTools, Morpho, mpath, mplot, mvcwt, MXM, myTAI, NMF, npregfast, OmicKriging, opentraj, paleoTS, parallelML, parallelSVM, ParetoPosStable, PARSE, pec, performanceEstimation, phenex, phylocurve, polmineR, polywog, preprocomb, preprosim, prettymapr, primerTree, prospectr, proteomics, prozor, R2MLwiN, randomUniformForest, rangeMapper, rBayesianOptimization, regRSM, resemble, reval, RKEEL, RobustEM, robustrao, rosm, rplexos, rprev, RRreg, RSNPset, RStoolbox, rusda, semsfa, SGP, shazam, SHLR, SimDesign, simPop, siRSM, spacom, spectral.methods, sperich, ss3sim, StAMPP, taxize, TED, text2vec, tigger, timeSeq, toaster, tsDyn, TSMining, TSP, vardpoor, VineCopula, VSURF, warbleR, WGCNA, YaleToolkit, ykmeans Reverse suggests: BayesFactor, data.tree, dcGOR, DEoptim, DiceKriging, dnet, dplR, EGRETci, evolqg, eyetrackingR, FinancialInstrument, fitTetra, FREGAT, fxregime, GMCM, harvestr, Interatrix, iterpc, itertools, kergp, kselection, lava, merTools, msm, neuroim, NPflow, pbo, plyr, protr, ptycho, rDNAse, rioja, ripa, rpg, simsalapar, Smisc, strucchange, TcGSA, tmlenet, treatSens, XGR"	"null"	"null"	"Executing the loop in parallel."	"true"
"Parallel Computing"	"SparkR"	"https://github.com/amplab-extras/SparkR-pkg"	"R frontend for Spark."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"609"	"156"	"313"	"GitHub - amplab-extras/SparkR-pkg: R frontend for Spark Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 156 Star 609 Fork 313 amplab-extras/SparkR-pkg Code Pull requests 1 Wiki Pulse Graphs R frontend for Spark http://amplab-extras.github.io/SparkR-pkg 758 commits 6 branches 0 releases 23 contributors R 83.2% Scala 13.3% Shell 2.8% Other 0.7% R Scala Shell Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages install-github master profiling spark-upgrade sparkr-sql Nothing to show Nothing to show New pull request Latest commit 9694d8e Jun 10, 2016 shivaram committed on GitHub Merge pull request #254 from luborliu/master … Fix a wget option error Permalink Failed to load latest commit information. examples [SPARKR-242] Failure in LR example. Apr 3, 2015 pkg Update wget option error Jun 10, 2016 .gitignore reverse bad cherry pick and merge Mar 20, 2015 .travis.yml on_failure -> after_failure in travis.yml Apr 12, 2014 BUILDING.md Doc updates: build and running on YARN Mar 1, 2015 DOCUMENTATION.md Add notes on how to compile roxygen2 docs Jan 10, 2014 LICENSE Add Apache 2.0 License file Jan 13, 2014 README.md added comment on mailing list May 30, 2015 SparkR_IDE_Setup.sh Update SparkR_IDE_Setup.sh Dec 24, 2014 SparkR_prep-0.1.sh Adding the script to install software on the Cloudera Quick Start VM. Dec 8, 2014 TODO.md Update TODO.md Jan 18, 2014 create-docs.sh Add execution permission to create-docs.sh. Mar 24, 2015 install-dev.bat Clean up some commented code Nov 3, 2014 install-dev.sh Update README and add helper script install-dev.sh Jan 13, 2014 run-tests.sh Check tests for failures and output error msg Jan 15, 2014 sparkR R to fail early if SparkR is missing Mar 30, 2015 README.md R on Spark SparkR is an R package that provides a light-weight frontend to use Spark from R. NOTE: As of April 2015, SparkR has been merged into Apache Spark and is shipping in an upcoming release (1.4) due early summer 2015. This repo currently targets users using released versions of Spark. This repo no longer accepts new pull requests, and they should now be submitted to apache/spark; see here for some instructions. NOTE: The API from the upcoming Spark release (1.4) will not have the same API as described by this github repo. Initial support for Spark in R be focussed on high level operations instead of low level ETL. This may change in the (1.5) version. You can contribute and follow SparkR developments on the Apache Spark mailing lists and issue tracker. Installing SparkR Requirements SparkR requires Scala 2.10, and Spark version >= 0.9.0 and <= 1.2. Current build by default uses Apache Spark 1.1.0. You can also build SparkR against a different Spark version (>= 0.9.0) by modifying pkg/src/build.sbt. DataFrame: DataFrame was introduced in Spark 1.3; the 1.3-compatible SparkR version can be found in the sparkr-sql branch, which includes a preliminary R API to work with DataFrames. Package installation To develop SparkR, you can build the scala package and the R package using ./install-dev.sh  If you wish to try out the package directly from github, you can use install_github from devtools. Note that you can specify which branch, tag etc to install from. library(devtools) install_github(""amplab-extras/SparkR-pkg"", subdir=""pkg"")  SparkR by default uses Apache Spark 1.1.0. You can switch to a different Spark version by setting the environment variable SPARK_VERSION. For example, to use Apache Spark 1.3.0, you can run SPARK_VERSION=1.3.0 ./install-dev.sh  SparkR by default links to Hadoop 1.0.4. To use SparkR with other Hadoop versions, you will need to rebuild SparkR with the same version that Spark is linked to. For example to use SparkR with a CDH 4.2.0 MR1 cluster, you can run SPARK_HADOOP_VERSION=2.0.0-mr1-cdh4.2.0 ./install-dev.sh  By default, SparkR uses sbt to build an assembly jar. If you wish to use maven instead, you can set the environment variable USE_MAVEN=1. For example USE_MAVEN=1 ./install-dev.sh  If you are building SparkR from behind a proxy, you can setup maven to use the right proxy server. Building from source from GitHub Run the following within R to pull source code from GitHub and build locally. It is possible to specify build dependencies by starting R with environment values: Start R SPARK_VERSION=1.2.0 SPARK_HADOOP_VERSION=2.5.0 R  Run install_github library(devtools) install_github(""repo/SparkR-pkg"", ref=""branchname"", subdir=""pkg"")  note: replace repo and branchname Running sparkR If you have cloned and built SparkR, you can start using it by launching the SparkR shell with ./sparkR  The sparkR script automatically creates a SparkContext with Spark by default in local mode. To specify the Spark master of a cluster for the automatically created SparkContext, you can run MASTER=<Spark master URL> ./sparkR  If you have installed it directly from github, you can include the SparkR package and then initialize a SparkContext. For example to run with a local Spark master you can launch R and then run library(SparkR) sc <- sparkR.init(master=""local"")  To increase the memory used by the driver you can export the SPARK_MEM environment variable. For example to use 1g, you can run SPARK_MEM=1g ./sparkR  In a cluster setting to set the amount of memory used by the executors you can pass the variable spark.executor.memory to the SparkContext constructor. library(SparkR) sc <- sparkR.init(master=""spark://<master>:7077"",                   sparkEnvir=list(spark.executor.memory=""1g""))  Finally, to stop the cluster run sparkR.stop()  sparkR.stop() can be invoked to terminate a SparkContext created previously via sparkR.init(). Then you can call sparkR.init() again to create a new SparkContext that may have different configurations. Examples, Unit tests SparkR comes with several sample programs in the examples directory. To run one of them, use ./sparkR <filename> <args>. For example: ./sparkR examples/pi.R local[2]  You can also run the unit-tests for SparkR by running (you need to install the testthat package first): R -e 'install.packages(""testthat"", repos=""http://cran.us.r-project.org"")' ./run-tests.sh  Running on EC2 Instructions for running SparkR on EC2 can be found in the SparkR wiki. Running on YARN Currently, SparkR supports running on YARN with the yarn-client mode. These steps show how to build SparkR with YARN support and run SparkR programs on a YARN cluster: # assumes Java, R, yarn, spark etc. are installed on the whole cluster. cd SparkR-pkg/ USE_YARN=1 SPARK_YARN_VERSION=2.4.0 SPARK_HADOOP_VERSION=2.4.0 ./install-dev.sh  Alternatively, install_github can be use (on CDH in this case): # assume devtools package is installed by install.packages(""devtools"") USE_YARN=1 SPARK_VERSION=1.1.0 SPARK_YARN_VERSION=2.5.0-cdh5.3.0 SPARK_HADOOP_VERSION=2.5.0-cdh5.3.0 R  Then within R, library(devtools) install_github(""amplab-extras/SparkR-pkg"", ref=""master"", subdir=""pkg"")  Before launching an application, make sure each worker node has a local copy of lib/SparkR/sparkr-assembly-0.1.jar. With a cluster launched with the spark-ec2 script, do: ~/spark-ec2/copy-dir ~/SparkR-pkg  Or run the above installation steps on all worker node. Finally, when launching an application, the environment variable YARN_CONF_DIR needs to be set to the directory which contains the client-side configuration files for the Hadoop cluster (with a cluster launched with spark-ec2, this defaults to /root/ephemeral-hdfs/conf/): YARN_CONF_DIR=/root/ephemeral-hdfs/conf/ MASTER=yarn-client ./sparkR YARN_CONF_DIR=/root/ephemeral-hdfs/conf/ ./sparkR examples/pi.R yarn-client  Running on a cluster using sparkR-submit sparkR-submit is a script introduced to facilitate submission of SparkR jobs to a Spark supported cluster (e.g. Standalone, Mesos, YARN). It supports the same commandline parameters as spark-submit. SPARK_HOME and JAVA_HOME must be defined. On YARN, YARN_CONF_DIR must be defined. sparkR-submit supports YARN deploy modes: yarn-client and yarn-cluster. sparkR-submit is installed with the SparkR package. By default, it can be found under the default Library ('library' subdirectory of R_HOME) For example, to run on YARN (CDH 5.3.0), export SPARK_HOME=/opt/cloudera/parcels/CDH-5.3.0-1.cdh5.3.0.p0.30/lib/spark export YARN_CONF_DIR=/etc/hadoop/conf export JAVA_HOME=/usr/java/jdk1.7.0_67-cloudera /usr/lib64/R/library/SparkR/sparkR-submit --master yarn-client examples/pi.R yarn-client 4  Report Issues/Feedback For better tracking and collaboration, issues and TODO items are reported to the Apache Spark JIRA under the component tag ""SparkR"". In your pull request, please cross reference the ticket item created and append ""[SPARKR]"" (e.g.: ""[SPARK-1234] [SPARKR] Pull request""). Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/amplab-extras/SparkR-pkg"	"R frontend for Spark."	"true"
"Parallel Computing"	"DistributedR"	"https://github.com/vertica/DistributedR"	"A scalable high-performance platform from HP Vertica Analytics Team."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"130"	"53"	"51"	"GitHub - vertica/DistributedR Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 53 Star 130 Fork 51 vertica/DistributedR Code Issues 11 Pull requests 0 Wiki Pulse Graphs No description or website provided. 427 commits 7 branches 3 releases 11 contributors R 60.1% C++ 36.1% C 2.2% Makefile 0.5% Protocol Buffer 0.4% TeX 0.4% Other 0.3% R C++ C Makefile Protocol Buffer TeX Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags collaborative-filtering hpdegbm master out-of-core-experiment release/DistributedR_1.0.0 valgrind varimp Nothing to show v1.2.0 v1.1.0 v1.0.0 Nothing to show New pull request Latest commit a55bc99 Dec 8, 2015 saltzm add user guide to docs Permalink Failed to load latest commit information. algorithms I am not sure when and how the vote vector had been corrupted. I foun… Oct 22, 2015 demo PDF of steps to perform a complete analysis of data using hpdglm in d… Mar 2, 2015 doc add user guide to docs Dec 8, 2015 platform rectifying a typo Oct 16, 2015 vRODBC Sync to make Github current with Distributed R development Jul 17, 2015 .gitignore Adding .gitignore and fixing make target to run platform unit tests Jul 20, 2015 LICENSE updated license info Aug 11, 2014 Makefile Adding some targets for sf regression Sep 15, 2015 README.md Update README with instructions on how to install DR from the R console. Aug 21, 2015 README.md DistributedR Distributed R is a scalable high-performance platform for the R language. It enables and accelerates large scale machine learning, statistical analysis, and graph processing. The Distributed R platform exposes data structures, such as distributed arrays, to store data across a cluster. Arrays act as a single abstraction to efficiently express both machine learning algorithms, which primarily use matrix operations, and graph algorithms, which manipulate the graph’s adjacency matrix. In addition to distributed arrays, the platform also provides distributed data frames, lists and loops. Using Distributed R constructs, data can be loaded in parallel from any data source. Distributed R also provides a parallel data loader from the Vertica database. Please see vRODBC repository. Installing from binaries Distributed R is delivered in a single, easy-to-install tar file. The installation tool ""distributedR_install"" installs the platform and all parallel algorithm R packages. You can register and get the tar file here. You can also get a Virtual Machine with everything installed here. Installing from source Install dependencies: On Ubuntu: $ sudo apt-get install -y make gcc g++ libxml2-dev rsync bison byacc flex  On CentOS: $ sudo yum install -y make gcc gcc-c++ libxml2-devel rsync bison byacc flex  Install R: On Ubuntu: $ echo ""deb http://cran.r-project.org//bin/linux/ubuntu trusty/"" | sudo tee /etc/apt/sources.list.d/r.list $ sudo apt-get update $ sudo apt-get install -y --force-yes r-base-core  On CentOS: $ curl -O http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm $ sudo rpm -i epel-release-latest-7.noarch.rpm $ sudo yum update $ sudo yum install R R-devel  Install R dependencies: $ sudo R  # to install globally R> install.packages(c('Rcpp','RInside','XML','randomForest','data.table'))  Compile and install Distributed R: $ R CMD INSTALL platform/executor $ R CMD INSTALL platform/master  Or directly from the R console: R> devtools::install_github('vertica/DistributedR',subdir='platform/executor') R> devtools::install_github('vertica/DistributedR',subdir='platform/master')  Open R and run an example: library(distributedR) distributedR_start()  # start DR distributedR_status()  B <- darray(dim=c(9,9), blocks=c(3,3), sparse=FALSE) # create a darray foreach(i, 1:npartitions(B),   init<-function(b = splits(B,i), index=i) {   b <- matrix(index, nrow=nrow(b), ncol=ncol(b))   update(b) })  # initialize it  getpartition(B) # collect darray data  distributedR_shutdown() # stop DR  How to Contribute You can help us in different ways: Reporting issues. Contributing code and sending a Pull Request. In order to contribute the code base of this project, you must agree to the Developer Certificate of Origin (DCO) 1.1 for this project under GPLv2+: By making a contribution to this project, I certify that:  (a) The contribution was created in whole or in part by me and I have the      right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my      knowledge, is covered under an appropriate open source license and I      have the right under that license to submit that work with modifications,      whether created in whole or in part by me, under the same open source      license (unless I am permitted to submit under a different license),      as indicated in the file; or (c) The contribution was provided directly to me by some other person who      certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this project and the contribution are public and     that a record of the contribution (including all personal information I submit      with it, including my sign-off) is maintained indefinitely and may be      redistributed consistent with this project or the open source license(s) involved.  To indicate acceptance of the DCO you need to add a Signed-off-by line to every commit. E.g.: Signed-off-by: John Doe <john.doe@hisdomain.com>  To automatically add that line use the -s switch when running git commit: $ git commit -s  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/vertica/DistributedR"	"A scalable high-performance platform from HP Vertica Analytics Team."	"true"
"Parallel Computing"	"ddR"	"https://github.com/vertica/ddR"	"Provides distributed data structures and simplifies distributed computing in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"82"	"50"	"9"	"GitHub - vertica/ddR: Standard API for Distributed Data Structures in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 50 Star 82 Fork 9 vertica/ddR Code Issues 4 Pull requests 0 Wiki Pulse Graphs Standard API for Distributed Data Structures in R 269 commits 2 branches 4 releases 8 contributors R 95.6% C++ 4.4% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags SparkR master Nothing to show v0.1.3 v0.1.2 v0.1.1 v0.1 Nothing to show New pull request Latest commit 7b369a1 Jul 12, 2016 vishrutg committed on GitHub Merge pull request #11 from clarkfitzg/examples … kmeans Examples Permalink Failed to load latest commit information. algorithms Polishing algorithms/pagerank.ddR/README.md Nov 14, 2015 ddR Acknowledge R-consortium in README and mailing list Jul 5, 2016 distributedR.ddR Updated README (should serve as starting point for user guide as well). Oct 19, 2015 examples Experimenting with kmeans algorithm example Jul 6, 2016 .gitignore Removed .gitignore from src/ Oct 8, 2015 LICENSE Add license. Instructions for contributors. Jul 27, 2015 README.md Use existing mailing list from R Consortium Jul 5, 2016 README.md title author date ddR README Edward Ma, Indrajit Roy, Michael Lawrence 2015-10-22 The 'ddR' package aims to provide an unified R interface for writing parallel and distributed applications. Our goal is to ensure that R programs written using the 'ddR' API work across different distributed backends, therefore, reducing the effort required by users to understand and program on different backends. Currently 'ddR' programs can be executed on R's default 'parallel' package as well as the open source HP Distributed R. We plan to add support for SparkR. This package is an outcome of feedback and collaboration across different companies and R-core members! Through funding provided by the R-consortium this package is under active development for the summer of 2016. Check out the mailing list to see the latest discussions. 'ddR' is an API, and includes a default execution engine, to express and execute distributed applications. Users can declare distributed objects (i.e., dlist, dframe, darray), and execute parallel operations on these data structures using R-style apply functions. It also allows different backends (that support ddR, and have ddR ""drivers"" written for them) to be dynamically activated in the R user's environment to execute applications Please refer to the user guide under vignettes/ for a detailed description on how to use the package. Some quick examples library(ddR) By default, the parallel backend is used with all the cores present on the machine. You can switch backends or specify the number of cores to use with the useBackend function. For example, you can specify that the parallel backend should be used with only 4 cores by executing useBackend(parallel, executors=4). Initializing a distributed list (dlist): a <- dmapply(function(x) { x }, rep(3,5)) collect(a) ## [[1]] ## [1] 3 ##  ## [[2]] ## [1] 3 ##  ## [[3]] ## [1] 3 ##  ## [[4]] ## [1] 3 ##  ## [[5]] ## [1] 3  Printing a: a ##  ## ddR Distributed Object ## Type: dlist ## # of partitions: 5 ## Partitions per dimension: 5x1 ## Partition sizes: [1], [1], [1], [1], [1] ## Length: 5 ## Backend: parallel  a is a distributed object in ddR. Note that we did not specify the number of partitions of the output, but by default it is equal to the length of the inputs (5). Use the parameter nparts to specify how the output should be partitioned: Below is the code to add 1 to the first element of a, 2 to the second, etc. The syntax of dmapply is similar to R's standard mapply function. b <- dmapply(function(x,y) { x + y }, a, 1:5,nparts=1) b ##  ## ddR Distributed Object ## Type: dlist ## # of partitions: 1 ## Partitions per dimension: 1x1 ## Partition sizes: [5] ## Length: 5 ## Backend: parallel  Since we specified nparts=1 in dmapply, b only has one partition of 5 elements. Note that the argument nparts is optional, and a user can always ignore it. collect(b) ## [[1]] ## [1] 4 ##  ## [[2]] ## [1] 5 ##  ## [[3]] ## [1] 6 ##  ## [[4]] ## [1] 7 ##  ## [[5]] ## [1] 8  Some other operations: ` Adding a to b, and then subtracting a constant value addThenSubtract <- function(x,y,z) {   x + y - z } c <- dmapply(addThenSubtract,a,b,MoreArgs=list(z=5)) collect(c) ## [[1]] ## [1] 2 ##  ## [[2]] ## [1] 3 ##  ## [[3]] ## [1] 4 ##  ## [[4]] ## [1] 5 ##  ## [[5]] ## [1] 6  We can also process distributed objects partitionwise. Below is an example where we calculate the length of each partition: d <- dmapply(function(x) length(x),parts(a)) collect(d) ## [[1]] ## [1] 1 ##  ## [[2]] ## [1] 1 ##  ## [[3]] ## [1] 1 ##  ## [[4]] ## [1] 1 ##  ## [[5]] ## [1] 1  We partitioned a with 5 parts and it had 5 elements, so the length of each partition is 1. However, b only had one partition, so that one partition should be of length 5: e <- dmapply(function(x) length(x),parts(b)) collect(e) ## [[1]] ## [1] 5  Note that parts() and non-parts arguments can be used in any combination to dmapply. parts(dobj) returns a list of the partitions of that dobject, which can be passed into dmapply like any other list. parts(dobj,index), where index is a list, vector, or scalar, returns a specific partition or range of partitions of dobj. We also have support for darrays and dframes. Check vignettes/ on how to use them. For more interesting parallel machine learning algorithms, you may view (and run) the example scripts under /examples. Using the Distributed R backend To use the Distributed R library for ddR, first install distributedR.ddR and then load it: library(distributedR.ddR) ## Loading required package: distributedR ## Loading required package: Rcpp ## Loading required package: RInside ## Loading required package: XML ## Loading required package: ddR ##  ## Attaching package: 'ddR' ##  ## The following objects are masked from 'package:distributedR': ##  ##     darray, dframe, dlist, is.dlist  useBackend(distributedR) Now you can try the different list examples which were used with the 'parallel' backend. How to Contribute You can help us in different ways: Reporting issues. Contributing code and sending a Pull Request. In order to contribute the code base of this project, you must agree to the Developer Certificate of Origin (DCO) 1.1 for this project under GPLv2+: By making a contribution to this project, I certify that:  (a) The contribution was created in whole or in part by me and I have the      right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my      knowledge, is covered under an appropriate open source license and I      have the right under that license to submit that work with modifications,      whether created in whole or in part by me, under the same open source      license (unless I am permitted to submit under a different license),      as indicated in the file; or (c) The contribution was provided directly to me by some other person who      certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this project and the contribution are public and     that a record of the contribution (including all personal information I submit      with it, including my sign-off) is maintained indefinitely and may be      redistributed consistent with this project or the open source license(s) involved.  To indicate acceptance of the DCO you need to add a Signed-off-by line to every commit. E.g.: Signed-off-by: John Doe <john.doe@hisdomain.com>  To automatically add that line use the -s switch when running git commit: $ git commit -s  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/vertica/ddR"	"Provides distributed data structures and simplifies distributed computing in R."	"true"
"High Performance"	"Rcpp"	"http://rcpp.org/"	"Rcpp provides a powerful API on top of R, make function in R extremely faster."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"188"	"35"	"88"	"GitHub - RcppCore/Rcpp: Seamless R and C++ Integration Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 35 Star 188 Fork 88 RcppCore/Rcpp Code Issues 99 Pull requests 0 Wiki Pulse Graphs Seamless R and C++ Integration 3,733 commits 1 branch 13 releases 35 contributors C++ 91.9% R 7.9% Other 0.2% C++ R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 0.12.5 0.12.4 0.12.3 0.12.2 0.12.1 0.12.0 0.11.6 0.11.5 0.11.4 0.11.3 0.11.2 0.11.1 0.11.0 Nothing to show New pull request Latest commit 406befa Jul 15, 2016 eddelbuettel committed on GitHub Merge pull request #505 from coatless/faq-default-parameters … Added section on default function parameters. Permalink Failed to load latest commit information. R include sourceCpp preface in cache dir Jul 13, 2016 debian release 0.12.5 May 14, 2016 inst changelog and news for two recent PRs Jul 13, 2016 man please R CMD check Jul 13, 2016 src correctly insert code into cache Jul 12, 2016 tests additional test added for the release case of a version x.y.z and no … Jun 6, 2014 vignettes Moved section down & fixed syntax highlight on old max post Jul 15, 2016 .Rbuildignore add Contributing.md to .Rbuildignore which was refreshed as well Jan 9, 2016 .Rinstignore do not exclude bin/ via .Rinstignore as we need the binary package fo… Nov 2, 2014 .clang_format add .clang-format Jul 2, 2015 .dir-locals.el updated .dir-locals.el and ChangeLog with it May 23, 2014 .gitignore Algorithm...first checkin May 17, 2016 .travis.yml adding slack token Nov 24, 2015 ChangeLog Added section on default function parameters. Jul 15, 2016 Contributing.md adding Contributing.md (closes #413) Jan 9, 2016 DESCRIPTION bump version Jul 12, 2016 NAMESPACE please R CMD check Jul 13, 2016 README.md release 0.12.4 Mar 22, 2016 Rcpp.Rproj don't use devtools mode in RStudio (enables the Test Package command … Jul 17, 2015 TODO scan local includes recursively and invalidate sourcecpp cache if a l… Feb 14, 2015 cleanup correct previous commit and remove the actual removal from cleanup Jun 8, 2014 doxyfile enable navigation tree Jun 9, 2010 README.md Rcpp Seamless R and C++ Integration The Rcpp package provides R functions and a C++ library facilitating the integration of R and C++. R data types (SEXP) are matched to C++ objects in a class hierarchy. All R types are supported (vectors, functions, environment, etc ...) and each type is mapped to a dedicated class. For example, numeric vectors are represented as instances of the Rcpp::NumericVector class, environments are represented as instances of Rcpp::Environment, functions are represented as Rcpp::Function, etc ... The Rcpp-introduction vignette (also published as a JSS paper) provides a good entry point to Rcpp as do the Rcpp website, the Rcpp page and the Rcpp Gallery. Full documentation is provided by the Rcpp book. Conversion from C++ to R and back is driven by the templates Rcpp::wrap and Rcpp::as which are highly flexible and extensible, as documented in the Rcpp-extending vignette. Rcpp also provides Rcpp modules, a framework that allows exposing C++ functions and classes to the R level. The Rcpp-modules vignette details the current set of features of Rcpp-modules. Rcpp includes a concept called Rcpp sugar that brings many R functions into C++. Sugar takes advantage of lazy evaluation and expression templates to achieve great performance while exposing a syntax that is much nicer to use than the equivalent low-level loop code. The Rcpp-sugar gives an overview of the feature. Rcpp attributes provide a high-level syntax for declaring C++ functions as callable from R and automatically generating the code required to invoke them. Attributes are intended to facilitate both interactive use of C++ within R sessions as well as to support R package development. Attributes are built on top of Rcpp modules and their implementation is based on previous work in the inline package. See the Rcpp-atttributes vignettes for more details. Documentation The package ships with nine pdf vignettes. Additional documentation is available via the JSS paper by Eddelbuettel and Francois (2011, JSS) paper (corresponding to the 'intro' vignette) and the book by Eddelbuettel (2013, Springer); see 'citation(""Rcpp"")' for details. Examples The Rcpp Gallery showcases over 90 fully documented and working examples. A number of examples are included as are over 920 unit tests in over 470 unit test functions provide additional usage examples. An earlier version of Rcpp, containing what we now call the 'classic Rcpp API' was written during 2005 and 2006 by Dominick Samperi. This code has been factored out of Rcpp into the package RcppClassic, and it is still available for code relying on the older interface. New development should always use this Rcpp package instead. Other usage examples are provided by packages using Rcpp. As of January 2016, there are about 550 CRAN packages using Rcpp, a further BioConductor packages as well as an unknown number of GitHub, Bitbucket, R-Forge, ... repositories using Rcpp. All these packages provide usage examples for Rcpp. Installation Released and tested versions of Rcpp are available via the CRAN network, and can be installed from within R via install.packages(""Rcpp"") To install from source, ensure you have a complete package development environment for R as discussed in the relevant documentation; also see questions 1.2 and 1.3 in the Rcpp-FAQ. Authors Dirk Eddelbuettel, Romain Francois, JJ Allaire, Kevin Ushey, Qiang Kou, Doug Bates, and John Chambers License GPL (>= 2) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/RcppCore/Rcpp"	"Rcpp provides a powerful API on top of R, make function in R extremely faster."	"true"
"High Performance"	"Rcpp11"	"https://github.com/Rcpp11/Rcpp11"	"Rcpp11 is a complete redesign of Rcpp, targetting C++11."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"62"	"18"	"9"	"GitHub - Rcpp11/Rcpp11: R and C++11 Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 18 Star 62 Fork 9 Rcpp11/Rcpp11 Code Issues 31 Pull requests 0 Pulse Graphs R and C++11 1,085 commits 4 branches 4 releases Fetching contributors C++ 97.2% C 2.8% C++ C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags coerce feature/dynamic-symbol-lookup master userLevelDebugging Nothing to show v3.1.2.0 3.1.1 3.1.0.1 3.1.0 Nothing to show New pull request Latest commit aa1144e Mar 10, 2016 kevinushey Merge pull request #229 from lukasstadler/master … do not use CAR(...) as left hand side of assignment Permalink Failed to load latest commit information. R moving attributes out. will use impl from the attributes package later Mar 11, 2014 inst/include do not use CAR(...) as left hand side of assignment Mar 10, 2016 man less doc Apr 10, 2014 .Rbuildignore wrong place Jul 22, 2014 .gitignore wrong place Jul 22, 2014 .travis.yml switch to gcc 4.9 on travis Nov 16, 2014 DESCRIPTION rownames(DataFrame). #210 Nov 14, 2014 LICENSE switch to more permissive license. closes #129 Apr 8, 2014 NAMESPACE moving attributes out. will use impl from the attributes package later Mar 11, 2014 NEWS.md added Matrix += ... Feb 23, 2015 README.md Add link to mailing list Apr 29, 2014 README.md Rcpp11 Rcpp11 is a complete redesign of Rcpp, targetting C++11. Feel free to ask questions, discuss feature requests and otherwise on the mailing list. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/Rcpp11/Rcpp11"	"Rcpp11 is a complete redesign of Rcpp, targetting C++11."	"true"
"High Performance"	"compiler"	"http://stat.ethz.ch/R-manual/R-devel/library/compiler/html/compile.html"	"speeding up your R code using the JIT"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"R: Byte Code Compiler compile {compiler} R Documentation Byte Code Compiler Description These functions provide an interface to a byte code compiler for R. Usage  cmpfun(f, options = NULL) compile(e, env = .GlobalEnv, options = NULL) cmpfile(infile, outfile, ascii = FALSE, env = .GlobalEnv,         verbose = FALSE, options = NULL) loadcmp(file, envir = .GlobalEnv, chdir = FALSE) disassemble(code) enableJIT(level) compilePKGS(enable) getCompilerOption(name, options) setCompilerOptions(...)  Arguments f a closure. options list of named compiler options env the top level environment for the compiling. file,infile,outfile pathnames; outfile defaults to infile with a .Rc extension in place of any existing extension. ascii logical; should the compiled file be saved in ascii format? verbose logical; should the compiler show what is being compiled envir environment to evaluate loaded expressions in. chdir logical; change directory before evaluation? code byte code expression or compiled closure e expression to compile level integer; the JIT level to use enable logical; enable compiling packages if TRUE name character string; name of option to return ... named compiler options to set Details The function cmpfun compiles the body of a closure and returns a new closure with the same formals and the body replaced by the compiled body expression. compile compiles an expression into a byte code object; the object can then be evaluated with eval. cmpfile parses the expression in infile, compiles them, and writes the compiled expressions to outfile. If outfile is not provided, it is formed from infile by replacing or appending a .Rc suffix. loadcmp is used to load compiled files. It is similar to sys.source, except that its default loading environment is the global environment rather than the base environment. disassemble produces a printed representation of the code that may be useful to give a hint of what is going on. enableJIT enables or disables just-in-time (JIT) compilation. JIT is disabled if the argument is 0. If enable is 1 then closures are compiled before their first use. If enable is 2, then in addition closures are also compiled before they are duplicated (useful for some packages, like lattice, that store closures in lists). If enable is 3 then in addition all loops are compiled before they are executed. JIT level 3 requires optimization level 2 or 3. JIT can also be enabled by starting R with the environment variable R_ENABLE_JIT set to one of these values. Calling enableJIT with a negative argument returns the current JIT level. compilePKGS enables or disables compiling packages when they are installed. This requires that the package use lazy loading as compilation occurs as functions are written to the lazy loading data base. This can also be enabled by starting R with the environment variable R_COMPILE_PKGS set to a positive integer value. Currently the compiler warns about a variety of things. It does this by using cat to print messages. Eventually this should use the condition handling mechanism. The options argument can be used to control compiler operation. There are currently three options: optimize, suppressAll, and suppressUndefined. optimize specifies the optimization level, which can be an integer form 0 to 3. suppressAll should be a scalar logical; if TRUE no messages will be shown. suppressUndefined can be TRUE to suppress all messages about undefined variables, or it can be a character vector of the names of variables for which messages should not be shown. getCompilerOption returns the value of the specified option. The default value is returned unless a value is supplied in the options argument; the options argument is primarily for internal use. setCompilerOption sets the default option values. It returns a named list of the previous values. Calling the compiler a byte code compiler is actually a bit of a misnomer: the external representation of code objects currently uses int operands, and when compiled with gcc the internal representation is actually threaded code rather than byte code. Author(s) Luke Tierney Examples  # a simple example f <- function(x) x+1 fc <- cmpfun(f) fc(2) disassemble(fc)  # old R version of lapply la1 <- function(X, FUN, ...) {     FUN <- match.fun(FUN)     if (!is.list(X)) 	X <- as.list(X)     rval <- vector(""list"", length(X))     for(i in seq(along = X)) 	rval[i] <- list(FUN(X[[i]], ...))     names(rval) <- names(X)		  # keep `names' !     return(rval) } # a small variation la2 <- function(X, FUN, ...) {     FUN <- match.fun(FUN)     if (!is.list(X)) 	X <- as.list(X)     rval <- vector(""list"", length(X))     for(i in seq(along = X)) {         v <- FUN(X[[i]], ...)         if (is.null(v)) rval[i] <- list(v)         else rval[[i]] <- v     }     names(rval) <- names(X)		  # keep `names' !     return(rval) } # Compiled versions la1c <- cmpfun(la1) la2c <- cmpfun(la2) # some timings x <- 1:10 y <- 1:100  system.time(for (i in 1:10000) lapply(x, is.null)) system.time(for (i in 1:10000) la1(x, is.null)) system.time(for (i in 1:10000) la1c(x, is.null)) system.time(for (i in 1:10000) la2(x, is.null)) system.time(for (i in 1:10000) la2c(x, is.null)) system.time(for (i in 1:1000) lapply(y, is.null)) system.time(for (i in 1:1000) la1(y, is.null)) system.time(for (i in 1:1000) la1c(y, is.null)) system.time(for (i in 1:1000) la2(y, is.null)) system.time(for (i in 1:1000) la2c(y, is.null))   [Package compiler version 3.3.0 Index]"	"null"	"null"	"speeding up your R code using the JIT"	"true"
"Language API"	"rJava"	"http://cran.r-project.org/web/packages/rJava/"	"Low-level R to Java interface."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rJava rJava: Low-Level R to Java Interface Low-level interface to Java VM very much like .C/.Call and friends. Allows creation of objects, calling methods and accessing fields. Version: 0.9-8 Depends: R (≥ 2.5.0), methods Published: 2016-01-07 Author: Simon Urbanek Maintainer: Simon Urbanek <simon.urbanek at r-project.org> BugReports: NA License: GPL-2 URL: http://www.rforge.net/rJava/ NeedsCompilation: yes SystemRequirements: Java JDK 1.2 or higher (for JRI/REngine JDK 1.4 or higher), GNU make Materials: NEWS In views: HighPerformanceComputing CRAN checks: rJava results Downloads: Reference manual: rJava.pdf Package source: rJava_0.9-8.tar.gz Windows binaries: r-devel: rJava_0.9-8.zip, r-release: rJava_0.9-8.zip, r-oldrel: rJava_0.9-8.zip OS X Mavericks binaries: r-release: rJava_0.9-8.tgz, r-oldrel: rJava_0.9-8.tgz Old sources: rJava archive Reverse dependencies: Reverse depends: arulesNBMiner, bartMachine, bartMachineJARs, CollapsABEL, collUtils, Crossover, edeR, ENMeval, extraTrees, gemtc.jar, glmulti, gMCP, helloJavaWorld, InSilicoVA, iplots, JGR, KoNLP, mallet, MSIseq, mwa, rCBA, rcdklibs, rChoiceDialogs, rDNA, REPPlab, rGroovy, RH2, RImpala, RJDBC, rJPSGCS, RJSDMX, rJython, rkafka, rkafkajars, rmcfs, RMOA, RMongo, RNCBIEUtilsLibs, RNetLogo, ror, rrepast, rsubgroup, SBRect, scagnostics, sjdbc, spcosa, streamMOA, venneuler, x.ent, xlsx, xlsxjars Reverse imports: asymmetry, BACA, boilerpipeR, coreNLP, Deducer, DeducerExtras, expands, G2Sd, hive, llama, mailR, mutossGUI, Myrrix, Myrrixjars, NoiseFiltersR, openNLP, openNLPdata, OpenStreetMap, PortfolioEffectEstim, PortfolioEffectHFT, prcbench, rcdk, ReporteRs, ReporteRsjars, RFreak, RKEA, RKEAjars, RMOAjars, RSQLServer, RWeka, RWekajars, RxnSim, subspace, subspaceMOA, TSsdmx, wordnet, XLConnect, XLConnectJars Reverse suggests: CommonJavaJars, dismo, ecospat, GSIF, JavaGD, partykit, polmineR, rCMA, stream, svMisc, utiml, zooimage"	"null"	"null"	"Low-level R to Java interface."	"true"
"Language API"	"jvmr"	"https://github.com/cran/jvmr"	"Integration of R, Java, and Scala."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"11"	"2"	"9"	"GitHub - cran/jvmr: Integration of R, Java, and Scala Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 2 Star 11 Fork 9 cran/jvmr Code Pull requests 0 Pulse Graphs Integration of R, Java, and Scala http://dahl.byu.edu/software/jvmr/ 4 commits 1 branch 6 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show R-3.0.3 R-3.0.2 2.11.2.1 2.11.1.1 1.0.4 1.0.3 Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. R inst/doc java man DESCRIPTION LICENSE MD5 NAMESPACE NEWS Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/cran/jvmr"	"Integration of R, Java, and Scala."	"true"
"Language API"	"rJython"	"http://cran.r-project.org/web/packages/rJython/index.html"	"R interface to Python via Jython."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rJython rJython: R interface to Python via Jython R interface to Python via Jython allowing R to call python code. Version: 0.0-4 Depends: rJava (≥ 0.8-1), rjson (≥ 0.1.9) Published: 2012-07-30 Author: G. Grothendieck and Carlos J. Gil Bellosta (authors of Jython itself are Jim Hugunin, Barry Warsaw, Samuele Pedroni, Brian Zimmer, Frank Wierzbicki and others; Bob Ippolito is the author of the simplejson Python module) Maintainer: Carlos J. Gil Bellosta <cgb at datanalytics.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] (see file LICENSE) URL: https://r-forge.r-project.org/projects/rjython/ NeedsCompilation: no SystemRequirements: Java Materials: NEWS CRAN checks: rJython results Downloads: Reference manual: rJython.pdf Package source: rJython_0.0-4.tar.gz Windows binaries: r-devel: rJython_0.0-4.zip, r-release: rJython_0.0-4.zip, r-oldrel: rJython_0.0-4.zip OS X Mavericks binaries: r-release: rJython_0.0-4.tgz, r-oldrel: rJython_0.0-4.tgz Old sources: rJython archive Reverse dependencies: Reverse depends: edeR, rSymPy"	"null"	"null"	"R interface to Python via Jython."	"true"
"Language API"	"rPython"	"http://cran.r-project.org/web/packages/rPython/index.html"	"Package allowing R to call Python."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rPython rPython: Package Allowing R to Call Python Run Python code, make function calls, assign and retrieve variables, etc. from R. Version: 0.0-6 Depends: RJSONIO (≥ 0.7-3) OS_type: unix Published: 2015-11-15 Author: Carlos J. Gil Bellosta Maintainer: Carlos J. Gil Bellosta <cgb at datanalytics.com> BugReports: NA License: GPL-2 URL: http://rpython.r-forge.r-project.org/ NeedsCompilation: yes SystemRequirements: Python (>= 2.7) and Python headers and libraries (See the INSTALL file) Materials: INSTALL In views: NumericalMathematics CRAN checks: rPython results Downloads: Reference manual: rPython.pdf Package source: rPython_0.0-6.tar.gz Windows binaries: r-devel: not available, r-release: not available, r-oldrel: not available OS X Mavericks binaries: r-release: rPython_0.0-6.tgz, r-oldrel: rPython_0.0-6.tgz Old sources: rPython archive Reverse dependencies: Reverse imports: P2C2M Reverse suggests: dMod, smoof Reverse enhances: bastah"	"null"	"null"	"Package allowing R to call Python."	"true"
"Language API"	"runr"	"https://github.com/yihui/runr"	"Run Julia and Bash from R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"47"	"9"	"14"	"GitHub - yihui/runr: Run external programs from R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 9 Star 47 Fork 14 yihui/runr Code Issues 7 Pull requests 2 Pulse Graphs Run external programs from R 59 commits 1 branch 0 releases Fetching contributors R 64.8% Python 16.5% Julia 12.7% Shell 6.0% R Python Julia Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit ea0ce11 Jun 28, 2016 yihui close yihui/knitr-jekyll#11: use the new syntax to parse integer from… … … string Permalink Failed to load latest commit information. R scoket --> socket May 28, 2015 inst/lang close yihui/knitr-jekyll#11: use the new syntax to parse integer from… Jun 28, 2016 man run python in R May 28, 2015 .Rbuildignore remove readme.md from .Rbuildignore Oct 13, 2014 .gitignore rstudio setup Jul 23, 2013 .travis.yml update travis script (deploy to xran) Jan 9, 2015 DESCRIPTION bump version Jun 8, 2015 NAMESPACE proc_python.Rd May 17, 2015 README.md tweak readme Jun 8, 2015 runr.Rproj new rstudio project options Sep 8, 2014 README.md runr This is an R package providing mechanisms to run with external programs such as Julia, Shell, and Python, etc. The basic idea is to open a background process, pipe the source code into the process, evaluate it, and obtain the printed results. At the moment, there are only a few very simple engines: a Julia engine (using TCP sockets; an example) a bash engine (using TCP sockets; an example) a python engine(using TCP sockets; an example) Contributions welcome! This package was originally designed for the language engines in knitr, but it might be useful for more general cases. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/yihui/runr"	"Run Julia and Bash from R."	"true"
"Language API"	"RJulia"	"https://github.com/armgong/RJulia"	"R package Call Julia."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"99"	"19"	"16"	"GitHub - armgong/rjulia: R package which integrating R and Julia Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 19 Star 99 Fork 16 armgong/rjulia Code Issues 4 Pull requests 1 Pulse Graphs R package which integrating R and Julia 283 commits 4 branches 0 releases 7 contributors C 62.5% R 33.3% Makefile 3.3% C++ 0.9% C R Makefile C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 0.3 master nextgen paper Nothing to show Nothing to show New pull request Latest commit ab737c5 Jun 29, 2016 armgong committed on GitHub Merge pull request #36 from phaverty/r2j … memcpy calls in R_Julia_MD had wrong data size Permalink Failed to load latest commit information. R one more debug tidy up Jun 20, 2016 demo use julia script to convert tuple object ,don't use simplevector anym… Aug 7, 2015 man fix last merge Aug 1, 2015 src Bugfix: memcpy calls in R_Julia_MD had wrong data size. Jun 28, 2016 tests Added basic unit testing framework Jun 28, 2016 .Rbuildignore Other miscellanea (no functionality changes!) Feb 3, 2015 .gitignore Update .gitignore Oct 11, 2014 Contributors modify some docs and move alltestcase to test because it is for stres… Aug 7, 2015 DESCRIPTION Added basic unit testing framework Jun 29, 2016 LICENSE Initial commit Apr 8, 2014 NAMESPACE export isJuliaOk() Aug 1, 2015 README.md Update README.md Jun 19, 2016 RJulia.Rproj add .Rproj and tweak style. Oct 11, 2014 todo.txt modify some docs and move alltestcase to test because it is for stres… Aug 7, 2015 README.md rjulia rjulia provides an interface between R and Julia. It allows a user to run a script in Julia from R, and maps objects between the two languages. It currently supports use on Linux and Windows (both R and RGUI), but build on Windows only for advance users. Installing Install julia v0.4 and R version >=3.1.0. Add <juliainstalldir>/bin to your system PATH variable if needed. Install the rjulia package. If you're using the v0.3 branch of julia, use the ""0.3"" branch of rjulia. You can install rjulia on Linux using the devtools package: install.packages(""devtools"") #if not already installed devtools::install_github(""armgong/rjulia"", ref=""master"")# or ref=""0.3"" if using Julia v0.3 You can install rjulia on Windows using the Rtools and devtools package : install.packages(""devtools"") #if not already installed devtools::install_github(""armgong/rjulia"", ref=""master"", args = ""--no-multiarch"")# or ref=""0.3"" if using Julia v0.3 If you want to be able to use R or Julia objects that contain NA values or factors or data frames, the Julia packages DataArrays and DataFrames must be installed. Simple example library(rjulia) julia_init() #**(will auto find your julia home)** julia_eval(""1+1"") Demo Please see the *.R files in the demo/ directory, or use     demo(package = ""rjulia"") Docs Help files are now done, mostly with examples. Know Problems The Julia api rapidly changes between releases. Each time you upgrade or downgrade Julia, rjulia needs to be recompiled and reinstalled, e.g. with devtools::install_github. Due to RStudio issue (https://github.com/armgong/rjulia/issues/16), when using rjulia on Windows 64bit, RStudio-0.98.1103 is recommended http://download1.rstudio.org/RStudio-0.98.1103.zip . Due to gcc toolchain issue , when using rjulia on Windows, it will crash R, to solve this, download unoffical build julia from https://github.com/armgong/julia-64-build-with-mingw-builds-for-R . Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/armgong/RJulia"	"R package Call Julia."	"true"
"Language API"	"RinRuby"	"https://sites.google.com/a/ddahl.org/rinruby-users/"	"a Ruby library that integrates the R interpreter in Ruby."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"RinRuby Search this site Welcome to RinRuby Installation Quick Start Examples:    Gettysburg    Regression    Tim Churches Complete Documentation Welcome to RinRuby RinRuby is a Ruby library that integrates the R interpreter in Ruby, making R's statistical routines and graphics available within Ruby.  The library consists of a single Ruby script that is simple to install and does not require any special compilation or installation of R.  Since the library is 100% pure Ruby, it works on a variety of operating systems, Ruby implementations, and versions of R.  RinRuby's methods are simple, making for readable code.  This website describes RinRuby usage, provides comprehensive documentation, gives several examples, and discusses RinRuby's implementation. Links:   Installation    Quick Start    Examples:         Gettysburg         Regression         Tim Churches    Complete Documentation (from paper in Journal of Statistical Software) Authors:David B. Dahl Associate Professor Department of Statistics Brigham Young University E-mail: dahl@stat.byu.edu URL: http://www.ddahl.org Scott Crawford APL Department of Statistics University of Wyoming Citation: @article{Dahl:Crawford:2009,   author =    ""David B. Dahl and Scott Crawford"",   title =    ""RinRuby: Accessing the R Interpreter from Pure Ruby"",   journal =    ""Journal of Statistical Software"",   volume =    ""29"",   number =    ""4"",   pages =    ""1--18"",   day =      ""26"",   month =    ""11"",   year =     ""2009"",   CODEN =    ""JSSOBK"",   ISSN =     ""1548-7660"",   bibdate =    ""2008-11-26"",   URL =      ""http://www.jstatsoft.org/v29/i04"",   accepted =    ""2008-11-26"",   acknowledgement = """",   keywords =    """",   submitted =    ""2008-07-03"", } Logo elements are from Ruby and R projects, which have not endorsed RinRuby. Sign in|Recent Site Activity|Report Abuse|Print Page|Powered By Google Sites"	"null"	"null"	"a Ruby library that integrates the R interpreter in Ruby."	"true"
"Language API"	"R.matlab"	"http://cran.r-project.org/web/packages/R.matlab/index.html"	"Read and write of MAT files together with R-to-MATLAB connectivity."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"17"	"5"	"6"	"GitHub - HenrikBengtsson/R.matlab: R package: R.matlab Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 5 Star 17 Fork 6 HenrikBengtsson/R.matlab Code Issues 5 Pull requests 0 Pulse Graphs R package: R.matlab https://cran.r-project.org/package=R.matlab 301 commits 2 branches 10 releases 5 contributors R 86.0% Matlab 6.8% Makefile 6.6% Java 0.6% R Matlab Makefile Java Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags develop master Nothing to show 3.6.0 3.5.1 3.5.0 3.4.0 3.3.0 3.2.0 3.1.1 3.0.1 3.0.0 2.2.3 Nothing to show New pull request Latest commit 5ffbee3 Jul 5, 2016 HenrikBengtsson Merge branch 'release/3.6.0' Permalink Failed to load latest commit information. .make Updated pkg config files Feb 2, 2016 R SPEEDUP: Test of 'fixNames' is only done once per writeMat()/readMat(… Jul 3, 2016 incl UPDATE: Replace broken links to www.ci.tuwien.ac.at with https://www.… Jul 5, 2016 inst The MatlabServer.m script now outputs verbose/debug messages to stand… Apr 5, 2016 java Dropped never used README.txt Oct 10, 2014 man Bump to release version Jul 5, 2016 tests writeMat() gained argument (previous behavior was basically fixNames=… Jul 3, 2016 .Rbuildignore Exclude README from package Feb 2, 2016 .covr.R Updated pkg config files Feb 3, 2016 .gitignore Updated pkg config files Feb 3, 2016 .travis.yml Travis CI: Using modern container based approach Jul 3, 2016 DESCRIPTION Bump to release version Jul 5, 2016 Makefile Updated, cleanups and more Feb 24, 2015 NAMESPACE WORKAROUND: Keep readMat.default() as part of public API for now beca… Jul 5, 2016 NEWS Bump to release version Jul 5, 2016 README.md Update README [ci skip] Jul 3, 2016 appveyor.yml CI: Modernize Apr 17, 2016 cran-comments.md correction Mar 27, 2016 README.md R.matlab: Read and Write MAT Files and Call MATLAB from Within R Installation R package R.matlab is available on CRAN and can be installed in R as: install.packages('R.matlab') Pre-release version To install the pre-release version that is available in branch develop, use: source('http://callr.org/install#HenrikBengtsson/R.matlab@develop') This will install the package from source. Software status Resource: CRAN Travis CI Appveyor Platforms: Multiple Linux & OS X Windows R CMD check Test coverage Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/HenrikBengtsson/R.matlab"	"Read and write of MAT files together with R-to-MATLAB connectivity."	"true"
"Language API"	"RcppOctave"	"https://github.com/renozao/RcppOctave"	"Seamless Interface to Octave and Matlab."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"8"	"3"	"2"	"GitHub - renozao/RcppOctave: Seamless Interface to Octave -- and Matlab code Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 3 Star 8 Fork 2 renozao/RcppOctave Code Issues 4 Pull requests 0 Pulse Graphs Seamless Interface to Octave -- and Matlab code 198 commits 5 branches 0 releases Fetching contributors R 52.2% C 26.2% C++ 19.5% TeX 1.1% Matlab 0.4% Makefile 0.4% Shell 0.2% R C C++ TeX Matlab Makefile Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags develop feature/Rfun gh-pages local-rforge master Nothing to show Nothing to show New pull request Latest commit da9d028 Oct 6, 2015 renozao Merge branch 'release/0.18.1' Permalink Failed to load latest commit information. .settings R demo exec inst man-roxygen Rd: update all, to ensure no call is made for incompatible platforms Oct 5, 2015 man src Now installs on both Windows architecture Sep 22, 2015 staticdocs tests vignettes .Rbuildignore .gitignore .project .travis.yml DESCRIPTION NAMESPACE NEWS README Now builds and install on both Windows platforms Sep 22, 2015 README.md cleanup Now builds and install on both Windows platforms Sep 22, 2015 cleanup.win configure configure.ac pkg.Rproj Add RStudio project file Oct 3, 2013 README.md Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/renozao/RcppOctave"	"Seamless Interface to Octave and Matlab."	"true"
"Language API"	"RSPerl"	"http://www.omegahat.org/RSPerl/"	"A bidirectional interface for calling R from Perl and Perl from R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"A bidirectional interface for calling R from Perl and Perl from R."	"false"
"Language API"	"V8"	"https://github.com/jeroenooms/V8"	"Embedded JavaScript Engine."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"57"	"11"	"6"	"GitHub - jeroenooms/V8: Embedded JavaScript Engine for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 11 Star 57 Fork 6 jeroenooms/V8 Code Issues 7 Pull requests 0 Pulse Graphs Embedded JavaScript Engine for R http://cran.r-project.org/package=V8 280 commits 3 branches 13 releases 4 contributors HTML 92.3% C++ 5.0% R 2.5% C 0.2% HTML C++ R C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bundled gh-pages master Nothing to show v1.0.3 v1.0.2 v1.0.0 v0.10 v0.9 v0.8 v0.7 v0.6 v0.5 v0.4 v0.3 v0.2 v0.1 Nothing to show New pull request Latest commit bc415d4 Jul 8, 2016 jeroenooms Enable valgrind on Travis Permalink Failed to load latest commit information. R Spell check Apr 3, 2016 inst Update configure script and render vignette Jun 28, 2016 man Undo Jun 29, 2016 old remove references to new_context() Mar 27, 2016 src Switch to 'new' and 'delete' in C++ Jul 5, 2016 tests Add callback unit tests Jan 28, 2016 tools Typos Mar 28, 2016 vignettes Use plain HTTP imgage host Jun 13, 2016 .Rbuildignore build ignore Apr 3, 2016 .gitignore Remove static libraries Oct 17, 2015 .travis.yml Enable valgrind on Travis Jul 8, 2016 DESCRIPTION Switch to 'new' and 'delete' in C++ Jul 5, 2016 LICENSE 2016 bump Jan 3, 2016 NAMESPACE Roxygenize + vignette Feb 1, 2016 NEWS Switch to 'new' and 'delete' in C++ Jul 5, 2016 README.md Syntaxx Apr 12, 2016 V8.Rproj EOL fix Dec 4, 2014 appveyor.yml Add appveyor Mar 31, 2016 configure Update configure script and render vignette Jun 27, 2016 configure.win copy files from old repo Dec 3, 2014 README.md V8 Embedded JavaScript Engine for R An R interface to Google's open source JavaScript engine. V8 is written in C++ and implements ECMAScript as specified in ECMA-262, 5th edition. In addition, this package implements typed arrays as specified in ECMA 6 used for high-performance computing and libraries compiled with 'emscripten'. Documentation About the R package: Vignette: Introduction to V8 for R Vignette: Using NPM packages in V8 with browserify Hello World # Create a new context library(V8) ctx <- v8()  # Evaluate some code ctx$eval(""var foo = 123"") ctx$eval(""var bar = 456"") ctx$eval(""foo+bar"")  # Assign / get objects ctx$assign(""foo"", JS(""function(x){return x*x}"")) ctx$assign(""bar"", JS(""foo(9)"")) ctx$get(""bar"") Call functions from JavaScript libraries ctx <- V8::v8() ctx$source(""http://coffeescript.org/extras/coffee-script.js"") jscode <- ctx$call(""CoffeeScript.compile"", ""square = (x) -> x * x"", list(bare = TRUE)) ctx$eval(jscode) ctx$call(""square"", 9) Installation Binary packages for OS-X or Windows can be installed directly from CRAN: install.packages(""V8"") Installation from source on Linux requires libv8 3.14 or 3.15 (no newer!). On Debian or Ubuntu use libv8-dev: sudo apt-get install -y libv8-dev  On Fedora we need v8-devel: sudo yum install v8-devel  On CentOS / RHEL we install v8-devel via EPEL: sudo yum install epel-release sudo yum install v8-devel  On OS-X use v8-315 (not regular v8) from Homebrew versions: brew tap homebrew/versions brew install v8-315  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jeroenooms/V8"	"Embedded JavaScript Engine."	"true"
"Language API"	"htmlwidgets"	"http://www.htmlwidgets.org/"	"Bring the best of JavaScript data visualization to R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"400"	"48"	"115"	"GitHub - ramnathv/htmlwidgets: HTML Widgets for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 48 Star 400 Fork 115 ramnathv/htmlwidgets Code Issues 43 Pull requests 8 Wiki Pulse Graphs HTML Widgets for R http://htmlwidgets.org 387 commits 25 branches 0 releases 13 contributors R 61.2% JavaScript 38.8% R JavaScript Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bugfix/ioslides-resizing bugfix/static-in-shiny-mode error-rendering feature/as-iframe-v2 feature/file-dependency feature/html-widget-class feature/iframe feature/pandoc-stack-size-option feature/pandoc-variable-stack-size feature/rstudio-file-edit feature/simpler-widgets feature/slide-changed-resize feature/uuid-widget-id gh-pages-/js-api gh-pages joe/bugfix/inline-arg-reorder joe/bugfix/resize-on-shown-bs3 joe/bugfix/resize-rendervalue joe/feature/onrender-data master move-templates-to-files no-slide-shown-resize shiny-resize sizing v0.3.2-CRAN Nothing to show Nothing to show New pull request Latest commit 15d2b11 Jul 13, 2016 jjallaire remove note about instance data Permalink Failed to load latest commit information. R ensure that scaffoldWidget opens files correctly within RStudio Jul 12, 2016 inst Merge branch 'master' of github.com:ramnathv/htmlwidgets Jul 13, 2016 man Add ability for onRender to take arbitrary R data Apr 15, 2016 vignettes remove note about instance data Jul 13, 2016 .Rbuildignore additional work on docs and other things required to pass R CMD check Dec 3, 2014 .gitignore initial commit Jul 17, 2014 DESCRIPTION add `elementId` to R template function, bump version to `0.6.2` Jun 15, 2016 LICENSE update dates: DESCRIPTION and LICENSE Feb 25, 2016 NAMESPACE explicit imports for functions in utils Feb 25, 2016 README.md fix typo in README Jul 22, 2015 htmlwidgets.Rproj additional work on docs and other things required to pass R CMD check Dec 3, 2014 README.md HTML Widgets for R The htmlwidgets package provides a framework for easily creating R bindings to JavaScript libraries. Widgets created using the framework can be: Used at the R console for data analysis just like conventional R plots (via RStudio Viewer). Seamlessly embedded within R Markdown documents and Shiny web applications. Saved as standalone web pages for ad-hoc sharing via email, Dropbox, etc. There are already several R packages based on htmlwidgets, including: leaflet -- Interactive maps with OpenStreetMap dygraphs --- Interactive time series visualization networkD3 --- Network visualization with D3 sparkline --- Small inline charts DT --- Tabular data via DataTables rthreejs -- Interactive 3D graphics The package was created in collaboration by Ramnath Vaidyanathan, Joe Cheng, JJ Allaire, Yihui Xie, and Kenton Russell. We've all spent countless hours building bindings between R and the web, and were motivated to create a framework that made this as easy as possible for all R developers. Getting Started If you know R and a bit of JavaScript it's very straightforward to create your own widgets. You can install the htmlwidgets package from CRAN: install.packages(""htmlwidgets"") You can alternatively install the development version of htmlwidgets from GitHub as follows: devtools::install_github('ramnathv/htmlwidgets') There are several articles on the htmlwidgets website that will help you get you off the ground quickly and take advantage of all of the capabilities of the framework: Introduction to HTML Widgets HTML Widget Sizing HTML Widgets: Advanced Topics Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ramnathv/htmlwidgets"	"Bring the best of JavaScript data visualization to R."	"true"
"Language API"	"rpy2"	"http://rpy.sourceforge.net/"	"Python interface for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"rpy2 The rpy2 site has moved to http://rpy2.bitbucket.org. You will be redirected in 30 s econds. Get it on Pypi The rpy2 site has moved to http://rpy2.bitbucket.org. You will be redirected in 30 seconds. About rpy2 is an interface to R running embedded in a Python process. The project is mature, stable, and widely used. Source and installation Released source packages are available on PyPi. Installing should be as easy as pip install rpy2 The source code is also in a public repository on bitbucket. Documentation More information can be found in the documentation. License The same license as R: GPLv2 or greater. Questions and issues Consider having a look at the documentation. Otherwise wuestions should preferably be asked on the rpy mailing-list on SourceForge, or on StackOverflow. Bugs, or wishes, can also go to the bitbucket page for the project. Time travel If looking for rpy or the old website, it was moved to here. © L. Gautier - 2014-2015"	"null"	"null"	"Python interface for R."	"true"
"Database Management"	"RODBC"	"http://cran.r-project.org/web/packages/RODBC/"	"ODBC database access for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RODBC RODBC: ODBC Database Access An ODBC database interface. Version: 1.3-13 Depends: R (≥ 3.0.0) Imports: stats Published: 2016-04-14 Author: Brian Ripley [aut, cre], Michael Lapsley [aut] (1999 to Oct 2002) Maintainer: Brian Ripley <ripley at stats.ox.ac.uk> BugReports: NA License: GPL-2 | GPL-3 URL: NA NeedsCompilation: yes SystemRequirements: An ODBC3 driver manager and drivers. Materials: ChangeLog CRAN checks: RODBC results Downloads: Reference manual: RODBC.pdf Vignettes: ODBC Connectivity Package source: RODBC_1.3-13.tar.gz Windows binaries: r-devel: RODBC_1.3-13.zip, r-release: RODBC_1.3-13.zip, r-oldrel: RODBC_1.3-13.zip OS X Mavericks binaries: r-release: not available, r-oldrel: not available Old sources: RODBC archive Reverse dependencies: Reverse depends: ibmdbR, ImportExport, mixsep, RODBCext, RODM, stacomirtools, toaster Reverse imports: RODBCDBI, TSodbc Reverse suggests: biglm, BiodiversityR, convey, drfit, ETLUtils, icd, mitools, monitoR, ProjectTemplate, rattle, RcmdrPlugin.IPSUR, RcmdrPlugin.temis, REDCapR, rioja, RODM, rpart.utils, soilDB, sos, survey, TSdata Reverse enhances: sqlutils"	"null"	"null"	"ODBC database access for R."	"true"
"Database Management"	"DBI"	"https://github.com/rstats-db/DBI"	"Defines a common interface between the R and database management systems."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"59"	"18"	"21"	"GitHub - rstats-db/DBI: A database interface (DBI) definition for communication between R and RDBMSs Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 18 Star 59 Fork 21 rstats-db/DBI Code Issues 50 Pull requests 1 Wiki Pulse Graphs A database interface (DBI) definition for communication between R and RDBMSs 303 commits 4 branches 7 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags feature/revdep master production tests Nothing to show v0.4 v0.4-2 v0.4-1 v0.3.1.9010 v0.3.1.9009 v.0.3.1 v0.3 Nothing to show New pull request Latest commit 9202aa5 Jul 10, 2016 krlmlr adapt test Permalink Failed to load latest commit information. R comment Jul 9, 2016 man fixed conflicts Jun 14, 2016 revdep update revdep check (noop) Apr 20, 2016 tests adapt test Jul 10, 2016 vignettes suggest importing DBI Dec 23, 2015 .Rbuildignore un-ignore NEWS Apr 30, 2016 .Rinstignore Source from 0.2-6 release Oct 16, 2013 .gitignore Start on implementing backend Jan 27, 2015 .travis.yml test multiple R versions Apr 30, 2016 DBI.Rproj project settings Mar 2, 2016 DESCRIPTION bump version to 0.4-2 Jun 8, 2016 NAMESPACE fixed conflicts Jun 14, 2016 NEWS.md nit Jun 15, 2016 README.md add CRAN status badge May 2, 2016 cran-comments.md wording May 7, 2016 README.md DBI The DBI package defines a common interface between the R and database management systems (DBMS). The interface defines a small set of classes and methods similar in spirit to Perl's DBI, Java's JDBC, Python's DB-API, and Microsoft's ODBC. It defines a set of classes and methods defines what operations are possible and how they are performed: connect/disconnect to the DBMS create and execute statements in the DBMS extract results/output from statements error/exception handling information (meta-data) from database objects transaction management (optional) DBI separates the connectivity to the DBMS into a ""front-end"" and a ""back-end"". Applications use only the exposed ""front-end"" API. The facilities that communicate with specific DBMSs (SQLite, MySQL, PostgreSQL, MonetDB, etc.) are provided by ""drivers"" (other packages) that get invoked automatically through S4 methods. The following example illustrates some of the DBI capabilities: library(DBI) # Create an ephemeral in-memory RSQLite database con <- dbConnect(RSQLite::SQLite(), dbname = "":memory:"")  dbListTables(con) dbWriteTable(con, ""mtcars"", mtcars) dbListTables(con)  dbListFields(con, ""mtcars"") dbReadTable(con, ""mtcars"")  # You can fetch all results: res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") dbFetch(res) dbClearResult(res)  # Or a chunk at a time res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") while(!dbHasCompleted(res)){   chunk <- dbFetch(res, n = 5)   print(nrow(chunk)) } dbClearResult(res)  dbDisconnect(con) To install DBI: Get the released version from CRAN: install.packages(""DBI"") Get the development version from github: devtools::install_github(""rstats-db/DBI"") Discussions associated with DBI and related database packages take place on R-SIG-DB. Class structure There are four main DBI classes. Three which are each extended by individual database backends: DBIObject: a common base class for all DBI. DBIDriver: a base class representing overall DBMS properties. Typically generator functions instantiate the driver objects like RSQLite(), RPostgreSQL(), RMySQL() etc. DBIConnection: represents a connection to a specific database DBIResult: the result of a DBMS query or statement. All classes are virtual: they cannot be instantiated directly and instead must be subclassed. History The following history of DBI was contributed by David James, the driving force behind the development of DBI, and many of the packages that implement it. The idea/work of interfacing S (originally S3 and S4) to RDBMS goes back to the mid- and late 1990's in Bell Labs. The first toy interface I did was to implement John Chamber's early concept of ""Data Management in S"" (1991). The implementation followed that interface pretty closely and immediately showed some of the limitations when dealing with very large databases; if my memory serves me, the issue was the instance-based of the language back then, e.g., if you attached an RDBMS to the search() path and then needed to resolve a symbol ""foo"", you effectively had to bring all the objects in the database to check their mode/class, i.e., the instance object had the metadata in itself as attributes. The experiment showed that the S3 implementation of ""data management"" was not really suitable to large external RDBMS (probably it was never intended to do that anyway). (Note however, that since then, John and Duncan Temple Lang generalized the data management in S4 a lot, including Duncan's implementation in his RObjectTables package where he considered a lot of synchronization/caching issues relevant to DBI and, more generally, to most external interfaces). Back then we were working very closely with Lucent's microelectronics manufacturing --- our colleagues there had huge Oracle (mostly) databases that we needed to constantly query via SQL*Plus. My colleague Jake Luciani was developing advanced applications in C and SQL, and the two of us came up with the first implementation of S3 directly connecting with Oracle. What I remember is that the Linux PRO*C pre-compiler (that embedded SQL in C code) was very buggy --- we spent a lot of time looking for workarounds and tricks until we got the C interface running. At the time, other projects within Bell Labs began using MySQL, and we moved to MySQL (with the help of Doug Bates' student Saikat DebRoy, then a summer intern) with no intentions of looking back at the very difficult Oracle interface. It was at this time that I moved all the code from S3 methods to S4 classes and methods and begun reaching out to the S/R community for suggestions, ideas, etc. All (most) of this work was on Bell Labs versions of S3 and S4, but I made sure it worked with S-Plus. At some point around 2000 (I don't remember exactly when), I ported all the code to R regressing to S3 methods, and later on (once S4 classes and methods were available in R) I re-implemented everything back to S4 classes and methods in R (a painful back-and-forth). It was at this point that I decided to drop S-Plus altogether. Around that time, I came across a very early implementation of SQLite and I was quite interested and thought it was a very nice RDBMS that could be used for all kinds of experimentation, etc., so it was pretty easy to implement on top of the DBI. Within the R community, there were quite a number of people that showed interest on defining a common interface to databases, but only a few folks actually provided code/suggestions/etc. (Tim Keitt was most active with the dbi/PostgreSQL packages --- he also was considering what he called ""proxy"" objects, which was reminiscent of what Duncan had been doing). Kurt Hornick, Vincent Carey, Robert Gentleman, and others provided suggestions/comments/support for the DBI definition. By around 2003, the DBI was more or less implemented as it is today. I'm sure I'll forget some (most should be in the THANKS sections of the various packages), but the names that come to my mind at this moment are Jake Luciani (ROracle), Don MacQueen and other early ROracle users (super helpful), Doug Bates and his student Saikat DebRoy for RMySQL, Fei Chen (at the time a student of Prof. Ripley) also contributed to RMySQL, Tim Keitt (working on an early S3 interface to PostgrSQL), Torsten Hothorn (worked with mSQL and also MySQL), Prof. Ripley working/extending the RODBC package, in addition to John Chambers and Duncan Temple-Lang who provided very important comments and suggestions. Actually, the real impetus behind the DBI was always to do distributed statistical computing --- not to provide a yet-another import/export mechanism --- and this perspective was driven by John and Duncan's vision and work on inter-system computing, COM, CORBA, etc. I'm not sure many of us really appreciated (even now) the full extent of those ideas and concepts. Just like in other languages (C's ODBC, Java's JDBC, Perl's DBI/DBD, Python dbapi), R/S DBI was meant to unify the interfacing to RDBMS so that R/S applications could be developed on top of the DBI and not be hard coded to any one relation database. The interface I tried to follow the closest was the Python's DBAPI --- I haven't worked on this topic for a while, but I still feel Python's DBAPI is the cleanest and most relevant for the S language. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstats-db/DBI"	"Defines a common interface between the R and database management systems."	"true"
"Database Management"	"elastic"	"https://github.com/ropensci/elastic"	"Wrapper for the Elasticsearch HTTP API"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"101"	"11"	"20"	"GitHub - ropensci/elastic: R client for the Elasticsearch HTTP API Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 11 Star 101 Fork 20 ropensci/elastic Code Issues 20 Pull requests 0 Pulse Graphs R client for the Elasticsearch HTTP API 471 commits 4 branches 4 releases Fetching contributors R 99.8% Makefile 0.2% R Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags allowed-codes conn dsl master Nothing to show v0.6.0 v0.5.0 v0.4.0 v0.3.0 Nothing to show New pull request Latest commit 56dd912 Jul 12, 2016 sckott fixed some missing params Permalink Failed to load latest commit information. R fixed some missing params Jul 12, 2016 inst #108 added termvectors and mtermvectors fxns Jul 12, 2016 man-roxygen added note about default max for the size parameter Apr 8, 2016 man fixed some missing params Jul 12, 2016 tests #108 added termvectors and mtermvectors fxns Jul 12, 2016 vignettes updated readme, vignettes, fix more urls Jan 6, 2016 .Rbuildignore woops, tests not test, ignoring tests on travis for now May 23, 2016 .gitignore added msearch for multi-search, and tests, fix #103 Jan 5, 2016 .travis.yml never notify for travis via email, fix badge alignment in readme May 10, 2016 CONDUCT.md readme update, added code of conduct Jan 6, 2016 DESCRIPTION #108 added termvectors and mtermvectors fxns Jul 12, 2016 LICENSE bumped license year to 2016 Jan 3, 2016 Makefile updated makefile with new intro vignette lines Jan 27, 2015 NAMESPACE #108 added termvectors and mtermvectors fxns Jul 12, 2016 NEWS.md updated news, bumped v to cran version, udpated searchapis man page Jan 6, 2016 README.Rmd updated readme for newest elasticsearch version 2.3.4 Jul 11, 2016 README.md updated readme for newest elasticsearch version 2.3.4 Jul 11, 2016 cran-comments.md fix url in description, update cran comments Jan 7, 2016 elastic.Rproj added rproj files and git ignoring Sep 15, 2014 es_matrix_travis.yml falling back to just testing es v2 for now Nov 15, 2015 README.md elastic A general purpose R interface to Elasticsearch Elasticsearch DSL Also check out elasticdsl - an R DSL for Elasticsearch - https://github.com/ropensci/elasticdsl Elasticsearch info Elasticsearch home page API docs Compatibility This client is developed following the latest stable releases, currently v2.3.4. It is generally compatible with older versions of Elasticsearch. Unlike the Python client, we try to keep as much compatibility as possible within a single version of this client, as that's an easier setup in R world. Security You're fine running ES locally on your machine, but be careful just throwing up ES on a server with a public IP address - make sure to think about security. Shield - This is a paid product provided by Elastic - so probably only applicable to enterprise users DIY security - there are a variety of techniques for securing your Elasticsearch. A number of resources are collected in a blog post - tools include putting your ES behind something like Nginx, putting basic auth on top of it, using https, etc. Installation Stable version from CRAN install.packages(""elastic"") Development version from GitHub install.packages(""devtools"") devtools::install_github(""ropensci/elastic"") library('elastic') Install Elasticsearch Elasticsearch installation help w/ Docker Pull the official elasticsearch image docker pull elasticsearch  Then start up a container docker run -d -p 9200:9200 elasticsearch  Then elasticsearch should be available on port 9200, try curl localhost:9200 and you should get the familiar message indicating ES is on. If you're using boot2docker, you'll need to use the IP address in place of localhost. Get it by doing boot2docker ip. on OSX Download zip or tar file from Elasticsearch see here for download, e.g., curl -L -O https://download.elasticsearch.org/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/elasticsearch-2.3.4.tar.gz Extract: tar -zxvf elasticsearch-2.3.4.tar.gz Move it: sudo mv elasticsearch-2.3.4 /usr/local (replace version with your version) Navigate to /usr/local: cd /usr/local Delete symlinked elasticsearch directory: rm -rf elasticsearch Add shortcut: sudo ln -s elasticsearch-2.3.4 elasticsearch (replace version with your version) You can also install via Homebrew: brew install elasticsearch Note: for the 1.6 and greater upgrades of Elasticsearch, they want you to have java 8 or greater. I downloaded Java 8 from here http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html and it seemed to work great. Upgrading Elasticsearch I am not totally clear on best practice here, but from what I understand, when you upgrade to a new version of Elasticsearch, place old elasticsearch/data and elasticsearch/config directories into the new installation (elasticsearch/ dir). The new elasticsearch instance with replaced data and config directories should automatically update data to the new version and start working. Maybe if you use homebrew on a Mac to upgrade it takes care of this for you - not sure. Obviously, upgrading Elasticsearch while keeping it running is a different thing (some help here from Elastic). Start Elasticsearch Navigate to elasticsearch: cd /usr/local/elasticsearch Start elasticsearch: bin/elasticsearch I create a little bash shortcut called es that does both of the above commands in one step (cd /usr/local/elasticsearch && bin/elasticsearch). Get some data Elasticsearch has a bulk load API to load data in fast. The format is pretty weird though. It's sort of JSON, but would pass no JSON linter. I include a few data sets in elastic so it's easy to get up and running, and so when you run examples in this package they'll actually run the same way (hopefully). I have prepare a non-exported function useful for preparing the weird format that Elasticsearch wants for bulk data loads, that is somewhat specific to PLOS data (See below), but you could modify for your purposes. See make_bulk_plos() and make_bulk_gbif() here. Shakespeare data Elasticsearch provides some data on Shakespeare plays. I've provided a subset of this data in this package. Get the path for the file specific to your machine: shakespeare <- system.file(""examples"", ""shakespeare_data.json"", package = ""elastic"") Then load the data into Elasticsearch: docs_bulk(shakespeare) If you need some big data to play with, the shakespeare dataset is a good one to start with. You can get the whole thing and pop it into Elasticsearch (beware, may take up to 10 minutes or so.): curl -XGET https://www.elastic.co/guide/en/kibana/3.0/snippets/shakespeare.json > shakespeare.json curl -XPUT localhost:9200/_bulk --data-binary @shakespeare.json Public Library of Science (PLOS) data A dataset inluded in the elastic package is metadata for PLOS scholarly articles. Get the file path, then load: plosdat <- system.file(""examples"", ""plos_data.json"", package = ""elastic"") docs_bulk(plosdat) Global Biodiversity Information Facility (GBIF) data A dataset inluded in the elastic package is data for GBIF species occurrence records. Get the file path, then load: gbifdat <- system.file(""examples"", ""gbif_data.json"", package = ""elastic"") docs_bulk(gbifdat) GBIF geo data with a coordinates element to allow geo_shape queries gbifgeo <- system.file(""examples"", ""gbif_geo.json"", package = ""elastic"") docs_bulk(gbifgeo) More data sets There are more datasets formatted for bulk loading in the ropensci/elastic_data GitHub repository. Find it at https://github.com/ropensci/elastic_data Initialization The function connect() is used before doing anything else to set the connection details to your remote or local elasticsearch store. The details created by connect() are written to your options for the current session, and are used by elastic functions. connect(es_port = 9200) #> transport:  http  #> host:       127.0.0.1  #> port:      9200  #> headers (names):  NULL  #> username:  NULL  #> password:  NULL  #> errors:    simple  #> Elasticsearch (ES) details:    #>    name:                    Doctor Anthony Droom  #>    ES version:              2.3.4  #>    ES version timestamp:    2016-06-30T11:24:31Z  #>    ES build hash:           e455fd0c13dceca8dbbdbb1665d068ae55dabe3f  #>    lucene version:          5.5.0 Search Search the plos index and only return 1 result Search(index = ""plos"", size = 1)$hits$hits #> [[1]] #> [[1]]$`_index` #> [1] ""plos"" #>  #> [[1]]$`_type` #> [1] ""article"" #>  #> [[1]]$`_id` #> [1] ""0"" #>  #> [[1]]$`_score` #> [1] 1 #>  #> [[1]]$`_source` #> [[1]]$`_source`$id #> [1] ""10.1371/journal.pone.0007737"" #>  #> [[1]]$`_source`$title #> [1] ""Phospholipase C-β4 Is Essential for the Progression of the Normal Sleep Sequence and Ultradian Body Temperature Rhythms in Mice"" Search the plos index, and the article document type, sort by title, and query for antibody, limit to 1 result Search(index = ""plos"", type = ""article"", sort = ""title"", q = ""antibody"", size = 1)$hits$hits #> [[1]] #> [[1]]$`_index` #> [1] ""plos"" #>  #> [[1]]$`_type` #> [1] ""article"" #>  #> [[1]]$`_id` #> [1] ""568"" #>  #> [[1]]$`_score` #> NULL #>  #> [[1]]$`_source` #> [[1]]$`_source`$id #> [1] ""10.1371/journal.pone.0085002"" #>  #> [[1]]$`_source`$title #> [1] ""Evaluation of 131I-Anti-Angiotensin II Type 1 Receptor Monoclonal Antibody as a Reporter for Hepatocellular Carcinoma"" #>  #>  #> [[1]]$sort #> [[1]]$sort[[1]] #> [1] ""1"" Get documents Get document with id=1 docs_get(index = 'plos', type = 'article', id = 4) #> $`_index` #> [1] ""plos"" #>  #> $`_type` #> [1] ""article"" #>  #> $`_id` #> [1] ""4"" #>  #> $`_version` #> [1] 1 #>  #> $found #> [1] TRUE #>  #> $`_source` #> $`_source`$id #> [1] ""10.1371/journal.pone.0107758"" #>  #> $`_source`$title #> [1] ""Lactobacilli Inactivate Chlamydia trachomatis through Lactic Acid but Not H2O2"" Get certain fields docs_get(index = 'plos', type = 'article', id = 4, fields = 'id') #> $`_index` #> [1] ""plos"" #>  #> $`_type` #> [1] ""article"" #>  #> $`_id` #> [1] ""4"" #>  #> $`_version` #> [1] 1 #>  #> $found #> [1] TRUE #>  #> $fields #> $fields$id #> $fields$id[[1]] #> [1] ""10.1371/journal.pone.0107758"" Get multiple documents via the multiget API Same index and type, different document ids docs_mget(index = ""plos"", type = ""article"", id = 1:2) #> $docs #> $docs[[1]] #> $docs[[1]]$`_index` #> [1] ""plos"" #>  #> $docs[[1]]$`_type` #> [1] ""article"" #>  #> $docs[[1]]$`_id` #> [1] ""1"" #>  #> $docs[[1]]$`_version` #> [1] 1 #>  #> $docs[[1]]$found #> [1] TRUE #>  #> $docs[[1]]$`_source` #> $docs[[1]]$`_source`$id #> [1] ""10.1371/journal.pone.0098602"" #>  #> $docs[[1]]$`_source`$title #> [1] ""Population Genetic Structure of a Sandstone Specialist and a Generalist Heath Species at Two Levels of Sandstone Patchiness across the Strait of Gibraltar"" #>  #>  #>  #> $docs[[2]] #> $docs[[2]]$`_index` #> [1] ""plos"" #>  #> $docs[[2]]$`_type` #> [1] ""article"" #>  #> $docs[[2]]$`_id` #> [1] ""2"" #>  #> $docs[[2]]$`_version` #> [1] 1 #>  #> $docs[[2]]$found #> [1] TRUE #>  #> $docs[[2]]$`_source` #> $docs[[2]]$`_source`$id #> [1] ""10.1371/journal.pone.0107757"" #>  #> $docs[[2]]$`_source`$title #> [1] ""Cigarette Smoke Extract Induces a Phenotypic Shift in Epithelial Cells; Involvement of HIF1α in Mesenchymal Transition"" Different indeces, types, and ids docs_mget(index_type_id = list(c(""plos"", ""article"", 1), c(""gbif"", ""record"", 1)))$docs[[1]] #> $`_index` #> [1] ""plos"" #>  #> $`_type` #> [1] ""article"" #>  #> $`_id` #> [1] ""1"" #>  #> $`_version` #> [1] 1 #>  #> $found #> [1] TRUE #>  #> $`_source` #> $`_source`$id #> [1] ""10.1371/journal.pone.0098602"" #>  #> $`_source`$title #> [1] ""Population Genetic Structure of a Sandstone Specialist and a Generalist Heath Species at Two Levels of Sandstone Patchiness across the Strait of Gibraltar"" Parsing You can optionally get back raw json from Search(), docs_get(), and docs_mget() setting parameter raw=TRUE. For example: (out <- docs_mget(index = ""plos"", type = ""article"", id = 1:2, raw = TRUE)) #> [1] ""{\""docs\"":[{\""_index\"":\""plos\"",\""_type\"":\""article\"",\""_id\"":\""1\"",\""_version\"":1,\""found\"":true,\""_source\"":{\""id\"":\""10.1371/journal.pone.0098602\"",\""title\"":\""Population Genetic Structure of a Sandstone Specialist and a Generalist Heath Species at Two Levels of Sandstone Patchiness across the Strait of Gibraltar\""}},{\""_index\"":\""plos\"",\""_type\"":\""article\"",\""_id\"":\""2\"",\""_version\"":1,\""found\"":true,\""_source\"":{\""id\"":\""10.1371/journal.pone.0107757\"",\""title\"":\""Cigarette Smoke Extract Induces a Phenotypic Shift in Epithelial Cells; Involvement of HIF1α in Mesenchymal Transition\""}}]}"" #> attr(,""class"") #> [1] ""elastic_mget"" Then parse jsonlite::fromJSON(out) #> $docs #>   _index   _type _id _version found                   _source.id #> 1   plos article   1        1  TRUE 10.1371/journal.pone.0098602 #> 2   plos article   2        1  TRUE 10.1371/journal.pone.0107757 #>                                                                                                                                                _source.title #> 1 Population Genetic Structure of a Sandstone Specialist and a Generalist Heath Species at Two Levels of Sandstone Patchiness across the Strait of Gibraltar #> 2                                     Cigarette Smoke Extract Induces a Phenotypic Shift in Epithelial Cells; Involvement of HIF1α in Mesenchymal Transition Known pain points On secure Elasticsearch servers: HEAD requests don't seem to work, not sure why If you allow only GET requests, a number of functions that require POST requests obviously then won't work. A big one is Search(), but you can use Search_uri() to get around this, which uses GET instead of POST, but you can't pass a more complicated query via the body Meta Please report any issues or bugs License: MIT Get citation information for elastic in R doing citation(package = 'elastic') Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/elastic"	"Wrapper for the Elasticsearch HTTP API"	"true"
"Database Management"	"mongolite"	"https://github.com/jeroenooms/mongolite"	"Streaming Mongo Client for R"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"59"	"11"	"12"	"GitHub - jeroenooms/mongolite: Fast and Simple MongoDB Client for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 11 Star 59 Fork 12 jeroenooms/mongolite Code Issues 18 Pull requests 1 Wiki Pulse Graphs Fast and Simple MongoDB Client for R http://bit.ly/mongolite 393 commits 3 branches 7 releases Fetching contributors C 95.7% C++ 3.3% R 1.0% C C++ R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags dev master pairlist Nothing to show v0.8 v0.7 v0.6 v0.5 v0.4 v0.3 v0.2 Nothing to show New pull request Latest commit a98350e Jul 8, 2016 jeroenooms Enable valgrind on Travis Permalink Failed to load latest commit information. R Rename 'force_decimal' to 'always_decimal' Jun 4, 2016 inst Fix CITATION header Jul 27, 2015 man Support inserting lists and json strings Apr 16, 2016 src Make no-timeout optional Apr 20, 2016 test wip Oct 14, 2015 tests/testthat Start with tests May 28, 2015 tools Update OpenSSL on Windows Dec 9, 2015 vignettes Fix URL Dec 9, 2015 windows add windows files Mar 27, 2015 .Rbuildignore Fix CI Apr 16, 2016 .gitignore Remove tmp files Oct 31, 2015 .travis.yml Enable valgrind on Travis Jul 8, 2016 DESCRIPTION Bump depends Jun 15, 2016 NAMESPACE Make mongo objects serializable (persistent between R sessions) Apr 16, 2016 NEWS Fix for new Homebrew Jun 18, 2016 appveyor.yml Enable mongo on travis Apr 20, 2016 configure Fix for new Homebrew Jun 18, 2016 configure.win Empty configure.win Apr 5, 2015 mongolite.Rproj Fixes for Windows Dec 8, 2015 readme.md More readme Apr 16, 2016 readme.md mongolite Fast and Simple MongoDB Client for R High-level, high-performance MongoDB client based on libmongoc and jsonlite. Includes support for aggregation, indexing, map-reduce, streaming, SSL encryption and SASL authentication. The vignette gives a brief overview of the available methods in the package. Documentation About the R package: Vignette: Getting started with MongoDB in R Presentation: UseR 2015 slides Hello World Example using a public test server # Connect to mongolabs con <- mongo(""mtcars"", url = ""mongodb://readwrite:test@ds043942.mongolab.com:43942/jeroen_test"")  # Wipe collection if(con$count() > 0)    con$drop()  # Insert some data con$insert(mtcars) stopifnot(con$count() == nrow(mtcars))  # Query data mydata <- con$find() stopifnot(all.equal(mydata, mtcars)) con$drop()  # Automatically disconnect when connection is removed rm(con) gc() Insert/retrieve data from your local mongodb server: # Init connection to local mongod library(mongolite) m <- mongo(collection = ""diamonds"")  # Insert test data data(diamonds, package=""ggplot2"") m$insert(diamonds)  # Check records m$count() nrow(diamonds)  # Perform a query and retrieve data out <- m$find('{""cut"" : ""Premium"", ""price"" : { ""$lt"" : 1000 } }')  # Compare nrow(out) nrow(subset(diamonds, cut == ""Premium"" & price < 1000)) More advanced features include map reduce: # Cross-table tbl <- m$mapreduce(   map = ""function(){emit({cut:this.cut, color:this.color}, 1)}"",   reduce = ""function(id, counts){return Array.sum(counts)}"" ) # Same as: data.frame(with(diamonds, table(cut, color))) Importing and exporting json or bson data: # Stream jsonlines into a connection tmp <- tempfile() m$export(file(tmp))  # Stream it back in R library(jsonlite) mydata <- stream_in(file(tmp))  # Or into mongo m2 <- mongo(""diamonds2"") m2$count() m2$import(file(tmp)) m2$count()  # Remove the collection m$drop() m2$drop() Installation Binary packages for OS-X or Windows can be installed directly from CRAN: install.packages(""mongolite"") Installation from source on Linux requires openssl and Cyrus SASL (not GNU sasl). On Debian or Ubuntu use libssl-dev and libsasl2-dev: sudo apt-get install -y libssl-dev libsasl2-dev  On Fedora, CentOS or RHEL use openssl-devel and cyrus-sasl-devel: sudo yum install openssl-devel cyrus-sasl-devel  On OS-X sasl is included with the system so only openssl is needed. brew install openssl  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jeroenooms/mongolite"	"Streaming Mongo Client for R"	"true"
"Database Management"	"RMySQL"	"http://cran.r-project.org/web/packages/RMySQL/"	"R interface to the MySQL database."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"122"	"32"	"83"	"GitHub - rstats-db/RMySQL: An R interface for MySQL Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 32 Star 122 Fork 83 rstats-db/RMySQL Code Issues 52 Pull requests 4 Pulse Graphs An R interface for MySQL http://cran.r-project.org/package=RMySQL 550 commits 9 branches 12 releases Fetching contributors C 58.5% C++ 30.8% R 10.7% C C++ R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 64-windows adamchainz-issue_131_ssl_ca_arg feature/dbi-test-debug feature/dbi-test-regr-2 feature/dbi-test-regr feature/travis gh-pages master stable Nothing to show v0.11-3 v0.11-2 v0.11-1 v0.10.9 v0.10.8 v0.10.7 v0.10.5 v0.10.4 v0.10.3 v0.10.2 v0.10.1 v0.10 Nothing to show New pull request Latest commit a3c813b Jul 7, 2016 jeroenooms Mention new fedora package Permalink Failed to load latest commit information. R Fix check warning about missing documentation Jul 6, 2016 man Fix check warning about missing documentation Jul 6, 2016 revdep Add reverse dependency checks (all look good) Dec 30, 2014 src Make it work across versions of libmysql Jul 6, 2016 tests use tweak Jun 24, 2016 tools Fix for R-devel on Windows Aug 25, 2015 windows/libmariadbclient-2.1.0 update windows builds Feb 15, 2015 .Rbuildignore Add AV Apr 20, 2016 .gitignore Add TAGS file to .gitignore Jul 7, 2015 .travis.yml Use dev versions of DBI Jul 6, 2016 DESCRIPTION Mention new fedora package Jul 7, 2016 NAMESPACE Fix a few check warnings Jul 6, 2016 NEWS.md NEWS Jun 8, 2016 README.md Typos Apr 20, 2016 RMySQL.Rproj Roughly convert all old docs into roxygen Dec 29, 2014 appveyor.yml Fix AV Apr 20, 2016 configure Enable Travis for OSX Jul 5, 2016 configure.win Add proper support for Windows, attempt 1 Dec 20, 2014 README.md RMySQL Database Interface and MySQL Driver for R RMySQL is a database interface and MySQL driver for R. This version complies with the database interface definition as implemented in the package DBI 0.2-2. Hello World library(DBI) # Connect to my-db as defined in ~/.my.cnf con <- dbConnect(RMySQL::MySQL(), group = ""my-db"")  dbListTables(con) dbWriteTable(con, ""mtcars"", mtcars) dbListTables(con)  dbListFields(con, ""mtcars"") dbReadTable(con, ""mtcars"")  # You can fetch all results: res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") dbFetch(res) dbClearResult(res)  # Or a chunk at a time res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") while(!dbHasCompleted(res)){   chunk <- dbFetch(res, n = 5)   print(nrow(chunk)) } # Clear the result dbClearResult(res)  # Disconnect from the database dbDisconnect(con) Installation Binary packages for OS-X or Windows can be installed directly from CRAN: install.packages(""RMySQL"") The development version from github: # install.packages(""devtools"") devtools::install_github(""rstats-db/DBI"") devtools::install_github(""rstats-db/RMySQL"") Installation from source on Linux or OSX requires MariaDB Connector/C. On some older platforms you can also link against Oracle's libmysqlclient driver but the mariadb implementation is much better. On recent Debian or Ubuntu install libmariadb-client-lgpl-dev. In Ubuntu 14.04 this was called libmariadbclient-dev. sudo apt-get install -y libmariadb-client-lgpl-dev  On Fedora, CentOS or RHEL we need mariadb-devel: sudo yum install mariadb-devel  On OS-X use mariadb-connector-c from Homebrew: brew install mariadb-connector-c  MySQL configuration file Instead of specifying a username and password in calls to dbConnect(), it's better to set up a MySQL configuration file that names the databases that you connect to most commonly. This file should live in ~/.my.cnf and look like: [database_name] option1=value1 option2=value2  If you want to run the examples, you'll need to set the proper options in the [rs-dbi] group of any MySQL option file, such as /etc/my.cnf or the .my.cnf file in your home directory. For a default single user install of MySQL, the following code should work: [rs-dbi] database=test user=root password=  Acknowledgements Many thanks to Christoph M. Friedrich, John Heuer, Kurt Hornik, Torsten Hothorn, Saikat Debroy, Matthew Kelly, Brian D. Ripley, Mikhail Kondrin, Jake Luciani, Jens Nieschulze, Deepayan Sarkar, Louis Springer, Duncan Temple Lang, Luis Torgo, Arend P. van der Veen, Felix Weninger, J. T. Lindgren, Crespin Miller, and Michal Okonlewski, Seth Falcon and Paul Gilbert for comments, suggestions, bug reports, and patches. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstats-db/rmysql"	"R interface to the MySQL database."	"true"
"Database Management"	"ROracle"	"http://cran.r-project.org/web/packages/ROracle/index.html"	"OCI based Oracle database interface for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ROracle ROracle: OCI Based Oracle Database Interface for R Oracle Database interface (DBI) driver for R. This is a DBI-compliant Oracle driver based on the OCI. Version: 1.2-2 Depends: methods, DBI (≥ 0.2-5) Imports: utils Published: 2016-02-17 Author: Denis Mukhin, David A. James and Jake Luciani Maintainer: Rajendra S. Pingte <rajendra.pingte at oracle.com> BugReports: NA License: LGPL-2 | LGPL-2.1 | LGPL-3 [expanded from: LGPL] URL: http://www.oracle.com NeedsCompilation: yes SystemRequirements: Oracle Instant Client or Oracle Database Client Materials: NEWS INSTALL CRAN checks: ROracle results Downloads: Reference manual: ROracle.pdf Package source: ROracle_1.2-2.tar.gz Windows binaries: r-devel: not available, r-release: not available, r-oldrel: not available OS X Mavericks binaries: r-release: not available, r-oldrel: not available Old sources: ROracle archive Reverse dependencies: Reverse depends: ora"	"null"	"null"	"OCI based Oracle database interface for R."	"true"
"Database Management"	"RPostgreSQL"	"https://code.google.com/p/rpostgresql/"	"R interface to the PostgreSQL database system."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Google Code Archive - Long-term storage for Google Code Project Hosting. Code Archive Skip to content Search Google About Google Privacy Terms"	"null"	"null"	"R interface to the PostgreSQL database system."	"true"
"Database Management"	"RSQLite"	"http://cran.r-project.org/web/packages/RSQLite/"	"SQLite interface for R"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"82"	"12"	"29"	"GitHub - rstats-db/RSQLite: R interface for SQLite Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 12 Star 82 Fork 29 rstats-db/RSQLite Code Issues 21 Pull requests 1 Pulse Graphs R interface for SQLite 854 commits 15 branches 7 releases Fetching contributors C 93.2% C++ 6.1% R 0.7% C C++ R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags b-#140-memory comp-not-inherit feature/appveyor feature/compile-time feature/deps feature/revdep feature/upgrade-sqlite jeroen master modernisation production rcpp seth-temp-arg temp-arg travis-expt Nothing to show v1.0.9004 v1.0.9003 v1.0.9002 v1.0.9001 v1.0.9000 v1.0.0 0.11.4 Nothing to show New pull request Latest commit e9d3c0f Jul 7, 2016 krlmlr bump Permalink Failed to load latest commit information. R Revert ""use file::memory: instead of :memory:"" Jun 21, 2016 inst/db Use Rcpp automatic inclusion of _types header Feb 3, 2015 man document Jun 21, 2016 src-raw fix path May 25, 2016 src add files in subdirectories as targets Jun 21, 2016 tests oops Jun 25, 2016 vignettes Revert ""use file::memory: instead of :memory:"" Jun 21, 2016 .Rbuildignore use AppVeyor May 25, 2016 .gitignore use subdirectory to speed up compilation time Mar 15, 2016 .travis.yml no sudo Mar 29, 2016 DESCRIPTION bump version to 1.0.9004 Jun 21, 2016 NAMESPACE upgrade to roxygen 5.0.0 Nov 13, 2015 NEWS.md NEWS Jun 21, 2016 README.md Revert ""use file::memory: instead of :memory:"" Jun 21, 2016 RSQLite.Rproj remove whitespace from end May 24, 2016 appveyor.yml remove broken r-devel test for now May 25, 2016 cran-comments.md Cran comments Oct 25, 2014 README.md RSQLite RSQLite embeds the SQLite database engine in R, providing a DBI-compliant interface. SQLite is a public-domain, single-user, very light-weight database engine that implements a decent subset of the SQL 92 standard, including the core table creation, updating, insertion, and selection operations, plus transaction management. You can install the latest released version from CRAN with: install.packages(""RSQLite"") Or install the latest development version from github with: # install.packages(""devtools"") devtools::install_github(""RcppCore/Rcpp"") devtools::install_github(""rstats-db/DBI"") devtools::install_github(""rstats-db/RSQLite"") To install from github, you'll need a development environment. Basic usage library(DBI) # Create an ephemeral in-memory RSQLite database con <- dbConnect(RSQLite::SQLite(), "":memory:"")  dbListTables(con) dbWriteTable(con, ""mtcars"", mtcars) dbListTables(con)  dbListFields(con, ""mtcars"") dbReadTable(con, ""mtcars"")  # You can fetch all results: res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") dbFetch(res) dbClearResult(res)  # Or a chunk at a time res <- dbSendQuery(con, ""SELECT * FROM mtcars WHERE cyl = 4"") while(!dbHasCompleted(res)){   chunk <- dbFetch(res, n = 5)   print(nrow(chunk)) } # Clear the result dbClearResult(res)  # Disconnect from the database dbDisconnect(con) Acknowledgements Many thanks to Doug Bates, Seth Falcon, Detlef Groth, Ronggui Huang, Kurt Hornik, Uwe Ligges, Charles Loboz, Duncan Murdoch, and Brian D. Ripley for comments, suggestions, bug reports, and/or patches. Update version of SQLite Download latest SQLite source by running src-raw/upgrade.R Update DESCRIPTION for included version of SQLite Update NEWS Ideally this should happen right after each CRAN release, so that a new SQLite version is tested for some time before it's released to CRAN. Update datasets database RSQLite includes one SQLite database (accessible from datasetsDb() that contains all data frames in the datasets package. This is the code that created it. tables <- unique(data(package = ""datasets"")$results[, 3]) tables <- tables[!grepl(""("", tables, fixed = TRUE)]  con <- dbConnect(SQLite(), ""inst/db/datasets.sqlite"") for(table in tables) {   df <- getExportedValue(""datasets"", table)   if (!is.data.frame(df)) next    message(""Creating table: "", table)   dbWriteTable(con, table, as.data.frame(df), overwrite = TRUE) } Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstats-db/RSQLite"	"SQLite interface for R"	"true"
"Database Management"	"RJDBC"	"http://cran.r-project.org/web/packages/RJDBC/"	"Provides access to databases through the JDBC interface."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RJDBC RJDBC: Provides access to databases through the JDBC interface RJDBC is an implementation of R's DBI interface using JDBC as a back-end. This allows R to connect to any DBMS that has a JDBC driver. Version: 0.2-5 Depends: methods, DBI, rJava (≥ 0.4-15), R (≥ 2.4.0) Published: 2014-12-19 Author: Simon Urbanek Maintainer: Simon Urbanek <Simon.Urbanek at r-project.org> BugReports: NA License: GPL-2 URL: http://www.rforge.net/RJDBC/ NeedsCompilation: no Materials: NEWS CRAN checks: RJDBC results Downloads: Reference manual: RJDBC.pdf Package source: RJDBC_0.2-5.tar.gz Windows binaries: r-devel: RJDBC_0.2-5.zip, r-release: RJDBC_0.2-5.zip, r-oldrel: RJDBC_0.2-5.zip OS X Mavericks binaries: r-release: RJDBC_0.2-5.tgz, r-oldrel: RJDBC_0.2-5.tgz Old sources: RJDBC archive Reverse dependencies: Reverse depends: ODB, RH2 Reverse imports: RSQLServer Reverse suggests: ETLUtils, ProjectTemplate Reverse enhances: sqlutils"	"null"	"null"	"Provides access to databases through the JDBC interface."	"true"
"Database Management"	"rmongodb"	"https://github.com/mongosoup/rmongodb"	"R driver for MongoDB."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"56"	"15"	"38"	"GitHub - mongosoup/rmongodb: R driver for MongoDB Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 15 Star 56 Fork 38 mongosoup/rmongodb forked from gerald-lindsly/rmongodb Code Issues 21 Pull requests 0 Pulse Graphs R driver for MongoDB 355 commits 3 branches 11 releases 13 contributors C 53.4% R 46.4% C++ 0.2% C R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master new_C_api rmongodb_2_0 Nothing to show v1.8.0 v1.6.5 v1.5.3 v1.4.2 v1.3.3 v1.3.2 v1.3.1 v1.2.6 v1.2.5 v1.1.3 v1.1.2 Nothing to show New pull request Pull request Compare This branch is 216 commits ahead of gerald-lindsly:master. Latest commit 8eb2bca Mar 21, 2016 dselivanov Merge pull request #95 from fred777/patch-1 … Update gridfs.h Permalink Failed to load latest commit information. R small fixes to pass ""R CMD check --as-cran"" Nov 2, 2014 data zips data set added as example Oct 30, 2013 demo missing demo index added Oct 24, 2013 man small fixes to pass ""R CMD check --as-cran"" Nov 2, 2014 src Update gridfs.h Mar 21, 2016 tests fixes mongosoup/rmongodb#46 Oct 2, 2014 vignettes Fix typos in vignette Jun 19, 2015 .Rbuildignore build ignore file added Oct 25, 2013 .gitignore remove extra *.o row Oct 15, 2014 DESCRIPTION new 1.8.0 rmongodb version Nov 1, 2014 NAMESPACE fixes mongosoup/rmongodb#40 Oct 15, 2014 NEWS new 1.8.0 rmongodb version Nov 1, 2014 README.md Simple typo fix Mar 15, 2016 rmongodb.Rproj update readme Oct 19, 2014 README.md Project status Dear R and rmongodb users, rmongodb project is based on legacy C drivers. For the moment, I (@dselivanov) don't have time for rmongodb development. And unless someone will not port new drivers, package will remain with outdated functionality (see issues ). If some of you want to udertake package maintainance - let me know. For new R / mongodb users , I recommend to start with mongolite package wich is much more actively maintained. rmongodb This is an R (www.r-project.org) extension supporting access to MongoDB (www.mongodb.org) using the mongodb-c-driver (http://docs.mongodb.org/ecosystem/drivers/c/). The latest stable version is available on CRAN: http://cran.r-project.org/package=rmongodb Thanks to Gerald Lindsly and MongoDB, Inc. (formerly 10gen) for the initial work. In October 2013, MongoSoup and Markus Schmidberger have overtaken the development and maintenance of the R package. Since October 2014 package is maintained by Dmitriy Selivanov. Please feel free to send us issues or pull requests via github: https://github.com/mongosoup/rmongodb Furthermore, I'm happy to get your feedback personally via email: selivanov.dmitriy (at) gmail.com. Usage Once you have installed the package, it may be loaded from within R like any other package: library(""rmongodb"")  # connect to your local mongodb mongo <- mongo.create()  # create query object  query <- mongo.bson.from.JSON('{""age"": 27}')  # Find the first 100 records #    in collection people of database test where age == 27 cursor <- mongo.find(mongo, ""test.people"", query, limit=100L) # Step through the matching records and display them while (mongo.cursor.next(cursor))     print(mongo.cursor.value(cursor)) mongo.cursor.destroy(cursor)  res <- mongo.find.batch(mongo, ""test.people"", query, limit=100L)  mongo.disconnect(mongo) mongo.destroy(mongo)  There is also one demo available: library(""rmongodb"") demo(teachers_aid)  Supported Functionality by rmongodb Connecting and disconnecting to MongoDB Querying, inserting and updating to MongoDB including with JSON and BSON Creating and handling BSON objects Dropping collections and databases on MongoDB Creating indices on MongoDB collections Error handling Executing commands on MongoDB Adding, removing, handling files on a ""Grid File System"" (GridFS) on a MongoDB server High Level functionality as mongo.apply, mongo.summary, mongo.get.keys, ... Aggregation pipeline Good ressources to Get Started with rmongodb Basic Overview of using the rmongodb package for R - December 2013, Brock Tibert code examples: https://gist.github.com/Btibert3/7751989 R with MongoDB - MongoDB Munich conference, October 2013, Markus Schmidberger video: http://www.youtube.com/watch?v=RR3UxemmJ1Q slides: http://rpubs.com/schmidb/rstatsMongoDB Accessing mongodb from R - January 2012, Sean Davis code examples: http://watson.nci.nih.gov/~sdavis/blog/rmongodb-using-R-with-mongo/ R and MongoDB - June 2013, WenSui example comparing rmongodb and RMongo: http://www.r-bloggers.com/r-and-mongodb/ rmongodb – R Driver for MongoDB - September 2011, Gerald Lindsly blog post: http://www.r-bloggers.com/rmongodb-r-driver-for-mongodb/ Stackoverflow questions and answers: http://stackoverflow.com/questions/tagged/rmongodb Good ressources to Install and Get Started with MongoDB Installing MongoDB, MongoDB Doku http://docs.mongodb.org/manual/installation/ Getting Started with MongoDB, MongoDB Doku http://docs.mongodb.org/manual/tutorial/getting-started/ MongoDB - Getting Started Guide, April 2013, Satish blog post: http://technotip.com/2982/mongodb-getting-started-guide/ Video: http://www.youtube.com/watch?v=J2qnq8WI6EU Little MongoDB Book Good ressources for working with JSON-Data in R: There are three R packages on CRAN: RJSONIO, jsonlite (used by rmongodb) and rjson jsonlite vignette for using JSON in R: http://cran.r-project.org/web/packages/jsonlite/vignettes/json-mapping.pdf Development To install the development version of rmongodb, it's easiest to use the devtools package: # install.packages(""devtools"") library(devtools) install_github(""mongosoup/rmongodb"")  We advice using RStudio (www.rstudio.org) for the package development. The RStudio .Rproj file is included in the repository. Usefull links BSON specification: http://bsonspec.org/#/specification Versioning We use a three step version number system, e.g. v1.2.1: first: major changes as new C libraries second: for each new stable CRAN release third: for each new github version ready for testing General Development Rules we use roxygen2 we write RUnit tests for all new functionality in tests/test_XXX.R for bigger changes we use branches run valgrid to check for memory leaks R -d ""valgrind --tool=memcheck --leak-check=full"" --vanilla < test_XXX.R > log.txt 2>&1 CRAN submission: http://cran.r-project.org/submit.html create Package tar.gz via RStudio ""Build Source Package"" run R CRAN checks via: R CMD check --as-cran package.tar.gz run R CRAN checks without running mongodb installation create a tag / release on github for every CRAN submission Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/mongosoup/rmongodb"	"R driver for MongoDB."	"true"
"Database Management"	"rredis"	"http://cran.r-project.org/web/packages/rredis/"	"Redis client for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rredis rredis: ""Redis"" Key/Value Database Client R client interface to the ""Redis"" key-value database. Version: 1.7.0 Suggests: RUnit Published: 2015-07-05 Author: B. W. Lewis Maintainer: B. W. Lewis <blewis at illposed.net> BugReports: NA License: Apache License (≥ 2.0) URL: NA NeedsCompilation: yes Materials: README NEWS In views: HighPerformanceComputing CRAN checks: rredis results Downloads: Reference manual: rredis.pdf Vignettes: rredis Manual Package source: rredis_1.7.0.tar.gz Windows binaries: r-devel: rredis_1.7.0.zip, r-release: rredis_1.7.0.zip, r-oldrel: rredis_1.7.0.zip OS X Mavericks binaries: r-release: rredis_1.7.0.tgz, r-oldrel: rredis_1.7.0.tgz Old sources: rredis archive Reverse dependencies: Reverse depends: doRedis Reverse imports: fulltext Reverse suggests: RcppRedis"	"null"	"null"	"Redis client for R."	"true"
"Database Management"	"RCassandra"	"http://cran.r-project.org/web/packages/RCassandra/index.html"	"Direct interface (not Java) to the most basic functionality of Apache Cassanda."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RCassandra RCassandra: R/Cassandra interface This packages provides a direct interface (without the use of Java) to the most basic functionality of Apache Cassanda such as login, updates and queries. Version: 0.1-3 Published: 2013-12-03 Author: Simon Urbanek Maintainer: Simon Urbanek <simon.urbanek at r-project.org> BugReports: NA License: GPL-2 URL: http://www.rforge.net/RCassandra NeedsCompilation: yes Materials: NEWS CRAN checks: RCassandra results Downloads: Reference manual: RCassandra.pdf Package source: RCassandra_0.1-3.tar.gz Windows binaries: r-devel: RCassandra_0.1-3.zip, r-release: RCassandra_0.1-3.zip, r-oldrel: RCassandra_0.1-3.zip OS X Mavericks binaries: r-release: RCassandra_0.1-3.tgz, r-oldrel: RCassandra_0.1-3.tgz Old sources: RCassandra archive"	"null"	"null"	"Direct interface (not Java) to the most basic functionality of Apache Cassanda."	"true"
"Database Management"	"RHive"	"https://github.com/nexr/RHive"	"R extension facilitating distributed computing via Apache Hive."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"110"	"34"	"57"	"GitHub - nexr/RHive: RHive is an R extension facilitating distributed computing via Apache Hive. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 34 Star 110 Fork 57 nexr/RHive Code Issues 47 Pull requests 2 Wiki Pulse Graphs RHive is an R extension facilitating distributed computing via Apache Hive. http://nexr.github.io/RHive 211 commits 5 branches 21 releases 5 contributors R 50.5% Java 49.5% R Java Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags develop gh-pages master nexr ranger Nothing to show v2.0-0.0 v1.0-0.1 v0.0-7.1 v0.0-7 v0.0-6 v0.0-5 v0.0-4 tag-cran20111030 nexr-rhive-2.0.10 nexr-rhive-2.0.10-ranger nexr-rhive-2.0.9 nexr-rhive-2.0.8 nexr-rhive-2.0.7 nexr-rhive-2.0.6 nexr-rhive-2.0.5 nexr-rhive-2.0.4 nexr-rhive-2.0.3 nexr-rhive-2.0.2 nexr-rhive-2.0.1 RHive-NexR-2.0.1 NexR-RHive-2.0.1 Nothing to show New pull request Latest commit ed6afac Dec 15, 2014 ssshow16 update README Permalink Failed to load latest commit information. RHive add environment variable ""FS_TMP"" Dec 15, 2014 .gitignore add unitest for basic statistical functions Jan 2, 2012 ChangeLog HiveServer2 support Jul 29, 2013 INSTALL [DOC] Installation guide Nov 26, 2013 README.md update README Dec 15, 2014 RHive.iml add and update test case. Nov 20, 2014 build.xml [BUG FIX] wrong udf path Dec 10, 2014 rhive-logo.jpg add RHive log images Oct 31, 2011 rhive-logo.png add RHive log images Oct 30, 2011 README.md NexR RHive 2.0 RHive is an R extension facilitating distributed computing via HIVE query. RHive allows easy usage of HQL(Hive SQL) in R, and allows easy usage of R objects and R functions in Hive. Before installing RHive, you have to have installed Hadoop and Hive Install Hadoop Single Node Single node installation Cluster Node Cluster node installation set HADOOP_HOME at local machine on which R runs Install Hive install local machine and remote machine on which NameNode runs or Hive-Server runs. Installation Guide Hive installation guide set HIVE_HOME at local machine on which R runs. launch Hive Server with following command on remote machine. it should be as a background process. $HIVE_HOME/bin/hive --service hiveserver Install R and Packages install R need to install R on all tasktracker nodes install rJava only install rJava on local machine. install Rserve need to install Rserve on all tasktracker nodes make configuration in path (/etc/Rserv.conf) on all tasktracker nodes. edit this file to add 'remote enable' to allow remote connection. launch all Rserve on all tasktracker nodes. e.q> R CMD Rserve setting tasktracker nodes add R_HOME path at $HADOOP_HOME/conf/hadoop-env.sh e.q> export R_HOME=/usr/lib/R install RUnit Install RHive Requirements ant (in order to build java files) Installing RHive Download source code: git clone https://github.com/nexr/RHive.git Change your working directory: cd RHive Set the environment variables HIVE_HOME and HADOOP_HOME: export HIVE_HOME=/path/to/your/hive/directory export HADOOP_HOME=/path/to/your/hadoop/directory Build java files using ant: ant build Build RHive: R CMD build RHive Install RHive: R CMD INSTALL RHive_.tar.gz Loading RHive and connecting to Hive Set the environment variables HIVE_HOME and HADOOP_HOME: Set the environment variables: export HIVE_HOME=/path/to/your/hive/directory export HADOOP_HOME=/path/to/your/hadoop/directory export HADOOP_CONF_DIR=/path/to/your/hadoop/conf/directory Or, add environment variables into Renviron HIVE_HOME=/path/to/your/hive/directory HADOOP_HOME=/path/to/your/hadoop/directory HADOOP_CONF_DIR=/path/to/your/hadoop/conf/directory launch R library(RHive) rhive.connect(host, port, hiveServer2) Tutorials RHive user guide Requirements Java 1.6 R 2.13.0 Rserve 0.6-0 rJava 0.9-0 Hadoop 0.20.x (x >= 1) Hive 0.8.x (x >= 0) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/nexr/RHive"	"R extension facilitating distributed computing via Apache Hive."	"true"
"Database Management"	"RNeo4j"	"https://github.com/nicolewhite/Rneo4j"	"Neo4j graph database driver."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"148"	"41"	"37"	"GitHub - nicolewhite/RNeo4j: Neo4j Driver for R. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 41 Star 148 Fork 37 nicolewhite/RNeo4j Code Issues 5 Pull requests 1 Wiki Pulse Graphs Neo4j Driver for R. https://cran.r-project.org/web/packages/RNeo4j/ 349 commits 1 branch 10 releases Fetching contributors R 99.1% Other 0.9% R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v1.7.0 v1.6.4 v1.6.3 v1.6.2 v1.6.1 v1.6.0 v1.5.0 v1.4.0 1.3.0 1.2.0 Nothing to show New pull request Latest commit db53dcf May 23, 2016 nicolewhite Revert ""Remove incompatible Cypher from importSample"" … This reverts commit a218fd6. Permalink Failed to load latest commit information. R Revert ""Remove incompatible Cypher from importSample"" May 23, 2016 figure Update README Nov 9, 2015 inst/extdata Update dfw.txt May 22, 2016 man Revert ""Remove incompatible Cypher from importSample"" May 23, 2016 neokit @ 0f5a119 Use neokit to test against multiple versions of neo4j Nov 9, 2015 tests Workaround for weird regex bug in 3.0.1 May 12, 2016 .Rbuildignore Add neo4j/ to .Rbuildignore Apr 5, 2016 .gitattributes Initial commit. May 8, 2014 .gitignore Add .pdf to .gitignore and .Rbuildignore Sep 9, 2015 .gitmodules Tell .gitmodules where the module is Nov 9, 2015 .travis.yml Try setting JAVA_HOME May 15, 2016 CONTRIBUTING.md Update CONTRIBUTING.md Apr 3, 2016 DESCRIPTION v1.7.0 May 12, 2016 LICENSE Update LICENSE Jan 29, 2016 Makefile Don't test on 3.0 until there's a solution on Travis May 23, 2016 NAMESPACE Import URLencode and browseURL from utils Sep 9, 2015 README.Rmd Update README Nov 9, 2015 README.md Update README Nov 9, 2015 RNeo4j.Rproj Use roxygen Sep 4, 2015 build.sh Rscript is no longer in /usr/bin/ ¯\_(ツ)_/¯ Jan 10, 2016 README.md RNeo4j RNeo4j is Neo4j's R driver. It allows you to read and write data from / to Neo4j directly from your R environment. Contents Install Connect Nodes Relationships Cypher Shortest Paths Weighted Shortest Paths Graph Algorithms Visualizations Import Connection Issues Contribute Install Neo4j First and foremost, download Neo4j! Windows If you're on Windows, download the .exe and follow the instructions. You'll get a GUI where you simply press ""Start"" to start Neo4j. OS X If you're on OS X, you can download either the .dmg or the .tar.gz. The .dmg will give you a GUI where you simply press ""Start"" to start Neo4j. Otherwise, download the .tar.gz, unzip, navigate to the directory and execute ./bin/neo4j start. Linux If you're on Linux, you have to use the .tar.gz. Download the .tar.gz, unzip, navigate to the directory and execute ./bin/neo4j start. RNeo4j From CRAN install.packages(""RNeo4j"") From GitHub devtools::install_github(""nicolewhite/RNeo4j"") From Source Go to the latest release and download the source code. You can then install with install.packages. install.packages(""/path/to/file.tar.gz"", repos=NULL, type=""source"") Load the Package library(RNeo4j) Connect graph = startGraph(""http://localhost:7474/db/data/"") If you have authentication enabled, pass your username and password. graph = startGraph(""http://localhost:7474/db/data/"", username=""neo4j"", password=""password"") Nodes nicole = createNode(graph, ""Person"", name=""Nicole"", age=24) greta = createNode(graph, ""Person"", name=""Greta"", age=24) kenny = createNode(graph, ""Person"", name=""Kenny"", age=27) shannon = createNode(graph, ""Person"", name=""Shannon"", age=23) Relationships r1 = createRel(greta, ""LIKES"", nicole, weight=7) r2 = createRel(nicole, ""LIKES"", kenny, weight=1) r3 = createRel(kenny, ""LIKES"", shannon, weight=3) r4 = createRel(nicole, ""LIKES"", shannon, weight=5) Cypher If you're returning tabular results, use cypher, which will give you a data.frame. query = "" MATCH (nicole:Person)-[r:LIKES]->(p:Person) WHERE nicole.name = 'Nicole' RETURN nicole.name, r.weight, p.name ""  cypher(graph, query) ##   nicole.name r.weight  p.name ## 1      Nicole        5 Shannon ## 2      Nicole        1   Kenny  For anything more complicated, use cypherToList, which will give you a list. query = "" MATCH (nicole:Person)-[:LIKES]->(p:Person) WHERE nicole.name = 'Nicole' RETURN nicole, COLLECT(p.name) AS friends ""  cypherToList(graph, query) ## [[1]] ## [[1]]$nicole ## < Node >  ## Person ##  ## $name ## [1] ""Nicole"" ##  ## $age ## [1] 24 ##  ##  ## [[1]]$friends ## [[1]]$friends[[1]] ## [1] ""Shannon"" ##  ## [[1]]$friends[[2]] ## [1] ""Kenny""  Both cypher and cypherToList accept parameters. These parameters can be passed individually or as a list. query = "" MATCH (p1:Person)-[r:LIKES]->(p2:Person) WHERE p1.name = {name1} AND p2.name = {name2} RETURN p1.name, r.weight, p2.name ""  cypher(graph, query, name1=""Nicole"", name2=""Shannon"") ##   p1.name r.weight p2.name ## 1  Nicole        5 Shannon  cypher(graph, query, list(name1=""Nicole"", name2=""Shannon"")) ##   p1.name r.weight p2.name ## 1  Nicole        5 Shannon  Shortest Paths p = shortestPath(greta, ""LIKES"", shannon, max_depth=4) n = nodes(p) sapply(n, ""[["", ""name"") ## [1] ""Greta""   ""Nicole""  ""Shannon""  Weighted Shortest Paths p = shortestPath(greta, ""LIKES"", shannon, max_depth=4, cost_property=""weight"") n = nodes(p) sapply(n, ""[["", ""name"") ## [1] ""Greta""   ""Nicole""  ""Kenny""   ""Shannon""  p$weight ## [1] 11  Graph Algorithms library(igraph)  query = "" MATCH (n)-->(m) RETURN n.name, m.name ""  edgelist = cypher(graph, query) ig = graph.data.frame(edgelist, directed=F)  betweenness(ig) ##  Nicole   Greta   Kenny Shannon  ##       2       0       0       0  closeness(ig) ##    Nicole     Greta     Kenny   Shannon  ## 0.3333333 0.2000000 0.2500000 0.2500000  Visualizations igraph plot(ig) ggnet library(network) library(GGally)  net = network(edgelist) ggnet(net, label.nodes=TRUE) visNetwork Read this blog post and check out this slide deck. Import library(hflights) hflights = hflights[sample(nrow(hflights), 1000), ] row.names(hflights) = NULL  head(hflights) ##   Year Month DayofMonth DayOfWeek DepTime ArrTime UniqueCarrier FlightNum ## 1 2011     1         15         6     927    1038            XE      2885 ## 2 2011    10         10         1    2001    2322            XE      4243 ## 3 2011     6         15         3    1853    2108            CO       670 ## 4 2011     4         10         7    2100     102            CO       410 ## 5 2011     1         25         2     739    1016            XE      3083 ## 6 2011     9         13         2    1745    1841            CO      1204 ##   TailNum ActualElapsedTime AirTime ArrDelay DepDelay Origin Dest Distance ## 1  N34110               131     113      -10       -3    IAH  COS      809 ## 2  N13970               141     127        2       19    IAH  CMH      986 ## 3  N36207               255     231       15       -2    IAH  SFO     1635 ## 4  N76517               182     162      -18        5    IAH  EWR     1400 ## 5  N12922               157     128        0       -6    IAH  MKE      984 ## 6  N35271                56      34       -7       -5    IAH  SAT      191 ##   TaxiIn TaxiOut Cancelled CancellationCode Diverted ## 1      6      12         0                         0 ## 2      4      10         0                         0 ## 3      5      19         0                         0 ## 4      7      13         0                         0 ## 5      4      25         0                         0 ## 6      3      19         0                         0  addConstraint(graph, ""Carrier"", ""name"") addConstraint(graph, ""Airport"", ""name"")  query = "" CREATE (flight:Flight {number: {FlightNum} }) SET flight.year = TOINT({Year}),     flight.month = TOINT({DayofMonth}),     flight.day = TOINT({DayOfWeek})  MERGE (carrier:Carrier {name: {UniqueCarrier} }) CREATE (flight)-[:OPERATED_BY]->(carrier)  MERGE (origin:Airport {name: {Origin} }) MERGE (dest:Airport {name: {Dest} })  CREATE (flight)-[o:ORIGIN]->(origin) CREATE (flight)-[d:DESTINATION]->(dest)  SET o.delay = TOINT({DepDelay}),     o.taxi_time = TOINT({TaxiOut})  SET d.delay = TOINT({ArrDelay}),     d.taxi_time = TOINT({TaxiIn}) ""  tx = newTransaction(graph)  for(i in 1:nrow(hflights)) {   row = hflights[i, ]    appendCypher(tx, query,                FlightNum=row$FlightNum,                Year=row$Year,                DayofMonth=row$DayofMonth,                DayOfWeek=row$DayOfWeek,                UniqueCarrier=row$UniqueCarrier,                Origin=row$Origin,                Dest=row$Dest,                DepDelay=row$DepDelay,                TaxiOut=row$TaxiOut,                ArrDelay=row$ArrDelay,                TaxiIn=row$TaxiIn) }  commit(tx)  summary(graph) ##     This          To    That ## 1 Flight OPERATED_BY Carrier ## 2 Flight      ORIGIN Airport ## 3 Flight DESTINATION Airport  Connection Issues Couldn't connect to server Error in curl::curl_fetch_memory(url, handle = handle) :    Couldn't connect to server  Neo4j probably isn't running. Make sure Neo4j is running first. It's also possible you have localhost resolution issues; try connecting to http://127.0.0.1:7474/db/data/ instead. No authorization header supplied Error: client error: (401) Unauthorized Neo.ClientError.Security.AuthorizationFailed No authorization header supplied.  You have auth enabled on Neo4j and either didn't provide your username and password or they were invalid. You can pass a username and password to startGraph. graph = startGraph(""http://localhost:7474/db/data/"", username=""neo4j"", password=""password"")  You can also disable auth by editing the following line in conf/neo4j-server.properties. # Require (or disable the requirement of) auth to access Neo4j dbms.security.auth_enabled=false  Contribute Check out the contributing doc if you'd like to contribute! Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/nicolewhite/Rneo4j"	"Neo4j graph database driver."	"true"
"Machine Learning"	"AnomalyDetection"	"https://github.com/twitter/AnomalyDetection"	"AnomalyDetection R package from Twitter."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1598"	"298"	"332"	"GitHub - twitter/AnomalyDetection: Anomaly Detection with R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 298 Star 1,598 Fork 332 twitter/AnomalyDetection Code Issues 34 Pull requests 7 Pulse Graphs Anomaly Detection with R 92 commits 1 branch 2 releases 9 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v1.0.1 v1.0.0 Nothing to show New pull request Latest commit 1f5deaa Aug 31, 2015 caniszczyk Merge pull request #51 from terrytangyuan/bugfix … fixed bug and added error handling when there are NAs in timestamp Permalink Failed to load latest commit information. R Merge pull request #51 from terrytangyuan/bugfix Aug 31, 2015 data Initial Import Dec 9, 2014 figs Adding Figures Dec 19, 2014 inst/extdata adding test for anoms at midnight Apr 15, 2015 man adding tests for constant value time series Apr 15, 2015 tests adding commit to trigger build Apr 15, 2015 .Rbuildignore Add Travis CI config Dec 9, 2014 .gitignore modified gitignore to ignore r studio files Mar 15, 2015 .travis.yml Merge pull request #38 from owenvallis/master Apr 16, 2015 DESCRIPTION added bytecode compiler and removed some unnecessary memory allocations Jan 13, 2015 LICENSE Initial commit Dec 9, 2014 NAMESPACE Rebuilt docs and removed extra paranthesis in detect_anoms.R from pul… Mar 4, 2015 README.md added issues status badge Jul 31, 2015 README.md AnomalyDetection R package AnomalyDetection is an open-source R package to detect anomalies which is robust, from a statistical standpoint, in the presence of seasonality and an underlying trend. The AnomalyDetection package can be used in wide variety of contexts. For example, detecting anomalies in system metrics after a new software release, user engagement post an A/B test, or for problems in econometrics, financial engineering, political and social sciences. How the package works The underlying algorithm – referred to as Seasonal Hybrid ESD (S-H-ESD) builds upon the Generalized ESD test for detecting anomalies. Note that S-H-ESD can be used to detect both global as well as local anomalies. This is achieved by employing time series decomposition and using robust statistical metrics, viz., median together with ESD. In addition, for long time series (say, 6 months of minutely data), the algorithm employs piecewise approximation - this is rooted to the fact that trend extraction in the presence of anomalies in non-trivial - for anomaly detection. Besides time series, the package can also be used to detect anomalies in a vector of numerical values. We have found this very useful as many times the corresponding timestamps are not available. The package provides rich visualization support. The user can specify the direction of anomalies, the window of interest (such as last day, last hour), enable/disable piecewise approximation; additionally, the x- and y-axis are annotated in a way to assist visual data analysis. How to get started Install the R package using the following commands on the R console: install.packages(""devtools"") devtools::install_github(""twitter/AnomalyDetection"") library(AnomalyDetection)  The function AnomalyDetectionTs is called to detect one or more statistically significant anomalies in the input time series. The documentation of the function AnomalyDetectionTs, which can be seen by using the following command, details the input arguments and the output of the function AnomalyDetectionTs. help(AnomalyDetectionTs)  The function AnomalyDetectionVec is called to detect one or more statistically significant anomalies in a vector of observations. The documentation of the function AnomalyDetectionVec, which can be seen by using the following command, details the input arguments and the output of the function AnomalyDetectionVec. help(AnomalyDetectionVec)  A simple example To get started, the user is recommended to use the example dataset which comes with the packages. Execute the following commands: data(raw_data) res = AnomalyDetectionTs(raw_data, max_anoms=0.02, direction='both', plot=TRUE) res$plot  From the plot, we observe that the input time series experiences both positive and negative anomalies. Furthermore, many of the anomalies in the time series are local anomalies within the bounds of the time series’ seasonality (hence, cannot be detected using the traditional approaches). The anomalies detected using the proposed technique are annotated on the plot. In case the timestamps for the plot above were not available, anomaly detection could then carried out using the AnomalyDetectionVec function; specifically, one can use the following command: AnomalyDetectionVec(raw_data[,2], max_anoms=0.02, period=1440, direction='both', only_last=FALSE, plot=TRUE)  Often, anomaly detection is carried out on a periodic basis. For instance, at times, one may be interested in determining whether there was any anomaly yesterday. To this end, we support a flag only_last whereby one can subset the anomalies that occurred during the last day or last hour. Execute the following command: res = AnomalyDetectionTs(raw_data, max_anoms=0.02, direction='both', only_last=”day”, plot=TRUE) res$plot  From the plot, we observe that only the anomalies that occurred during the last day have been annotated. Further, the prior six days are included to expose the seasonal nature of the time series but are put in the background as the window of prime interest is the last day. Anomaly detection for long duration time series can be carried out by setting the longterm argument to T. Copyright and License Copyright 2015 Twitter, Inc and other contributors Licensed under the GPLv3 Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/twitter/AnomalyDetection"	"AnomalyDetection R package from Twitter."	"true"
"Machine Learning"	"ahaz"	"http://cran.r-project.org/web/packages/ahaz/index.html"	"Regularization for semiparametric additive hazards regression."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ahaz ahaz: Regularization for semiparametric additive hazards regression Computationally efficient procedures for regularized estimation with the semiparametric additive hazards regression model. Version: 1.14 Depends: R (≥ 2.10), survival, Matrix Published: 2013-06-03 Author: Anders Gorst-Rasmussen Maintainer: Anders Gorst-Rasmussen <agorstras at gmail.com> BugReports: NA License: GPL-2 URL: http://www.gorst.dk/software.htm NeedsCompilation: yes Citation: ahaz citation info In views: MachineLearning, Survival CRAN checks: ahaz results Downloads: Reference manual: ahaz.pdf Package source: ahaz_1.14.tar.gz Windows binaries: r-devel: ahaz_1.14.zip, r-release: ahaz_1.14.zip, r-oldrel: ahaz_1.14.zip OS X Mavericks binaries: r-release: ahaz_1.14.tgz, r-oldrel: ahaz_1.14.tgz Old sources: ahaz archive Reverse dependencies: Reverse depends: uniah Reverse imports: addhazard"	"null"	"null"	"Regularization for semiparametric additive hazards regression."	"true"
"Machine Learning"	"arules"	"http://cran.r-project.org/web/packages/arules/index.html"	"Mining Association Rules and Frequent Itemsets"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"7"	"4"	"3"	"GitHub - mhahsler/arules: Mining Association Rules and Frequent Itemsets - R Package Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 4 Star 7 Fork 3 mhahsler/arules Code Issues 1 Pull requests 0 Pulse Graphs Mining Association Rules and Frequent Itemsets - R Package 61 commits 1 branch 3 releases Fetching contributors C 63.7% R 36.2% Objective-C 0.1% C R Objective-C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show arules_1.4-1 arules_1.4-0 arules_1.3-1 Nothing to show New pull request Latest commit 9129a50 Jun 9, 2016 mhahsler fixed is.redundant. Permalink Failed to load latest commit information. R fixed is.redundant. Jun 9, 2016 data Fixed weights in data. Apr 11, 2016 inst NEWS uses now markdown Mar 21, 2016 man fixed is.redundant. Jun 9, 2016 src Memory management fixes by C Buchta. Feb 12, 2016 tests fixed is.redundant. Jun 9, 2016 vignettes added head function for faster getting top rules. Jan 16, 2016 .Rbuildignore Initial commit. Oct 11, 2015 .gitignore Initial commit. Oct 12, 2015 .travis.yml Initial commit. Oct 12, 2015 DESCRIPTION Started new development version. Apr 14, 2016 NAMESPACE cleaned up NAMESPACE and Generics. Apr 13, 2016 NEWS.md fixed is.redundant. Jun 9, 2016 README.md TYPO. Jun 1, 2016 appveyor.yml Initial commit. Oct 12, 2015 README.md arules - Mining Association Rules and Frequent Itemsets - R package This R package provides the infrastructure for representing, manipulating and analyzing transaction data and patterns (frequent itemsets and association rules). Also provides interfaces to C implementations of the association mining algorithms Apriori and Eclat. Additional packages in the arules family are: arulesViz, arulesSequences and arulesNBMiner. Installation Stable CRAN version: install from within R. Current development version: Download package from AppVeyor or install via install_git(""mhahsler/arules"") (needs devtools) Example R> library(""arules"") R> data(""Adult"")  ## Mine association rules. R> rules <- apriori(Adult,  +     parameter = list(supp = 0.5, conf = 0.9, target = ""rules""))  Parameter specification:  confidence minval smax arem  aval originalSupport support minlen maxlen target   ext         0.9    0.1    1 none FALSE            TRUE     0.5      1     10  rules FALSE  Algorithmic control:  filter tree heap memopt load sort verbose     0.1 TRUE TRUE  FALSE TRUE    2    TRUE  apriori - find association rules with the apriori algorithm version 4.21 (2004.05.09)        (c) 1996-2004   Christian Borgelt set item appearances ...[0 item(s)] done [0.00s]. set transactions ...[115 item(s), 48842 transaction(s)] done [0.03s]. sorting and recoding items ... [9 item(s)] done [0.00s]. creating transaction tree ... done [0.03s]. checking subsets of size 1 2 3 4 done [0.00s]. writing ... [52 rule(s)] done [0.00s]. creating S4 object  ... done [0.01s].  R> summary(rules) set of 52 rules  rule length distribution (lhs + rhs):  1  2  3  4   2 13 24 13      Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    1.000   2.000   3.000   2.923   3.250   4.000   summary of quality measures:     support         confidence          lift         Min.   :0.5084   Min.   :0.9031   Min.   :0.9844    1st Qu.:0.5415   1st Qu.:0.9155   1st Qu.:0.9937    Median :0.5974   Median :0.9229   Median :0.9997    Mean   :0.6436   Mean   :0.9308   Mean   :1.0036    3rd Qu.:0.7426   3rd Qu.:0.9494   3rd Qu.:1.0057    Max.   :0.9533   Max.   :0.9583   Max.   :1.0586    mining info:   data ntransactions support confidence  Adult         48842     0.5        0.9  R> inspect(head(sort(rules, by = ""lift"")))   lhs                               rhs                              support confidence     lift 1 {sex=Male,                                                                                        native-country=United-States} => {race=White}                   0.5415421  0.9051090 1.058554 2 {sex=Male,                                                                                        capital-loss=None,                                                                               native-country=United-States} => {race=White}                   0.5113632  0.9032585 1.056390 3 {race=White}                   => {native-country=United-States} 0.7881127  0.9217231 1.027076 4 {race=White,                                                                                      capital-loss=None}            => {native-country=United-States} 0.7490480  0.9205626 1.025783 5 {race=White,                                                                                      sex=Male}                     => {native-country=United-States} 0.5415421  0.9204803 1.025691 6 {race=White,                                                                                      capital-gain=None}            => {native-country=United-States} 0.7194628  0.9202807 1.025469 Further Information Development version of arules on github. Michael Hahsler, Bettina Gün and Kurt Hornik, arules - A Computational Environment for Mining Association Rules and Frequent Item Sets. Journal of Statistical Software, 14(15), 2005. Michael Hahsler, Sudheer Chelluboina, Kurt Hornik, and Christian Buchta. The arules R-package ecosystem: Analyzing interesting patterns from large transaction datasets. Journal of Machine Learning Research, 12:1977-1981, 2011. arules package vignette with complete examples. Reference manual Maintainer: Michael Hahsler Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/mhahsler/arules"	"Mining Association Rules and Frequent Itemsets"	"true"
"Machine Learning"	"bigrf"	"http://cran.r-project.org/web/packages/bigrf/index.html"	"Big Random Forests: Classification and Regression Forests for Large Data Sets"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package bigrf Package ‘bigrf’ was removed from the CRAN repository. Formerly available versions can be obtained from the archive. Archived on 2015-11-21 as check problems were not corrected despite reminders."	"null"	"null"	"Big Random Forests: Classification and Regression Forests for Large Data Sets"	"true"
"Machine Learning"	"bigRR"	"http://cran.r-project.org/web/packages/bigRR/index.html"	"Generalized Ridge Regression (with special advantage for p >> n cases)"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package bigRR bigRR: Generalized Ridge Regression (with special advantage for p >> n cases) The package fits large-scale (generalized) ridge regression for various distributions of response. The shrinkage parameters (lambdas) can be pre-specified or estimated using an internal update routine (fitting a heteroscedastic effects model, or HEM). It gives possibility to shrink any subset of parameters in the model. It has special computational advantage for the cases when the number of shrinkage parameters exceeds the number of observations. For example, the package is very useful for fitting large-scale omics data, such as high-throughput genotype data (genomics), gene expression data (transcriptomics), metabolomics data, etc. Version: 1.3-10 Depends: R (≥ 2.10), utils, hglm, DatABEL Published: 2014-08-23 Author: Xia Shen, Moudud Alam and Lars Ronnegard Maintainer: Xia Shen <xia.shen at ki.se> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no Citation: bigRR citation info Materials: ChangeLog In views: MachineLearning CRAN checks: bigRR results Downloads: Reference manual: bigRR.pdf Package source: bigRR_1.3-10.tar.gz Windows binaries: r-devel: bigRR_1.3-10.zip, r-release: bigRR_1.3-10.zip, r-oldrel: bigRR_1.3-10.zip OS X Mavericks binaries: r-release: bigRR_1.3-10.tgz, r-oldrel: bigRR_1.3-10.tgz Old sources: bigRR archive Reverse dependencies: Reverse suggests: GenABEL"	"null"	"null"	"Generalized Ridge Regression (with special advantage for p >> n cases)"	"true"
"Machine Learning"	"bmrm"	"http://cran.r-project.org/web/packages/bmrm/index.html"	"Bundle Methods for Regularized Risk Minimization Package"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package bmrm bmrm: Bundle Methods for Regularized Risk Minimization Package Bundle methods for minimization of convex and non-convex risk under L1 or L2 regularization. Implements the algorithm proposed by Teo et al. (JMLR 2010) as well as the extension proposed by Do and Artieres (JMLR 2012). The package comes with lot of loss functions for machine learning which make it powerful for big data analysis. The applications includes: structured prediction, linear SVM, multi-class SVM, f-beta optimization, ROC optimization, ordinal regression, quantile regression, epsilon insensitive regression, least mean square, logistic regression, least absolute deviation regression (see package examples), etc... all with L1 and L2 regularization. Version: 3.0 Depends: R (≥ 3.0.2) Imports: lpSolve, LowRankQP Published: 2015-01-15 Author: Julien Prados Maintainer: Julien Prados <julien.prados at unige.ch> BugReports: NA License: GPL-3 Copyright: 2014, University of Geneva URL: NA NeedsCompilation: no Materials: NEWS In views: MachineLearning CRAN checks: bmrm results Downloads: Reference manual: bmrm.pdf Vignettes: bmrm User Manual Package source: bmrm_3.0.tar.gz Windows binaries: r-devel: bmrm_3.0.zip, r-release: bmrm_3.0.zip, r-oldrel: bmrm_3.0.zip OS X Mavericks binaries: r-release: bmrm_3.0.tgz, r-oldrel: bmrm_3.0.tgz Old sources: bmrm archive"	"null"	"null"	"Bundle Methods for Regularized Risk Minimization Package"	"true"
"Machine Learning"	"Boruta"	"http://cran.r-project.org/web/packages/Boruta/index.html"	"A wrapper algorithm for all-relevant feature selection"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package Boruta Boruta: Wrapper Algorithm for All-Relevant Feature Selection An all-relevant feature selection wrapper algorithm. It finds relevant features by comparing original attributes' importance with importance achievable at random, estimated using their permuted copies. Version: 5.0.0 Depends: ranger Suggests: mlbench, rFerns, randomForest Published: 2015-09-13 Author: Miron Bartosz Kursa [aut, cre], Witold Remigiusz Rudnicki [aut] Maintainer: Miron Bartosz Kursa <M.Kursa at icm.edu.pl> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: https://m2.icm.edu.pl/boruta/ NeedsCompilation: no Citation: Boruta citation info Materials: NEWS In views: MachineLearning CRAN checks: Boruta results Downloads: Reference manual: Boruta.pdf Package source: Boruta_5.0.0.tar.gz Windows binaries: r-devel: Boruta_5.0.0.zip, r-release: Boruta_5.0.0.zip, r-oldrel: Boruta_5.0.0.zip OS X Mavericks binaries: r-release: Boruta_5.0.0.tgz, r-oldrel: Boruta_5.0.0.tgz Old sources: Boruta archive Reverse dependencies: Reverse suggests: fscaret"	"null"	"null"	"A wrapper algorithm for all-relevant feature selection"	"true"
"Machine Learning"	"BreakoutDetection"	"https://github.com/twitter/BreakoutDetection"	"Breakout Detection via Robust E-Statistics from Twitter."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"496"	"188"	"92"	"GitHub - twitter/BreakoutDetection: Breakout Detection via Robust E-Statistics Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 188 Star 496 Fork 92 twitter/BreakoutDetection Code Issues 14 Pull requests 1 Pulse Graphs Breakout Detection via Robust E-Statistics 19 commits 1 branch 1 release Fetching contributors C++ 83.5% R 16.5% C++ R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v1.0.1 Nothing to show New pull request Latest commit 7ae3fc4 Apr 14, 2015 akejariwal Merge pull request #15 from harsha2010/master … add static cast to disambiguate different pow methods. gives error in compilation on Mac OSX Mavericks otherwise Permalink Failed to load latest commit information. R define a default value for t1 which R CMD check mistakenly suspects t… Oct 24, 2014 data Initial open source commit Oct 24, 2014 man Initial open source commit Oct 24, 2014 src cleanup Apr 14, 2015 .Rbuildignore add travis.yml for Travis-CI support Oct 24, 2014 .gitignore one char change Oct 24, 2014 .travis.yml add travis.yml for Travis-CI support Oct 24, 2014 DESCRIPTION Cleaning up the dependencies Oct 24, 2014 LICENSE Initial commit Oct 24, 2014 NAMESPACE Cleaning up the dependencies Oct 24, 2014 README.md Update Travis CI build to point to Twitter Oct 24, 2014 README.md BreakoutDetection R package BreakoutDetection is an open-source R package that makes breakout detection simple and fast. The BreakoutDetection package can be used in wide variety of contexts. For example, detecting breakout in user engagement post an A/B test, detecting behavioral change, or for problems in econometrics, financial engineering, political and social sciences. How the package works The underlying algorithm – referred to as E-Divisive with Medians (EDM) – employs energy statistics to detect divergence in mean. Note that EDM can also be used detect change in distribution in a given time series. EDM uses robust statistical metrics, viz., median, and estimates the statistical significance of a breakout through a permutation test. In addition, EDM is non-parametric. This is important since the distribution of production data seldom (if at all) follows the commonly assumed normal distribution or any other widely accepted model. Our experience has been that time series often contain more than one breakout. To this end, the package can also be used to detect multiple breakouts in a given time series. How to get started Install the R package using the following commands on the R console: install.packages(""devtools"") devtools::install_github(""twitter/BreakoutDetection"") library(BreakoutDetection)  The function breakout is called to detect one or more statistically significant breakouts in the input time series. The documentation of the function breakout, which can be seen by using the following command, details the input arguments and the output of the function breakout. help(breakout)  A simple example To get started, the user is recommended to use the example dataset which comes with the packages. Execute the following commands: data(Scribe) res = breakout(Scribe, min.size=24, method='multi', beta=.001, degree=1, plot=TRUE) res$plot  From the plot, we observe that the input time series experiences two breakouts and also has quite a few anomalies. The two red vertical lines denote the locations of the breakouts detected by the EDM algorithm. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/twitter/BreakoutDetection"	"Breakout Detection via Robust E-Statistics from Twitter."	"true"
"Machine Learning"	"bst"	"http://cran.r-project.org/web/packages/bst/index.html"	"Gradient Boosting"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package bst bst: Gradient Boosting Functional gradient descent algorithm for a variety of convex and nonconvex loss functions, for both classical and robust regression and classification problems. HingeBoost is implemented for binary and multi-class classification, with unequal misclassification costs for binary case. The algorithm can fit linear and nonlinear classifiers. Version: 0.3-13 Depends: gbm Imports: rpart, methods, foreach, doParallel Suggests: hdi, pROC, R.rsp, knitr Published: 2016-02-28 Author: Zhu Wang [aut, cre], Torsten Hothorn [ctb] Maintainer: Zhu Wang <zwang at connecticutchildrens.org> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no Materials: NEWS In views: MachineLearning CRAN checks: bst results Downloads: Reference manual: bst.pdf Vignettes: Classification of Cancer Types Using Gene Expression Data (Long) Classification of UCI Machine Learning Datasets (Long) Classification of UCI Machine Learning Datasets (Short) Classification of Cancer Types Using Gene Expression Data (Short) Cancer Classification Using Mass Spectrometry-based Proteomics Data Package source: bst_0.3-13.tar.gz Windows binaries: r-devel: bst_0.3-13.zip, r-release: bst_0.3-13.zip, r-oldrel: bst_0.3-13.zip OS X Mavericks binaries: r-release: bst_0.3-13.tgz, r-oldrel: bst_0.3-13.tgz Old sources: bst archive Reverse dependencies: Reverse imports: bujar Reverse suggests: fscaret, mlr"	"null"	"null"	"Gradient Boosting"	"true"
"Machine Learning"	"CausalImpact"	"https://github.com/google/CausalImpact"	"Causal inference using Bayesian structural time-series models."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"507"	"65"	"76"	"GitHub - google/CausalImpact: An R package for causal inference in time series Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 65 Star 507 Fork 76 google/CausalImpact Code Pull requests 3 Pulse Graphs An R package for causal inference in time series 31 commits 2 branches 0 releases 2 contributors R 98.5% CSS 1.5% R CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show Nothing to show New pull request Latest commit 63283f2 Apr 20, 2016 kaybrodersen Suppressing unnecessary warnings in . Permalink Failed to load latest commit information. R Update to 1.0.5, includes and minor fixes. Apr 16, 2016 inst Updated bibliographic details (manuscript in press). Sep 17, 2014 man Minor edit to documentation of prior.level.sd Sep 17, 2014 test Update to 1.0.5, includes and minor fixes. Apr 16, 2016 .gitignore Result columns now called response and cum.response. Argument y.post … Aug 17, 2014 CausalImpact.Rmd Suppressing unnecessary warnings in . Apr 20, 2016 CausalImpact.css Added example of plot with time axis to documentation. Jan 8, 2015 DESCRIPTION Update to 1.0.5, includes and minor fixes. Apr 16, 2016 LICENSE Initial commit of CausalImpact, an R package for estimating the causa… Aug 2, 2014 NAMESPACE Initial commit of CausalImpact, an R package for estimating the causa… Aug 2, 2014 README.md Updated publication details. Apr 28, 2015 README.md CausalImpact An R package for causal inference using Bayesian structural time-series models This R package implements an approach to estimating the causal effect of a designed intervention on a time series. For example, how many additional daily clicks were generated by an advertising campaign? Answering a question like this can be difficult when a randomized experiment is not available. The package aims to address this difficulty using a structural Bayesian time-series model to estimate how the response metric might have evolved after the intervention if the intervention had not occurred. As with all approaches to causal inference on non-experimental data, valid conclusions require strong assumptions. The CausalImpact package, in particular, assumes that the outcome time series can be explained in terms of a set of control time series that were themselves not affected by the intervention. Furthermore, the relation between treated series and control series is assumed to be stable during the post-intervention period. Understanding and checking these assumptions for any given application is critical for obtaining valid conclusions. Installation install.packages(""devtools"") library(devtools) devtools::install_github(""google/CausalImpact"") library(CausalImpact) Getting started Documentation and examples Further resources Manuscript: Brodersen et al., Annals of Applied Statistics (2015) Discussion forum: http://stats.stackexchange.com/ Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/google/CausalImpact"	"Causal inference using Bayesian structural time-series models."	"true"
"Machine Learning"	"C50"	"http://cran.r-project.org/web/packages/C50/index.html"	"C5.0 Decision Trees and Rule-Based Models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package C50 C50: C5.0 Decision Trees and Rule-Based Models C5.0 decision trees and rule-based models for pattern recognition. Version: 0.1.0-24 Depends: R (≥ 2.10.0) Imports: partykit Published: 2015-03-09 Author: Max Kuhn, Steve Weston, Nathan Coulter, Mark Culp. C code for C5.0 by R. Quinlan Maintainer: Max Kuhn <mxkuhn at gmail.com> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: yes In views: MachineLearning CRAN checks: C50 results Downloads: Reference manual: C50.pdf Package source: C50_0.1.0-24.tar.gz Windows binaries: r-devel: C50_0.1.0-24.zip, r-release: C50_0.1.0-24.zip, r-oldrel: C50_0.1.0-24.zip OS X Mavericks binaries: r-release: C50_0.1.0-24.tgz, r-oldrel: C50_0.1.0-24.tgz Old sources: C50 archive Reverse dependencies: Reverse depends: maboost Reverse imports: gencve Reverse suggests: fscaret, MLPUGS, utiml"	"null"	"null"	"C5.0 Decision Trees and Rule-Based Models"	"true"
"Machine Learning"	"caret"	"http://cran.r-project.org/web/packages/caret/index.html"	"Classification and Regression Training"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"342"	"52"	"182"	"GitHub - topepo/caret: caret (Classification And Regression Training) R package that contains misc functions for training and plotting classification and regression models Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 52 Star 342 Fork 182 topepo/caret Code Issues 91 Pull requests 6 Pulse Graphs caret (Classification And Regression Training) R package that contains misc functions for training and plotting classification and regression models 850 commits 5 branches 0 releases 29 contributors R 79.4% HTML 19.5% Other 1.1% R HTML Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages issue_template master tests travis-changes Nothing to show Nothing to show New pull request Latest commit 7d056de Jul 13, 2016 topepo added precision and recall statistics Permalink Failed to load latest commit information. .github spaces not tabs Feb 18, 2016 RegressionTests updated for version 6.0-70 Jun 12, 2016 deprecated Remove executable permissions from .R, .Rd, .png, and similar files Nov 17, 2014 docs initial thoughts Jul 15, 2015 html added printing of code Apr 11, 2016 models bug fix for issue #442 Jun 19, 2016 pkg/caret added precision and recall statistics Jul 13, 2016 release_process sorted Jun 8, 2016 .gitignore do not save dll files Nov 18, 2015 .travis.yml lfda revision 1 Aug 14, 2015 README.md svg looks prettier than png May 18, 2015 README.md Classification and Regression Training Miscellaneous functions for training and plotting classification and regression models. Detailed documentation is at http://topepo.github.io/caret/index.html Install the current release from CRAN: install.packages('caret') Install the development version from GitHub: devtools::install_github('topepo/caret/pkg/caret') Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/topepo/caret"	"Classification and Regression Training"	"true"
"Machine Learning"	"Clever Algorithms For Machine Learning"	"https://github.com/jbrownlee/CleverAlgorithmsMachineLearning"	""	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"189"	"41"	"56"	"GitHub - jbrownlee/CleverAlgorithmsMachineLearning: A handbook of statistical machine learning algorithms where each algorithm is described consistently to be accessible, usable, and understandable. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 41 Star 189 Fork 56 jbrownlee/CleverAlgorithmsMachineLearning Code Issues 1 Pull requests 0 Pulse Graphs A handbook of statistical machine learning algorithms where each algorithm is described consistently to be accessible, usable, and understandable. http://www.CleverAlgorithms.com 204 commits 1 branch 0 releases Fetching contributors Ruby 73.4% R 26.6% Ruby R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit f81509c Apr 15, 2013 jbrownlee added one book Permalink Failed to load latest commit information. book deleted blurb file Apr 10, 2013 src/algorithms updated makefile in root of project Apr 8, 2013 web only one makefile Apr 8, 2013 workspace added one book Apr 15, 2013 .gitignore updated gitignore Feb 8, 2012 Makefile updated readme Apr 9, 2013 README.textile typo Apr 10, 2013 product_information.txt first cut of sales/marketing info Apr 10, 2013 research_process.txt added one book Apr 14, 2013 README.textile Clever Algorithms: Statistical Machine Learning Recipes Overview Clever Algorithms: Statistical Machine Learning Recipes is an open source book that has the goal to describe a large number of algorithmic techniques from the the field of statistical machine learning in a complete, consistent, and centralized manner such that they are accessible, usable, and understandable. This is a repository for the book project used during the development and ongoing maintenance of the books’ content. The book will be released for free on the website CleverAlgorithms.com and will be available for purchase as a paperback and ebook. Book Details Title Clever Algorithms: Statistical Machine Learning Recipes Author Jason Brownlee Release mid 2013 Blurb Implementing an Machine Learning algorithms is difficult. Algorithm descriptions may be incomplete, inconsistent, and distributed across a number of papers, chapters and even websites. This can result in varied interpretations of algorithms, undue attrition of algorithms, and ultimately bad science. This book is an effort to address these issues by providing a handbook of algorithmic recipes drawn from the field of Machine Learning, described in a complete, consistent, and centralized manner. These standardized descriptions were carefully designed to be accessible, usable, and understandable. An encyclopedic algorithm reference, this book is intended for research scientists, engineers, students, and interested amateurs. Each algorithm description provides a working code example in R. Project How to Build Assumes a Linux or Mac workstation with make, Latex such as TeXLive or MacTex installed and maybe JabRef git clone git@github.com:jbrownlee/CleverAlgorithmsMachineLearning.git cd CleverAlgorithmsMachineLearning make r (creates the file book/book.pdf) make vl (to view the PDF on linux) or make vm (to view the PDF on mac) Contribute If you find a typo or a mistake, please email me at jasonb@CleverAlgorithms.com or clone this project and make, make a change and submit a pull request. I will happily give you credit in the acknowledgments. Support The best support you can give to this project is to buy a copy of the paperback and spread the word by writing a review, blog post or tweet. You might be interested in the previous book that covered Genetic Algorithms, Swarm Intelligence, Neural Networks and related algorithms. See Clever Algorithms: Nature Inspired Programming Recipes License © Copyright 2013 Jason Brownlee. Some Rights Reserved. This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jbrownlee/CleverAlgorithmsMachineLearning"	""	"true"
"Machine Learning"	"CORElearn"	"http://cran.r-project.org/web/packages/CORElearn/index.html"	"Classification, regression, feature evaluation and ordinal evaluation"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package CORElearn CORElearn: Classification, Regression and Feature Evaluation This is a suite of machine learning algorithms written in C++ with R interface. It contains several machine learning model learning techniques in classification and regression, for example classification and regression trees with optional constructive induction and models in the leaves, random forests, kNN, naive Bayes, and locally weighted regression. All predictions obtained with these models can be explained and visualized with ExplainPrediction package. The package is especially strong in feature evaluation where it contains several variants of Relief algorithm and many impurity based attribute evaluation functions, e.g., Gini, information gain, MDL, and DKM. These methods can be used for example to discretize numeric attributes. Its additional feature is OrdEval algorithm and its visualization used for evaluation of data sets with ordinal features and class, enabling analysis according to the Kano model of customer satisfaction. Several algorithms support parallel multithreaded execution via OpenMP. The top-level documentation is reachable through ?CORElearn. Version: 1.47.1 Imports: cluster, rpart, stats Suggests: lattice, MASS, rpart.plot Published: 2015-09-04 Author: Marko Robnik-Sikonja and Petr Savicky with contributions from John Adeyanju Alao Maintainer: ""Marko Robnik-Sikonja"" <marko.robnik at fri.uni-lj.si> BugReports: NA License: GPL-3 URL: http://lkm.fri.uni-lj.si/rmarko/software/ NeedsCompilation: yes Materials: ChangeLog In views: MachineLearning CRAN checks: CORElearn results Downloads: Reference manual: CORElearn.pdf Package source: CORElearn_1.47.1.tar.gz Windows binaries: r-devel: CORElearn_1.47.1.zip, r-release: CORElearn_1.47.1.zip, r-oldrel: CORElearn_1.47.1.zip OS X Mavericks binaries: r-release: CORElearn_1.47.1.tgz, r-oldrel: CORElearn_1.47.1.tgz Old sources: CORElearn archive Reverse dependencies: Reverse depends: ExplainPrediction Reverse imports: AppliedPredictiveModeling, semiArtificial"	"null"	"null"	"Classification, regression, feature evaluation and ordinal evaluation"	"true"
"Machine Learning"	"CoxBoost"	"http://cran.r-project.org/web/packages/CoxBoost/index.html"	"Cox models by likelihood based boosting for a single survival endpoint or competing risks"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package CoxBoost CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks This package provides routines for fitting Cox models by likelihood based boosting for a single endpoint or in presence of competing risks Version: 1.4 Depends: R (≥ 2.14.0), survival, Matrix, prodlim Suggests: parallel, snowfall Published: 2013-05-10 Author: Harald Binder Maintainer: Harald Binder <binderh at uni-mainz.de> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: yes Materials: ChangeLog In views: MachineLearning, Survival CRAN checks: CoxBoost results Downloads: Reference manual: CoxBoost.pdf Package source: CoxBoost_1.4.tar.gz Windows binaries: r-devel: CoxBoost_1.4.zip, r-release: CoxBoost_1.4.zip, r-oldrel: CoxBoost_1.4.zip OS X Mavericks binaries: r-release: CoxBoost_1.4.tgz, r-oldrel: CoxBoost_1.4.tgz Old sources: CoxBoost archive Reverse dependencies: Reverse depends: sprinter Reverse suggests: mlr, pec, peperr"	"null"	"null"	"Cox models by likelihood based boosting for a single survival endpoint or competing risks"	"true"
"Machine Learning"	"Cubist"	"http://cran.r-project.org/web/packages/Cubist/index.html"	"Rule- and Instance-Based Regression Modeling"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package Cubist Cubist: Rule- and Instance-Based Regression Modeling Regression modeling using rules with added instance-based corrections Version: 0.0.18 Depends: lattice Imports: reshape2 Suggests: mlbench, caret Published: 2014-06-07 Author: Max Kuhn, Steve Weston, Chris Keefer, Nathan Coulter. C code for Cubist by Ross Quinlan Maintainer: Max Kuhn <mxkuhn at gmail.com> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: yes Materials: NEWS In views: MachineLearning CRAN checks: Cubist results Downloads: Reference manual: Cubist.pdf Vignettes: Cubist Models for Regression Package source: Cubist_0.0.18.tar.gz Windows binaries: r-devel: Cubist_0.0.18.zip, r-release: Cubist_0.0.18.zip, r-oldrel: Cubist_0.0.18.zip OS X Mavericks binaries: r-release: Cubist_0.0.18.tgz, r-oldrel: Cubist_0.0.18.tgz Old sources: Cubist archive Reverse dependencies: Reverse imports: rminer Reverse suggests: caret, fscaret, mlr"	"null"	"null"	"Rule- and Instance-Based Regression Modeling"	"true"
"Machine Learning"	"e1071"	"http://cran.r-project.org/web/packages/e1071/index.html"	"Misc Functions of the Department of Statistics (e1071), TU Wien"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package e1071 e1071: Misc Functions of the Department of Statistics, Probability Theory Group (Formerly: E1071), TU Wien Functions for latent class analysis, short time Fourier transform, fuzzy clustering, support vector machines, shortest path computation, bagged clustering, naive Bayes classifier, ... Version: 1.6-7 Imports: graphics, grDevices, class, stats, methods, utils Suggests: cluster, mlbench, nnet, randomForest, rpart, SparseM, xtable, Matrix, MASS Published: 2015-08-05 Author: David Meyer [aut, cre], Evgenia Dimitriadou [aut, cph], Kurt Hornik [aut], Andreas Weingessel [aut], Friedrich Leisch [aut], Chih-Chung Chang [ctb, cph] (libsvm C++-code), Chih-Chen Lin [ctb, cph] (libsvm C++-code) Maintainer: David Meyer <David.Meyer at R-project.org> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: yes Materials: NEWS In views: Cluster, Distributions, Environmetrics, MachineLearning, Multivariate, Psychometrics CRAN checks: e1071 results Downloads: Reference manual: e1071.pdf Vignettes: Support Vector Machines—the Interface to libsvm in package e1071 svm() internals Package source: e1071_1.6-7.tar.gz Windows binaries: r-devel: e1071_1.6-7.zip, r-release: e1071_1.6-7.zip, r-oldrel: e1071_1.6-7.zip OS X Mavericks binaries: r-release: e1071_1.6-7.tgz, r-oldrel: e1071_1.6-7.tgz Old sources: e1071 archive Reverse dependencies: Reverse depends: BayesLCA, bayesMCClust, bios2mds, BSDA, classyfire, ClueR, clustrd, conformal, dad, eegAnalysis, flip, gskat, InventorymodelPackage, KODAMA, MAclinical, mlDNA, obliqueRF, parallelSVM, PASWR, penalizedSVM, RMediation, tiger, VHDClassification Reverse imports: bindata, Biocomb, cati, chemometrics, classInt, clusterfly, clusterSim, cocoreg, Deducer, dpcR, dprep, DrugClust, EnsembleBase, fungible, gencve, gld, hda, hybridEnsemble, hydroTSM, IntClust, lfl, LOGIT, LOST, MetaLandSim, mistral, MixGHD, mlearning, msr, MXM, NoiseFiltersR, nproc, optBiomarker, PASWR2, ppiPre, preprocomb, rasclass, RcmdrMisc, RecordLinkage, REndo, rminer, robCompositions, RObsDat, RobustEM, RTextTools, sdcMicro, simPop, SixSigma, sprint, SSDM, SSL, StatDA, stylo, SwarmSVM, symbolicDA, tableone, translateSPSS2R, TTAinterfaceTrendAnalysis, VIM, xseq Reverse suggests: A3, benchmark, BiodiversityR, boostr, caret, caretEnsemble, caschrono, catdata, ChemometricsWithR, classifly, clue, coin, crtests, Daim, emil, FinTS, flacco, frbs, fscaret, gmum.r, IPSUR, klaR, languageR, mistat, MLmetrics, mlr, pmml, pvar, rattle, Rcmdr, RcmdrPlugin.IPSUR, RcmdrPlugin.NMBU, ripa, RStoolbox, RWeka, soil.spec, SPOT, strucchange, subsemble, SuperLearner, TDMR, tmle.npvi, TunePareto, utiml, VBmix"	"null"	"null"	"Misc Functions of the Department of Statistics (e1071), TU Wien"	"true"
"Machine Learning"	"earth"	"http://cran.r-project.org/web/packages/earth/index.html"	"Multivariate Adaptive Regression Spline Models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package earth earth: Multivariate Adaptive Regression Splines Build regression models using the techniques in Friedman's papers ""Fast MARS"" and ""Multivariate Adaptive Regression Splines"". (The term ""MARS"" is trademarked and thus not used in the name of the package.) Version: 4.4.4 Depends: plotmo (≥ 3.0.0), TeachingDemos Suggests: gam, mgcv, mda, MASS Published: 2016-01-08 Author: Stephen Milborrow. Derived from mda:mars by Trevor Hastie and Rob Tibshirani. Uses Alan Miller's Fortran utilities with Thomas Lumley's leaps wrapper. Maintainer: Stephen Milborrow <milbo at sonic.net> BugReports: NA License: GPL-3 URL: http://www.milbo.users.sonic.net/earth NeedsCompilation: yes Materials: NEWS In views: Environmetrics, MachineLearning, Multivariate CRAN checks: earth results Downloads: Reference manual: earth.pdf Package source: earth_4.4.4.tar.gz Windows binaries: r-devel: earth_4.4.4.zip, r-release: earth_4.4.4.zip, r-oldrel: earth_4.4.4.zip OS X Mavericks binaries: r-release: earth_4.4.4.tgz, r-oldrel: earth_4.4.4.tgz Old sources: earth archive Reverse dependencies: Reverse depends: emma Reverse imports: biomod2, bujar, CONDOP, SSDM Reverse suggests: binst, BiodiversityR, caret, ElemStatLearn, fscaret, mda, mlr, plotmo, rpart.plot, SPOT, subsemble, SuperLearner"	"null"	"null"	"Multivariate Adaptive Regression Spline Models"	"true"
"Machine Learning"	"elasticnet"	"http://cran.r-project.org/web/packages/elasticnet/index.html"	"Elastic-Net for Sparse Estimation and Sparse PCA"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package elasticnet elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA This package provides functions for fitting the entire solution path of the Elastic-Net and also provides functions for estimating sparse Principal Components. The Lasso solution paths can be computed by the same function. First version: 2005-10. Version: 1.1 Depends: R (≥ 2.10), lars Published: 2012-06-28 Author: Hui Zou and Trevor Hastie Maintainer: Hui Zou <hzou at stat.umn.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.stat.umn.edu/~hzou NeedsCompilation: no In views: ChemPhys, MachineLearning CRAN checks: elasticnet results Downloads: Reference manual: elasticnet.pdf Package source: elasticnet_1.1.tar.gz Windows binaries: r-devel: elasticnet_1.1.zip, r-release: elasticnet_1.1.zip, r-oldrel: elasticnet_1.1.zip OS X Mavericks binaries: r-release: elasticnet_1.1.tgz, r-oldrel: elasticnet_1.1.tgz Old sources: elasticnet archive Reverse dependencies: Reverse depends: FADA, FisherEM, funFEM, regsel Reverse imports: bujar, CorReg, epoc, LINselect, smart, sparseLDA Reverse suggests: ChemometricsWithR, fscaret, mlr"	"null"	"null"	"Elastic-Net for Sparse Estimation and Sparse PCA"	"true"
"Machine Learning"	"ElemStatLearn"	"http://cran.r-project.org/web/packages/ElemStatLearn/index.html"	"Data sets, functions and examples from the book: ""The Elements of Statistical Learning, Data Mining, Inference, and Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ElemStatLearn ElemStatLearn: Data Sets, Functions and Examples from the Book: ""The Elements of Statistical Learning, Data Mining, Inference, and Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Useful when reading the book above mentioned, in the documentation referred to as ‘the book’. Version: 2015.6.26 Depends: R (≥ 2.10.0), stats Suggests: gam, splines, MASS, class, leaps, mda, lasso2, lars, boot, prim, earth Published: 2015-06-27 Author: Material from the book's webpage, R port and packaging by Kjetil B Halvorsen Maintainer: Kjetil B Halvorsen <kjetil1001 at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www-stat.stanford.edu/~tibs/ElemStatLearn/ NeedsCompilation: no Materials: NEWS In views: MachineLearning CRAN checks: ElemStatLearn results Downloads: Reference manual: ElemStatLearn.pdf Package source: ElemStatLearn_2015.6.26.tar.gz Windows binaries: r-devel: ElemStatLearn_2015.6.26.zip, r-release: ElemStatLearn_2015.6.26.zip, r-oldrel: ElemStatLearn_2015.6.26.zip OS X Mavericks binaries: r-release: ElemStatLearn_2015.6.26.tgz, r-oldrel: ElemStatLearn_2015.6.26.tgz Old sources: ElemStatLearn archive Reverse dependencies: Reverse suggests: directlabels, genridge, tensorBSS"	"null"	"null"	"Data sets, functions and examples from the book: ""The Elements of Statistical Learning, Data Mining, Inference, and Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman"	"true"
"Machine Learning"	"evtree"	"http://cran.r-project.org/web/packages/evtree/index.html"	"Evolutionary Learning of Globally Optimal Trees"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package evtree evtree: Evolutionary Learning of Globally Optimal Trees Commonly used classification and regression tree methods like the CART algorithm are recursive partitioning methods that build the model in a forward stepwise search. Although this approach is known to be an efficient heuristic, the results of recursive tree methods are only locally optimal, as splits are chosen to maximize homogeneity at the next step only. An alternative way to search over the parameter space of trees is to use global optimization methods like evolutionary algorithms. The evtree package implements an evolutionary algorithm for learning globally optimal classification and regression trees in R. CPU and memory-intensive tasks are fully computed in C++ while the partykit package is leveraged to represent the resulting trees in R, providing unified infrastructure for summaries, visualizations, and predictions. Version: 1.0-0 Depends: R (≥ 2.11.0), partykit Suggests: Formula, kernlab, lattice, mlbench, multcomp, party, rpart, xtable Published: 2014-10-15 Author: Thomas Grubinger [aut, cre], Achim Zeileis [aut], Karl-Peter Pfeiffer [aut] Maintainer: Thomas Grubinger <Thomas.Grubinger at scch.at> BugReports: NA License: GPL-2 | GPL-3 URL: NA NeedsCompilation: yes Citation: evtree citation info Materials: NEWS In views: MachineLearning CRAN checks: evtree results Downloads: Reference manual: evtree.pdf Vignettes: Evolutionary Learning of Globally Optimal Classification and Regression Trees in R Package source: evtree_1.0-0.tar.gz Windows binaries: r-devel: evtree_1.0-0.zip, r-release: evtree_1.0-0.zip, r-oldrel: evtree_1.0-0.zip OS X Mavericks binaries: r-release: evtree_1.0-0.tgz, r-oldrel: evtree_1.0-0.tgz Old sources: evtree archive Reverse dependencies: Reverse suggests: fscaret"	"null"	"null"	"Evolutionary Learning of Globally Optimal Trees"	"true"
"Machine Learning"	"FSelector"	"https://cran.r-project.org/web/packages/FSelector/index.html"	"A feature selection framework, based on subset-search or feature ranking approches."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package FSelector FSelector: Selecting Attributes Functions for selecting attributes from a given dataset. Attribute subset selection is the process of identifying and removing as much of the irrelevant and redundant information as possible. Version: 0.21 Imports: randomForest, RWeka, digest, entropy Suggests: mlbench, rpart Published: 2016-06-30 Author: Piotr Romanski, Lars Kotthoff Maintainer: Lars Kotthoff <larsko at cs.ubc.ca> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no Materials: README CRAN checks: FSelector results Downloads: Reference manual: FSelector.pdf Package source: FSelector_0.21.tar.gz Windows binaries: r-devel: FSelector_0.21.zip, r-release: FSelector_0.21.zip, r-oldrel: FSelector_0.21.zip OS X Mavericks binaries: r-release: FSelector_0.20.tgz, r-oldrel: FSelector_0.20.tgz Old sources: FSelector archive Reverse dependencies: Reverse imports: Biocomb Reverse suggests: mlr, utiml"	"null"	"null"	"A feature selection framework, based on subset-search or feature ranking approches."	"true"
"Machine Learning"	"frbs"	"http://cran.r-project.org/web/packages/frbs/index.html"	"Fuzzy Rule-based Systems for Classification and Regression Tasks"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package frbs frbs: Fuzzy Rule-Based Systems for Classification and Regression Tasks An implementation of various learning algorithms based on fuzzy rule-based systems (FRBSs) for dealing with classification and regression tasks. Moreover, it allows to construct an FRBS model defined by human experts. FRBSs are based on the concept of fuzzy sets, proposed by Zadeh in 1965, which aims at representing the reasoning of human experts in a set of IF-THEN rules, to handle real-life problems in, e.g., control, prediction and inference, data mining, bioinformatics data processing, and robotics. FRBSs are also known as fuzzy inference systems and fuzzy models. During the modeling of an FRBS, there are two important steps that need to be conducted: structure identification and parameter estimation. Nowadays, there exists a wide variety of algorithms to generate fuzzy IF-THEN rules automatically from numerical data, covering both steps. Approaches that have been used in the past are, e.g., heuristic procedures, neuro-fuzzy techniques, clustering methods, genetic algorithms, squares methods, etc. Furthermore, in this version we provide a universal framework named 'frbsPMML', which is adopted from the Predictive Model Markup Language (PMML), for representing FRBS models. PMML is an XML-based language to provide a standard for describing models produced by data mining and machine learning algorithms. Therefore, we are allowed to export and import an FRBS model to/from 'frbsPMML'. Finally, this package aims to implement the most widely used standard procedures, thus offering a standard package for FRBS modeling to the R community. Version: 3.1-0 Suggests: class, e1071, XML Published: 2015-05-22 Author: Lala Septem Riza, Christoph Bergmeir, Francisco Herrera, and Jose Manuel Benitez Maintainer: Christoph Bergmeir <c.bergmeir at decsai.ugr.es> BugReports: NA License: GPL-2 | GPL-3 | file LICENSE [expanded from: GPL (≥ 2) | file LICENSE] URL: http://sci2s.ugr.es/dicits/software/FRBS NeedsCompilation: no Citation: frbs citation info In views: MachineLearning CRAN checks: frbs results Downloads: Reference manual: frbs.pdf Package source: frbs_3.1-0.tar.gz Windows binaries: r-devel: frbs_3.1-0.zip, r-release: frbs_3.1-0.zip, r-oldrel: frbs_3.1-0.zip OS X Mavericks binaries: r-release: frbs_3.1-0.tgz, r-oldrel: frbs_3.1-0.tgz Old sources: frbs archive Reverse dependencies: Reverse suggests: mlr"	"null"	"null"	"Fuzzy Rule-based Systems for Classification and Regression Tasks"	"true"
"Machine Learning"	"GAMBoost"	"http://cran.r-project.org/web/packages/GAMBoost/index.html"	"Generalized linear and additive models by likelihood based boosting"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package GAMBoost GAMBoost: Generalized linear and additive models by likelihood based boosting This package provides routines for fitting generalized linear and and generalized additive models by likelihood based boosting, using penalized B-splines Version: 1.2-3 Depends: R (≥ 2.14.0), Matrix Suggests: parallel, snowfall Published: 2013-05-10 Author: Harald Binder Maintainer: Harald Binder <binderh at uni-mainz.de> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: yes Citation: GAMBoost citation info Materials: ChangeLog In views: HighPerformanceComputing, MachineLearning CRAN checks: GAMBoost results Downloads: Reference manual: GAMBoost.pdf Package source: GAMBoost_1.2-3.tar.gz Windows binaries: r-devel: GAMBoost_1.2-3.zip, r-release: GAMBoost_1.2-3.zip, r-oldrel: GAMBoost_1.2-3.zip OS X Mavericks binaries: r-release: GAMBoost_1.2-3.tgz, r-oldrel: GAMBoost_1.2-3.tgz Old sources: GAMBoost archive Reverse dependencies: Reverse imports: sprinter Reverse suggests: catdata"	"null"	"null"	"Generalized linear and additive models by likelihood based boosting"	"true"
"Machine Learning"	"gamboostLSS"	"http://cran.r-project.org/web/packages/gamboostLSS/index.html"	"Boosting Methods for GAMLSS"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"2"	"5"	"2"	"GitHub - boost-R/gamboostLSS: Boosting models for fitting generalized additive models for location, shape and scale (GAMLSS) to potentially high dimensional data. The current relase version can be found on CRAN (https://cran.r-project.org/package=gamboostLSS). Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 5 Star 2 Fork 2 boost-R/gamboostLSS Code Issues 3 Pull requests 0 Pulse Graphs Boosting models for fitting generalized additive models for location, shape and scale (GAMLSS) to potentially high dimensional data. The current relase version can be found on CRAN (https://cran.r-project.org/package=gamboostLSS). 259 commits 2 branches 0 releases Fetching contributors R 92.5% TeX 7.0% Other 0.5% R TeX Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master noncyclical_fitting Nothing to show Nothing to show New pull request Latest commit 19626ea Jun 7, 2016 mayrandy fix error in manual Permalink Failed to load latest commit information. patch Update repository to boost-R Mar 11, 2016 pkg fix error in manual Jun 7, 2016 www R-Forge: updated repository structure May 28, 2009 .travis.yml Update .travis.yml Nov 9, 2015 README.md Update README.md Mar 7, 2016 SOP_release.txt Fixed SOPs, .Rbuildignore files and NAMESPACE Aug 19, 2015 appveyor.yml Update appveyor.yml Mar 23, 2016 buildCRAN SECOND TRY: RELEASE VERSION gamboostLSS 1.1-0 Jun 12, 2014 copy_Rout_to_Routsave.R Updated release SOPs and scripts Jun 17, 2015 README.md gamboostLSS gamboostLSS implements boosting algorithms for fitting generalized linear, additive and interaction models for to potentially high-dimensional data. Instead of modeling only the mean, gamboostLSS enables the user to model various distribution parameters such as location, scale and shape at the same time (hence the name GAMLSS, generalized additive models for location, scale and shape). Installation Current version (from CRAN): install.packages(""gamboostLSS"")  Latest patch version (under development) from GitHub: library(""devtools"") install_github(""boost-R/gamboostLSS/patch"") library(""gamboostLSS"")  Latest development version from GitHub: library(""devtools"") install_github(""boost-R/gamboostLSS/pkg"") library(""gamboostLSS"")  To be able to use the install_github() command, one needs to install devtools first: install.packages(""devtools"")  Using gamboostLSS Instructions on how to use gamboostLSS can be found here: gamboostLSS tutorial; This is apreliminary version currently under review. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hofnerb/gamboostLSS"	"Boosting Methods for GAMLSS"	"true"
"Machine Learning"	"gbm"	"http://cran.r-project.org/web/packages/gbm/index.html"	"Generalized Boosted Regression Models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package gbm gbm: Generalized Boosted Regression Models An implementation of extensions to Freund and Schapire's AdaBoost algorithm and Friedman's gradient boosting machine. Includes regression methods for least squares, absolute loss, t-distribution loss, quantile regression, logistic, multinomial logistic, Poisson, Cox proportional hazards partial likelihood, AdaBoost exponential loss, Huberized hinge loss, and Learning to Rank measures (LambdaMart). Version: 2.1.1 Depends: R (≥ 2.9.0), survival, lattice, splines, parallel Suggests: RUnit Published: 2015-03-11 Author: Greg Ridgeway with contributions from others Maintainer: Harry Southworth <harry.southworth at gmail.com> BugReports: NA License: GPL-2 | GPL-3 | file LICENSE [expanded from: GPL (≥ 2) | file LICENSE] URL: http://code.google.com/p/gradientboostedmodels/ NeedsCompilation: yes In views: MachineLearning, Survival CRAN checks: gbm results Downloads: Reference manual: gbm.pdf Package source: gbm_2.1.1.tar.gz Windows binaries: r-devel: gbm_2.1.1.zip, r-release: gbm_2.1.1.zip, r-oldrel: gbm_2.1.1.zip OS X Mavericks binaries: r-release: gbm_2.1.1.tgz, r-oldrel: gbm_2.1.1.tgz Old sources: gbm archive Reverse dependencies: Reverse depends: BigTSP, bst, ecospat, gbm2sas, mma, twang Reverse imports: biomod2, bujar, EnsembleBase, fitcoach, inTrees, mvtboost, SSDM Reverse suggests: AzureML, BiodiversityR, caretEnsemble, crimelinkage, dismo, fscaret, mboost, mlr, ModelMap, preprosim, subsemble, SuperLearner"	"null"	"null"	"Generalized Boosted Regression Models"	"true"
"Machine Learning"	"glmnet"	"http://cran.r-project.org/web/packages/glmnet/index.html"	"Lasso and elastic-net regularized generalized linear models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package glmnet glmnet: Lasso and Elastic-Net Regularized Generalized Linear Models Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression and the Cox model. Two recent additions are the multiple-response Gaussian, and the grouped multinomial. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the paper linked to via the URL below. Version: 2.0-5 Depends: Matrix (≥ 1.0-6), utils, foreach Imports: methods Suggests: survival, knitr, lars Published: 2016-03-17 Author: Jerome Friedman, Trevor Hastie, Noah Simon, Rob Tibshirani Maintainer: Trevor Hastie <hastie at stanford.edu> BugReports: NA License: GPL-2 URL: http://www.jstatsoft.org/v33/i01/. NeedsCompilation: yes Citation: glmnet citation info Materials: ChangeLog In views: MachineLearning CRAN checks: glmnet results Downloads: Reference manual: glmnet.pdf Vignettes: An Introduction to Glmnet Fitting the Penalized Cox Model Package source: glmnet_2.0-5.tar.gz Windows binaries: r-devel: glmnet_2.0-5.zip, r-release: glmnet_2.0-5.zip, r-oldrel: glmnet_2.0-5.zip OS X Mavericks binaries: r-release: glmnet_2.0-5.tgz, r-oldrel: glmnet_2.0-5.tgz Old sources: glmnet archive Reverse dependencies: Reverse depends: AdapEnetClass, bapred, bigdata, BigTSP, BioMark, CAM, cosso, covTest, DivMelt, DTRlearn, elasso, EstHer, fcd, FindIt, glmnetcr, glmvsd, Grace, hdlm, HiCfeat, InvariantCausalPrediction, ipflasso, lassoscore, mht, MMMS, MMS, MNS, netgsa, oblique.tree, parcor, PAS, PRIMsrc, prototest, qut, refund.wave, regsel, relaxnet, roccv, RVtests, selectiveInference, SIMMS, SIS, SML, SOIL, SparseLearner, sparsenet, SubLasso, widenet Reverse imports: anoint, bastah, c060, Causata, cocoreg, ComICS, CorReg, CovSelHigh, customizedTraining, EnsembleBase, EnsemblePenReg, FADA, gencve, graphicalVAR, GWLelast, hdi, hdm, hdnom, hit, hybridEnsemble, IsingFit, kernDeepStackNet, knockoff, LPR, MESS, metafuse, mgm, MPAgenomics, mpath, mplot, msr, nproc, pact, parboost, pgraph, polywog, rdomains, RPtests, RSDA, rsig, RTextTools, sparsereg, sparsevar, stm, SurvRank, TANDEM, XMRF Reverse suggests: broom, caretEnsemble, catdata, CompareCausalNetworks, EBglmnet, emil, fbRanks, FeatureHashing, flexmix, FRESA.CAD, fscaret, ggfortify, heuristica, medflex, mlr, ModelGood, nscancor, pmml, randomForestSRC, simulator, subsemble, SuperLearner, text2vec, varbvs Reverse enhances: coefplot, stabs"	"null"	"null"	"Lasso and elastic-net regularized generalized linear models"	"true"
"Machine Learning"	"glmpath"	"http://cran.r-project.org/web/packages/glmpath/index.html"	"L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package glmpath glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model A path-following algorithm for L1 regularized generalized linear models and Cox proportional hazards model Version: 0.97 Depends: survival, R (≥ 2.0) Published: 2013-02-06 Author: Mee Young Park, Trevor Hastie Maintainer: Mee Young Park <meeyoung at google.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: yes In views: MachineLearning, Survival CRAN checks: glmpath results Downloads: Reference manual: glmpath.pdf Package source: glmpath_0.97.tar.gz Windows binaries: r-devel: glmpath_0.97.zip, r-release: glmpath_0.97.zip, r-oldrel: glmpath_0.97.zip OS X Mavericks binaries: r-release: glmpath_0.97.tgz, r-oldrel: glmpath_0.97.tgz Old sources: glmpath archive Reverse dependencies: Reverse depends: covTest, glmpathcr"	"null"	"null"	"L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model"	"true"
"Machine Learning"	"GMMBoost"	"http://cran.r-project.org/web/packages/GMMBoost/index.html"	"Likelihood-based Boosting for Generalized mixed models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package GMMBoost GMMBoost: Likelihood-based Boosting for Generalized mixed models Likelihood-based Boosting for Generalized mixed models Version: 1.1.2 Imports: minqa, magic Published: 2013-11-22 Author: Andreas Groll Maintainer: Andreas Groll <groll at mathematik.uni-muenchen.de> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: GMMBoost results Downloads: Reference manual: GMMBoost.pdf Package source: GMMBoost_1.1.2.tar.gz Windows binaries: r-devel: GMMBoost_1.1.2.zip, r-release: GMMBoost_1.1.2.zip, r-oldrel: GMMBoost_1.1.2.zip OS X Mavericks binaries: r-release: GMMBoost_1.1.2.tgz, r-oldrel: GMMBoost_1.1.2.tgz Old sources: GMMBoost archive"	"null"	"null"	"Likelihood-based Boosting for Generalized mixed models"	"true"
"Machine Learning"	"grplasso"	"http://cran.r-project.org/web/packages/grplasso/index.html"	"Fitting user specified models with Group Lasso penalty"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package grplasso grplasso: Fitting user specified models with Group Lasso penalty Fits user specified (GLM-) models with Group Lasso penalty Version: 0.4-5 Depends: methods Published: 2015-01-23 Author: Lukas Meier Maintainer: Lukas Meier <meier at stat.math.ethz.ch> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: grplasso results Downloads: Reference manual: grplasso.pdf Package source: grplasso_0.4-5.tar.gz Windows binaries: r-devel: grplasso_0.4-5.zip, r-release: grplasso_0.4-5.zip, r-oldrel: grplasso_0.4-5.zip OS X Mavericks binaries: r-release: grplasso_0.4-5.tgz, r-oldrel: grplasso_0.4-5.tgz Old sources: grplasso archive Reverse dependencies: Reverse depends: DIFlasso, hgam, ordPens"	"null"	"null"	"Fitting user specified models with Group Lasso penalty"	"true"
"Machine Learning"	"grpreg"	"http://cran.r-project.org/web/packages/grpreg/index.html"	"Regularization paths for regression models with grouped covariates"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"4"	"3"	"1"	"GitHub - pbreheny/grpreg: Regularization paths for regression models with grouped covariates Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 3 Star 4 Fork 1 pbreheny/grpreg Code Issues 0 Pull requests 0 Pulse Graphs Regularization paths for regression models with grouped covariates 59 commits 1 branch 0 releases Fetching contributors R 58.6% C 41.4% R C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. R grpsurv uses reorderGroups() Jul 9, 2016 data git now tracks data/ folder Jul 9, 2016 inst Refactoring w/ reorderGroups() function Jul 9, 2016 man grpsurv uses reorderGroups() Jul 9, 2016 src 3.0-1: Fixed memory allocation problem, birthwt.grpreg is back-but-de… Jun 6, 2016 tests Minor cleaning of files Jun 13, 2016 vignettes Updated documentation (vignette) to reflect recent changes Jul 11, 2016 .gitignore git now tracks data/ folder Jul 9, 2016 DESCRIPTION Version 3.0-2 to CRAN Jul 11, 2016 NAMESPACE Updated NAMESPACE, DESCRIPTION, docs in prep for 3.0 going to CRAN May 25, 2016 NEWS Updated documentation (vignette) to reflect recent changes Jul 11, 2016 README.md Increased automatic (forced) testing; codecov; bug fixes for coersion… May 31, 2016 README.md grpreg fits regularization paths for linear, logistic, or Poisson regression models with grouped penalties, such as the group lasso, group MCP, group SCAD, group exponential lasso, and group bridge. The algorithms are based on the idea of either locally approximated coordinate descent or group descent, depending on the penalty. All of the algorithms (with the exception of group bridge) are stable and fast. To install: the latest released version: install.packages(""grpreg"") the latest version (requires devtools): install_github(""pbreheny/grpreg"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/pbreheny/grpreg"	"Regularization paths for regression models with grouped covariates"	"true"
"Machine Learning"	"h2o"	"http://cran.r-project.org/web/packages/h2o/index.html"	"Deeplearning, Random forests, GBM, KMeans, PCA, GLM"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package h2o h2o: R Interface for H2O R scripting functionality for H2O, the open source math engine for big data that computes parallel distributed machine learning algorithms such as generalized linear models, gradient boosting machines, random forests, and neural networks (deep learning) within various cluster environments. Version: 3.8.3.3 Depends: R (≥ 2.13.0), methods, statmod, stats Imports: graphics, RCurl, jsonlite, tools, utils Suggests: devtools, roxygen2, testthat, ggplot2, mlbench Published: 2016-07-13 Author: Spencer Aiello, Tom Kraljevic and Petr Maj, with contributions from the H2O.ai team Maintainer: Tom Kraljevic <tomk at 0xdata.com> BugReports: NA License: Apache License (== 2.0) URL: http://www.h2o.ai NeedsCompilation: no SystemRequirements: Java (>= 1.7) Materials: NEWS In views: HighPerformanceComputing, MachineLearning CRAN checks: h2o results Downloads: Reference manual: h2o.pdf Package source: h2o_3.8.3.3.tar.gz Windows binaries: r-devel: h2o_3.8.3.3.zip, r-release: h2o_3.8.3.3.zip, r-oldrel: h2o_3.8.3.3.zip OS X Mavericks binaries: r-release: h2o_3.8.3.3.tgz, r-oldrel: h2o_3.8.3.3.tgz Old sources: h2o archive"	"null"	"null"	"Deeplearning, Random forests, GBM, KMeans, PCA, GLM"	"true"
"Machine Learning"	"hda"	"http://cran.r-project.org/web/packages/hda/index.html"	"Heteroscedastic Discriminant Analysis"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package hda hda: Heteroscedastic Discriminant Analysis Functions to perform dimensionality reduction for classification if the covariance matrices of the classes are unequal. Version: 0.2-14 Imports: e1071 Suggests: mvtnorm, klaR, MASS Published: 2016-03-04 Author: Gero Szepannek Maintainer: Gero Szepannek <gero.szepannek at web.de> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: hda results Downloads: Reference manual: hda.pdf Package source: hda_0.2-14.tar.gz Windows binaries: r-devel: hda_0.2-14.zip, r-release: hda_0.2-14.zip, r-oldrel: hda_0.2-14.zip OS X Mavericks binaries: r-release: hda_0.2-14.tgz, r-oldrel: hda_0.2-14.tgz Old sources: hda archive Reverse dependencies: Reverse suggests: fscaret"	"null"	"null"	"Heteroscedastic Discriminant Analysis"	"true"
"Machine Learning"	"ipred"	"http://cran.r-project.org/web/packages/ipred/index.html"	"Improved Predictors"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ipred ipred: Improved Predictors Improved predictive models by indirect classification and bagging for classification, regression and survival problems as well as resampling based estimators of prediction error. Version: 0.9-5 Depends: R (≥ 2.10) Imports: rpart (≥ 3.1-8), MASS, survival, nnet, class, prodlim Suggests: mvtnorm, mlbench, TH.data Published: 2015-07-28 Author: Andrea Peters [aut], Torsten Hothorn [aut, cre], Brian D. Ripley [ctb], Terry Therneau [ctb], Beth Atkinson [ctb] Maintainer: Torsten Hothorn <Torsten.Hothorn at R-project.org> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] Copyright: see file COPYRIGHTS URL: NA NeedsCompilation: yes Materials: NEWS In views: Environmetrics, MachineLearning, Survival CRAN checks: ipred results Downloads: Reference manual: ipred.pdf Vignettes: Some more or less useful examples for illustration. Package source: ipred_0.9-5.tar.gz Windows binaries: r-devel: ipred_0.9-5.zip, r-release: ipred_0.9-5.zip, r-oldrel: ipred_0.9-5.zip OS X Mavericks binaries: r-release: ipred_0.9-5.tgz, r-oldrel: ipred_0.9-5.tgz Old sources: ipred archive Reverse dependencies: Reverse imports: mlearning, optBiomarker, RecordLinkage, RTextTools, SurvRank Reverse suggests: caret, caretEnsemble, ChemometricsWithR, Daim, fscaret, party, RGraphics, sperrorest, subsemble, SuperLearner"	"null"	"null"	"Improved Predictors"	"true"
"Machine Learning"	"kernlab"	"http://cran.r-project.org/web/packages/kernlab/index.html"	"kernlab: Kernel-based Machine Learning Lab"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package kernlab kernlab: Kernel-Based Machine Learning Lab Kernel-based machine learning methods for classification, regression, clustering, novelty detection, quantile regression and dimensionality reduction. Among other methods 'kernlab' includes Support Vector Machines, Spectral Clustering, Kernel PCA, Gaussian Processes and a QP solver. Version: 0.9-24 Depends: R (≥ 2.10) Imports: methods, stats, grDevices, graphics Published: 2016-03-29 Author: Alexandros Karatzoglou [aut, cre], Alex Smola [aut], Kurt Hornik [aut] Maintainer: Alexandros Karatzoglou <alexis at ci.tuwien.ac.at> BugReports: NA License: GPL-2 Copyright: see file COPYRIGHTS URL: NA NeedsCompilation: yes Citation: kernlab citation info In views: Cluster, MachineLearning, Multivariate, NaturalLanguageProcessing, Optimization CRAN checks: kernlab results Downloads: Reference manual: kernlab.pdf Vignettes: kernlab - An S4 Package for Kernel Methods in R Package source: kernlab_0.9-24.tar.gz Windows binaries: r-devel: kernlab_0.9-24.zip, r-release: kernlab_0.9-24.zip, r-oldrel: kernlab_0.9-24.zip OS X Mavericks binaries: r-release: kernlab_0.9-24.tgz, r-oldrel: kernlab_0.9-24.tgz Old sources: kernlab archive Reverse dependencies: Reverse depends: CVST, DTRlearn, kappalab, netClass, pathClass, probsvm, svmadmm, SVMMaj Reverse imports: BKPC, DeLorean, fpc, fPortfolio, funcy, gkmSVM, kernelFactory, LinearizedSVR, pi0, plsRcox, qrjoint, rminer, ROI.plugin.ipop, SwarmSVM, Synth Reverse suggests: BiodiversityR, caret, caretEnsemble, colorspace, CompareCausalNetworks, conformal, dismo, evtree, fscaret, gamclass, mistral, mlr, pmml, preprocomb, rattle, RStoolbox, sand, SPOT, vcd Reverse enhances: clue"	"null"	"null"	"kernlab: Kernel-based Machine Learning Lab"	"true"
"Machine Learning"	"klaR"	"http://cran.r-project.org/web/packages/klaR/index.html"	"Classification and visualization"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package klaR klaR: Classification and visualization Miscellaneous functions for classification and visualization developed at the Fakultaet Statistik, Technische Universitaet Dortmund Version: 0.6-12 Depends: R (≥ 2.10.0), MASS Imports: combinat Suggests: scatterplot3d (≥ 0.3-22), som, mlbench, rpart, e1071 Published: 2014-08-06 Author: Christian Roever, Nils Raabe, Karsten Luebke, Uwe Ligges, Gero Szepannek, Marc Zentgraf Maintainer: Uwe Ligges <ligges at statistik.tu-dortmund.de> BugReports: NA License: GPL-2 URL: http://www.statistik.tu-dortmund.de NeedsCompilation: no SystemRequirements: SVMlight Citation: klaR citation info Materials: NEWS In views: Graphics, MachineLearning, Multivariate CRAN checks: klaR results Downloads: Reference manual: klaR.pdf Package source: klaR_0.6-12.tar.gz Windows binaries: r-devel: klaR_0.6-12.zip, r-release: klaR_0.6-12.zip, r-oldrel: klaR_0.6-12.zip OS X Mavericks binaries: r-release: klaR_0.6-12.tgz, r-oldrel: klaR_0.6-12.tgz Old sources: klaR archive Reverse dependencies: Reverse depends: DeducerPlugInScaling, minque, tiger Reverse imports: agricolae, SSL Reverse suggests: caret, caretEnsemble, fscaret, gmum.r, hda, mlr, TunePareto"	"null"	"null"	"Classification and visualization"	"true"
"Machine Learning"	"kohonen"	"http://cran.r-project.org/web/packages/kohonen/"	"Supervised and Unsupervised Self-Organising Maps."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package kohonen kohonen: Supervised and Unsupervised Self-Organising Maps Functions to train supervised and self-organising maps (SOMs). Also interrogation of the maps and prediction using trained maps are supported. The name of the package refers to Teuvo Kohonen, the inventor of the SOM. Version: 2.0.19 Depends: R (≥ 2.6.0), class, MASS Published: 2015-09-04 Author: Ron Wehrens Maintainer: Ron Wehrens <ron.wehrens at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: yes Citation: kohonen citation info Materials: NEWS In views: ChemPhys, Multivariate CRAN checks: kohonen results Downloads: Reference manual: kohonen.pdf Package source: kohonen_2.0.19.tar.gz Windows binaries: r-devel: kohonen_2.0.19.zip, r-release: kohonen_2.0.19.zip, r-oldrel: kohonen_2.0.19.zip OS X Mavericks binaries: r-release: kohonen_2.0.19.tgz, r-oldrel: kohonen_2.0.19.tgz Old sources: kohonen archive Reverse dependencies: Reverse depends: ChemometricsWithR, multisom, wccsom Reverse imports: optCluster, Rsomoclu, UNCLES Reverse suggests: clusterfly, clValid, COMMUNAL, fscaret, mlr, RankAggreg"	"null"	"null"	"Supervised and Unsupervised Self-Organising Maps."	"true"
"Machine Learning"	"lars"	"http://cran.r-project.org/web/packages/lars/index.html"	"Least Angle Regression, Lasso and Forward Stagewise"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package lars lars: Least Angle Regression, Lasso and Forward Stagewise Efficient procedures for fitting an entire lasso sequence with the cost of a single least squares fit. Least angle regression and infinitesimal forward stagewise regression are related to the lasso, as described in the paper below. Version: 1.2 Depends: R (≥ 2.10) Published: 2013-04-24 Author: Trevor Hastie and Brad Efron Maintainer: Trevor Hastie <hastie at stanford.edu> BugReports: NA License: GPL-2 URL: http://www-stat.stanford.edu/~hastie/Papers/#LARS NeedsCompilation: yes In views: MachineLearning CRAN checks: lars results Downloads: Reference manual: lars.pdf Package source: lars_1.2.tar.gz Windows binaries: r-devel: lars_1.2.zip, r-release: lars_1.2.zip, r-oldrel: lars_1.2.zip OS X Mavericks binaries: r-release: lars_1.2.tgz, r-oldrel: lars_1.2.tgz Old sources: lars archive Reverse dependencies: Reverse depends: AdapEnetClass, aml, covTest, cumSeg, elasticnet, ExactPath, FeaLect, FindIt, GPC, gwrr, monomvn, multiPIM, OTRselect, PAGWAS, pass, pfa, qut, relaxo, RXshrink, scalreg, sealasso, sisVIVE, spikeslab Reverse imports: bastah, chemometrics, CorReg, gencve, GGMselect, gpDDE, NHMSAR, plsRcox Reverse suggests: ChemometricsWithR, COBRA, directlabels, dna, ElemStatLearn, fscaret, glmnet, knockoff, lassoscore, Libra, mvtboost, scout Reverse enhances: stabs"	"null"	"null"	"Least Angle Regression, Lasso and Forward Stagewise"	"true"
"Machine Learning"	"lasso2"	"http://cran.r-project.org/web/packages/lasso2/index.html"	"L1 constrained estimation aka ‘lasso’"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package lasso2 lasso2: L1 constrained estimation aka ‘lasso’ Routines and documentation for solving regression problems while imposing an L1 constraint on the estimates, based on the algorithm of Osborne et al. (1998) Version: 1.2-19 Depends: R (≥ 2.15.0) Published: 2014-05-31 Author: Justin Lokhorst, Bill Venables and Berwin Turlach; port to R, tests etc: Martin Maechler Maintainer: Berwin Turlach <Berwin.Turlach at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] Copyright: see file COPYRIGHTS URL: http://www.maths.uwa.edu.au/~berwin/software/lasso.html NeedsCompilation: yes Materials: README ChangeLog In views: MachineLearning CRAN checks: lasso2 results Downloads: Reference manual: lasso2.pdf Vignettes: Manual of lasso2 package Package source: lasso2_1.2-19.tar.gz Windows binaries: r-devel: lasso2_1.2-19.zip, r-release: lasso2_1.2-19.zip, r-oldrel: lasso2_1.2-19.zip OS X Mavericks binaries: r-release: lasso2_1.2-19.tgz, r-oldrel: lasso2_1.2-19.tgz Old sources: lasso2 archive Reverse dependencies: Reverse depends: clere, edrGraphicalTools Reverse suggests: ElemStatLearn, topicmodels"	"null"	"null"	"L1 constrained estimation aka ‘lasso’"	"true"
"Machine Learning"	"LiblineaR"	"http://cran.r-project.org/web/packages/LiblineaR/index.html"	"Linear Predictive Models Based On The Liblinear C/C++ Library"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package LiblineaR LiblineaR: Linear Predictive Models Based on the LIBLINEAR C/C++ Library A wrapper around the LIBLINEAR C/C++ library for machine learning (available at http://www.csie.ntu.edu.tw/~cjlin/liblinear). LIBLINEAR is a simple library for solving large-scale regularized linear classification and regression. It currently supports L2-regularized classification (such as logistic regression, L2-loss linear SVM and L1-loss linear SVM) as well as L1-regularized classification (such as L2-loss linear SVM and logistic regression) and L2-regularized support vector regression (with L1- or L2-loss). The main features of LiblineaR include multi-class classification (one-vs-the rest, and Crammer & Singer method), cross validation for model selection, probability estimates (logistic regression only) or weights for unbalanced data. The estimation of the models is particularly fast as compared to other libraries. Version: 1.94-2 Suggests: SparseM Published: 2015-02-04 Author: Thibault Helleputte; Pierre Gramme Maintainer: Thibault Helleputte <thibault.helleputte at dnalytics.com> BugReports: NA License: GPL-2 URL: http://dnalytics.com/liblinear/ NeedsCompilation: yes Citation: LiblineaR citation info Materials: README NEWS In views: MachineLearning CRAN checks: LiblineaR results Downloads: Reference manual: LiblineaR.pdf Package source: LiblineaR_1.94-2.tar.gz Windows binaries: r-devel: LiblineaR_1.94-2.zip, r-release: LiblineaR_1.94-2.zip, r-oldrel: LiblineaR_1.94-2.zip OS X Mavericks binaries: r-release: LiblineaR_1.94-2.tgz, r-oldrel: LiblineaR_1.94-2.tgz Old sources: LiblineaR archive Reverse dependencies: Reverse imports: LinearizedSVR, SwarmSVM Reverse suggests: mlr"	"null"	"null"	"Linear Predictive Models Based On The Liblinear C/C++ Library"	"true"
"Machine Learning"	"lme4"	"https://github.com/lme4/lme4"	"Mixed-effects models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"181"	"46"	"66"	"GitHub - lme4/lme4: Mixed-effects models in R using S4 classes and methods with RcppEigen Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 46 Star 181 Fork 66 lme4/lme4 Code Issues 126 Pull requests 2 Pulse Graphs Mixed-effects models in R using S4 classes and methods with RcppEigen 1,897 commits 20 branches 2 releases 17 contributors HTML 82.1% R 15.7% C++ 2.2% HTML R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags BMB_ranpred_fix RSC bolker_optconv calc.derivs condVar db/notPtr deviancePriorWeights flexLambda lazy_duplicate_ok master millar_patch missdata mm-print-summary mm predsim priorWtsDevFac profile_tweak reFactorReFit release test_mods Nothing to show v1.1-7 pvaluedocs Nothing to show New pull request Latest commit 9e68346 Jul 14, 2016 bbolker simulate for gaussian with log link; handle mustart better Permalink Failed to load latest commit information. R simulate for gaussian with log link; handle mustart better Jul 14, 2016 data resave Arabidopsis, omitting wrong ""X"" Sep 2, 2014 inst improved doc/NEWS about nAGQinitStep option Jun 15, 2016 man simulate for gaussian with log link; handle mustart better Jul 14, 2016 misc oops, that should be issue #386 Jul 1, 2016 src tweak debugging output from C++ Jul 14, 2016 tests simulate for gaussian with log link; handle mustart better Jul 14, 2016 testsx commit my cosmetic additions to these, in case Ben is looking at them… Aug 17, 2013 vignettes add require(lattice) to vignette (fix #355) Jan 28, 2016 .Rbuildignore add README.md to .Rbuildignore (cloud/cran URL conflict Apr 15, 2016 .gitignore comment out test for Solaris (a case that does *not* give a warning t… Oct 5, 2015 .travis.yml add travis_wait Feb 15, 2016 ChangeLog git-svn-id: svn+ssh://svn.r-forge.r-project.org/svnroot/lme4/pkg/lme4… Jan 9, 2012 DESCRIPTION add lmList fix to NEWS; version bump, update README Apr 30, 2016 Makefile lmList(): hasScale(), .hasScale() utilities: more methods now work fo… Apr 11, 2015 NAMESPACE Export checkConv May 16, 2016 README.md add lmList fix to NEWS; version bump, update README May 1, 2016 ToDo Move completed items and add more to the ToDo list. Feb 3, 2012 do-roxy manual fix of *.Rd files (for release) -- change do-roxy to protect a… Aug 5, 2013 README.md lme4: Mixed-effects models in R. Recent/release notes Version 1.1-12 is on CRAN (as of April 2016). Changes in this release are very minor, for compatibility with a new Windows toolchain. See the NEWS file (or news(Version==""1.1.12"",package=""lme4"")). Features Efficient for large data sets, using algorithms from the Eigen linear algebra package via the RcppEigen interface layer. Allows arbitrarily many nested and crossed random effects. Fits generalized linear mixed models (GLMMs) and nonlinear mixed models (NLMMs) via Laplace approximation or adaptive Gauss-Hermite quadrature; GLMMs allow user-defined families and link functions. Incorporates likelihood profiling and parametric bootstrapping. Installation On current R (>= 3.0.0) From CRAN (stable release 1.0.+) Development version from Github: library(""devtools""); install_github(""lme4/lme4"",dependencies=TRUE)  (This requires devtools >= 1.6.1, and installs the ""master"" (development) branch.) This approach builds the package from source, i.e. make and compilers must be installed on your system -- see the R FAQ for your operating system; you may also need to install dependencies manually. Specify build_vignettes=FALSE if you have trouble because your system is missing some of the LaTeX/texi2dvi tools. Usually up-to-date development binaries from lme4 r-forge repository: install.packages(""lme4"",    repos=c(""http://lme4.r-forge.r-project.org/repos"",           getOption(""repos"")[[""CRAN""]]))  (these source and binary versions are updated manually, so may be out of date; if you believe they are, please contact the maintainers). On old R (pre-3.0.0) It is possible to install (but not easily to check) lme4 at least as recently as 1.1-7. make sure you have exactly these package versions: Rcpp 0.10.5, RcppEigen 3.2.0.2 for installation, use --no-inst; this is necessary in order to prevent R from getting hung up by the knitr-based vignettes running R CMD check is difficult, but possible if you hand-copy the contents of the inst directory into the installed package directory ... Of lme4.0 lme4.0 is a maintained version of lme4 back compatible to CRAN versions of lme4 0.99xy, mainly for the purpose of reproducible research and data analysis which was done with 0.99xy versions of lme4. there have been some reports of problems with lme4.0 on R version 3.1; if someone has a specific reproducible example they'd like to donate, please contact the maintainers. Notably, lme4.0 features getME(<mod>, "".."") which is compatible (as much as sensibly possible) with the current lme4's version of getME(). You can use the convert_old_lme4() function to take a fitted object created with lme4 <1.0 and convert it for use with lme4.0. It currently resides on R-forge, and you should be able to install it with install.packages(""lme4.0"",                  repos=c(""http://lme4.r-forge.r-project.org/repos"",                          getOption(""repos"")[[""CRAN""]]))  (if the binary versions are out of date or unavailable for your system, please contact the maintainers). Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/lme4/lme4"	"Mixed-effects models"	"true"
"Machine Learning"	"LogicReg"	"http://cran.r-project.org/web/packages/LogicReg/index.html"	"Logic Regression"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package LogicReg LogicReg: Logic Regression Routines for fitting Logic Regression models. Version: 1.5.8 Depends: R (≥ 2.10), survival Imports: stats, graphics, utils, grDevices Published: 2015-07-03 Author: Charles Kooperberg and Ingo Ruczinski Maintainer: Charles Kooperberg <clk at fredhutch.org> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: yes In views: MachineLearning, Survival CRAN checks: LogicReg results Downloads: Reference manual: LogicReg.pdf Package source: LogicReg_1.5.8.tar.gz Windows binaries: r-devel: LogicReg_1.5.8.zip, r-release: LogicReg_1.5.8.zip, r-oldrel: LogicReg_1.5.8.zip OS X Mavericks binaries: r-release: LogicReg_1.5.8.tgz, r-oldrel: LogicReg_1.5.8.tgz Old sources: LogicReg archive Reverse dependencies: Reverse depends: LogicForest, OrdLogReg Reverse imports: sprinter Reverse suggests: fscaret, subsemble, SuperLearner"	"null"	"null"	"Logic Regression"	"true"
"Machine Learning"	"maptree"	"http://cran.r-project.org/web/packages/maptree/index.html"	"Mapping, pruning, and graphing tree models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package maptree maptree: Mapping, pruning, and graphing tree models Functions with example data for graphing, pruning, and mapping models from hierarchical clustering, and classification and regression trees. Version: 1.4-7 Depends: R (≥ 2.14), cluster, rpart Published: 2012-11-26 Author: Denis White, Robert B. Gramacy Maintainer: Robert B. Gramacy <rbgramacy at chicagobooth.edu> BugReports: NA License: Unlimited URL: NA NeedsCompilation: no In views: Environmetrics, MachineLearning CRAN checks: maptree results Downloads: Reference manual: maptree.pdf Package source: maptree_1.4-7.tar.gz Windows binaries: r-devel: maptree_1.4-7.zip, r-release: maptree_1.4-7.zip, r-oldrel: maptree_1.4-7.zip OS X Mavericks binaries: r-release: maptree_1.4-7.tgz, r-oldrel: maptree_1.4-7.tgz Old sources: maptree archive Reverse dependencies: Reverse imports: tgp Reverse suggests: BiodiversityR"	"null"	"null"	"Mapping, pruning, and graphing tree models"	"true"
"Machine Learning"	"mboost"	"http://cran.r-project.org/web/packages/mboost/index.html"	"Model-Based Boosting"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"10"	"6"	"6"	"GitHub - boost-R/mboost: Boosting algorithms for fitting generalized linear, additive and interaction models to potentially high-dimensional data. The current relase version can be found on CRAN (http://cran.r-project.org/package=mboost). Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 6 Star 10 Fork 6 boost-R/mboost Code Issues 17 Pull requests 1 Pulse Graphs Boosting algorithms for fitting generalized linear, additive and interaction models to potentially high-dimensional data. The current relase version can be found on CRAN (http://cran.r-project.org/package=mboost). 997 commits 6 branches 0 releases Fetching contributors HTML 66.8% R 31.5% CSS 0.7% C 0.6% TeX 0.2% PHP 0.1% Shell 0.1% HTML R CSS C TeX PHP Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags devel experimental_Adaptive_Reg experimental_MS master ortho travis-ci Nothing to show Nothing to show New pull request Latest commit 358ac53 Jul 6, 2016 hofnerb committed on GitHub Merge pull request #39 from mvkorpel/one-levelplot … Fail earlier in case of multiple levelplots (same result but faster and with better memory handling) Permalink Failed to load latest commit information. R Merge pull request #39 from mvkorpel/one-levelplot Jul 6, 2016 demo Moved pkg/mboostPatch to parent folder Apr 22, 2016 inst Moved pkg/mboostPatch to parent folder Apr 22, 2016 man Family: clarified qoffset argument and offset function Jul 6, 2016 src Moved pkg/mboostPatch to parent folder Apr 22, 2016 tests vignettes Text is now consistent with the number of predictors at mstop(cvm) Jun 30, 2016 www merge webpage update to github Aug 18, 2015 www_src merge webpage update to github Aug 18, 2015 .Rbuildignore bolscw.R now back in build Apr 22, 2016 .RbuildignoreCRAN bolscw.R now back in build Apr 22, 2016 .travis.yml DESCRIPTION Moved pkg/mboostPatch to parent folder Apr 22, 2016 NAMESPACE Moved pkg/mboostPatch to parent folder Apr 22, 2016 README.md Reflect changes in repository in CI, SOPs and README.md Apr 22, 2016 appveyor.yml Fixed AppVeyor Apr 22, 2016 buildCRAN added new .RbuildignoreCRAN for cran submissions (to be build using t… Feb 7, 2013 change_mboostDevel_to_mboost.R updated scripts to now inlude git commands as comments Dec 15, 2014 checks.R Added explanations to \donttest to make CRAN happy Aug 13, 2015 cleanup Moved pkg/mboostPatch to parent folder Apr 22, 2016 copy_Rout_to_Routsave.R Fixed script: copy_Rout_to_Routsave.R Mar 11, 2016 svn_release.txt Reflect changes in repository in CI, SOPs and README.md Apr 22, 2016 to_do_list.txt README.md mboost mboost implements boosting algorithms for fitting generalized linear, additive and interaction models to potentially high-dimensional data. Using mboost For installation instructions see below. Instructions on how to use mboost can be found in various places: Have a look at the tutorials: mboost tutorial mboost 2.0 Visit the project homepage and see further tutorials and references there. Reporting Issues (etc.) For issues, bugs, feature requests etc. please use the GitHub Issues. Installation Instructions Current version (from CRAN): install.packages(""mboost"") Latest patch version (patched version of CRAN packages; under development) from GitHub: library(""devtools"") install_github(""boost-R/mboost"") library(""mboost"") Latest development version (version with new features; under development) from GitHub: library(""devtools"") install_github(""boost-R/mboost"", ref = ""devel"") library(""mboost"") To be able to use the install_github() command, one needs to install devtools first: install.packages(""devtools"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/boost-R/mboost"	"Model-Based Boosting"	"true"
"Machine Learning"	"Machine Learning For Hackers"	"https://github.com/johnmyleswhite/ML_for_Hackers"	""	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"2454"	"410"	"1752"	"GitHub - johnmyleswhite/ML_for_Hackers: Code accompanying the book ""Machine Learning for Hackers"" Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 410 Star 2,454 Fork 1,752 johnmyleswhite/ML_for_Hackers Code Issues 17 Pull requests 9 Pulse Graphs Code accompanying the book ""Machine Learning for Hackers"" http://shop.oreilly.com/product/0636920018483.do 88 commits 1 branch 0 releases 7 contributors R 99.9% CSS 0.1% R CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 4aa136e Dec 13, 2013 Ubuntu Added second column to toy data in first 'glmnet' example from Chapte… … …r 6 to satisfy new glmnet requirements. Results identical to original. All code from all chapters, except 9, now run error free. Permalink Failed to load latest commit information. 01-Introduction Updated Chapter 1 Jul 31, 2013 02-Exploration Make over-binned histogram run faster Jul 31, 2013 03-Classification Added 'image' directory to chapter 5 so that output could be saved wi… Dec 13, 2013 04-Ranking Added 'image' directory to chapter 5 so that output could be saved wi… Dec 13, 2013 05-Regression Added second column to toy data in first 'glmnet' example from Chapte… Dec 13, 2013 06-Regularization Added second column to toy data in first 'glmnet' example from Chapte… Dec 13, 2013 07-Optimization Added second column to toy data in first 'glmnet' example from Chapte… Dec 13, 2013 08-PCA Fix stringsAsFactors problem with lubridate Jul 31, 2013 09-MDS Revise Chapter 9 for new ggplot2 argument style Jul 31, 2013 10-Recommendations Revised style and fixed filenames for Chapter 10 code. Feb 17, 2012 11-SNA Standardize Chapter 11 code. Feb 14, 2012 12-Model_Comparison Missing reshape dependency Sep 16, 2012 slides Added slides for Chapters 1 and 5 from StrangeLoop Sep 24, 2012 .gitignore Updated ignore file Sep 24, 2012 README.md Fixed the error caused by using to get email frequency counts. Now us… Dec 12, 2013 fast_check.R Added 'image' directory to chapter 5 so that output could be saved wi… Dec 13, 2013 package_installer.R Adding default CRAN mirror for package installer Sep 23, 2012 README.md Code for Machine Learning for Hackers This repository contains all of the code examples for Machine Learning for Hackers (2012). The code may not appear exactly as it does in the text, as additional comments and modifications may have been added since publication. Getting started The code in this book relies on several R libraries. Two libraries, RCurl and XML require additional software to be installed: http://curl.haxx.se/ (for RCurl) http://xmlsoft.org/ (for XML) To make sure you have all of the requite libraries run the package_installer.R script. In your R console type the following: > source(""package_installer.R"")  When running the installer inside R you will be asked where to save the library files. If you'd like to install the libraries globally, you can run script at the command-line with admin privileges: $ sudo RScript package_installer.R  Authors Drew Conway, Department of Politics, New York University http://drewconway.com/ John Myles White, Data Science, Facebook http://www.johnmyleswhite.com/ License All source code is copyright (c) 2012, under the Simplified BSD License. For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php All images and materials produced by this code are licensed under the Creative Commons Attribution-Share Alike 3.0 United States License: http://creativecommons.org/licenses/by-sa/3.0/us/ Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/johnmyleswhite/ML_for_Hackers"	""	"true"
"Machine Learning"	"mvpart"	"http://cran.r-project.org/web/packages/mvpart/index.html"	"Multivariate partitioning"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package mvpart Package ‘mvpart’ was removed from the CRAN repository. Formerly available versions can be obtained from the archive. Archived on 2014-12-13 as UBSAN errors were not corrected after months of reports and two deadlines."	"null"	"null"	"Multivariate partitioning"	"true"
"Machine Learning"	"MXNet"	"https://github.com/dmlc/mxnet/tree/master/R-package"	"MXNet brings flexible and efficient GPU computing and state-of-art deep learning to R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"4421"	"505"	"1640"	"mxnet/R-package at master · dmlc/mxnet · GitHub Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 505 Star 4,421 Fork 1,640 dmlc/mxnet Code Issues 414 Pull requests 19 Wiki Pulse Graphs Branch: master Switch branches/tags Branches Tags master piiswrong-patch-1 Nothing to show weekly_binary_build v0.7.0 20160531 20160419 20160321 20160309 20160229 20160223 20160216 20160202 20160120 20160113 20160106 20151228 Nothing to show Create new file Find file History mxnet/R-package/ Latest commit 5532511 Jul 8, 2016 antinucleon committed on GitHub [OP] 3d conv + 3d pool (#2585) … * cudnn 3d conv & 3d pooling Permalink .. Failed to load latest commit information. R (1) export more C++ functions; (2) R docs for CUDA (#2520) Jun 24, 2016 demo add arg.params,aux.params for mx.model.FeedForward.create function [#… Apr 3, 2016 man Add GRU in R (#2491) Jun 23, 2016 src refactor lstm model and add documentations in R (#2329) Jun 7, 2016 tests refactor lstm model and add documentations in R (#2329) Jun 7, 2016 vignettes [OP] 3d conv + 3d pool (#2585) Jul 8, 2016 .Rbuildignore update Makefile Nov 4, 2015 .gitignore [R] update the testing scripts, so the code in vignettes will be chec… Nov 13, 2015 DESCRIPTION [RELASE] tag 0.7 release (#2247) May 26, 2016 LICENSE [R] Change License to BSD Oct 18, 2015 NAMESPACE Add GRU in R (#2491) Jun 24, 2016 README.md Update R doc link to new docs Apr 17, 2016 README.md Deep Learning for R You have found MXNet R Package! The MXNet R packages brings flexible and efficient GPU computing and state-of-art deep learning to R. It enables you to write seamless tensor/matrix computation with multiple GPUs in R. It also enables you to construct and customize the state-of-art deep learning models in R, and apply them to tasks such as image classification and data science challenges. Sounds exciting? This page contains links to all the related documents on R package. Resources MXNet R Package Document Check this out for detailed documents, examples, installation guides. Installation For Windows/Mac users, we provide pre-built binary package using CPU. You can install weekly updated package directly in R console: install.packages(""drat"", repos=""https://cran.rstudio.com"") drat:::addRepo(""dmlc"") install.packages(""mxnet"") To use GPU version or use it on Linux, please follow Installation Guide License MXNet R-package is licensed under BSD license. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dmlc/mxnet/tree/master/R-package"	"MXNet brings flexible and efficient GPU computing and state-of-art deep learning to R."	"true"
"Machine Learning"	"ncvreg"	"http://cran.r-project.org/web/packages/ncvreg/index.html"	"Regularization paths for SCAD- and MCP-penalized regression models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"5"	"4"	"5"	"GitHub - pbreheny/ncvreg: Regularization paths for SCAD- and MCP-penalized regression models Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 4 Star 5 Fork 5 pbreheny/ncvreg Code Issues 1 Pull requests 0 Pulse Graphs Regularization paths for SCAD- and MCP-penalized regression models 76 commits 1 branch 0 releases Fetching contributors R 65.4% C 34.6% R C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit cc09438 Jul 8, 2016 pbreheny A few more tests added to coerce Permalink Failed to load latest commit information. R plot.fir: option to print selected axis on top; better step function Jun 23, 2016 inst A few more tests added to coerce Jul 8, 2016 man plot.fir: option to print selected axis on top; better step function Jun 23, 2016 src Fixed bug where loss wasn't calculated for gaussian if convergence no… Jun 23, 2016 tests Reorganized testing; fixed bug in predict.cv.ncvsurv; added vignette Jun 7, 2016 vignettes Reorganized testing; fixed bug in predict.cv.ncvsurv; added vignette Jun 7, 2016 .gitignore Added X/y dimension check Jun 20, 2016 DESCRIPTION Update for codecov Jun 13, 2016 NAMESPACE Reorganized testing; fixed bug in predict.cv.ncvsurv; added vignette Jun 7, 2016 NEWS Version 3.6-0 Jun 13, 2016 README.md Version 3.5-2 Apr 11, 2016 README.md ncvreg fits regularization paths for linear, logistic, or Poisson regression models with nonconvex penalties, in particular the minimax concave penalty (MCP) and smoothly clipped absolute deviation (SCAD) penalty. Coordinate descent algorithms are used to fit the models. To install: the latest released version: install.packages(""ncvreg"") the latest version (requires devtools): install_github(""pbreheny/ncvreg"") Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/pbreheny/ncvreg"	"Regularization paths for SCAD- and MCP-penalized regression models"	"true"
"Machine Learning"	"nnet"	"http://cran.r-project.org/web/packages/nnet/index.html"	"eed-forward Neural Networks and Multinomial Log-Linear Models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package nnet nnet: Feed-Forward Neural Networks and Multinomial Log-Linear Models Software for feed-forward neural networks with a single hidden layer, and for multinomial log-linear models. Version: 7.3-12 Priority: recommended Depends: R (≥ 2.14.0), stats, utils Suggests: MASS Published: 2016-02-02 Author: Brian Ripley [aut, cre, cph], William Venables [cph] Maintainer: Brian Ripley <ripley at stats.ox.ac.uk> BugReports: NA License: GPL-2 | GPL-3 URL: http://www.stats.ox.ac.uk/pub/MASS4/ NeedsCompilation: yes Citation: nnet citation info Materials: NEWS In views: Econometrics, MachineLearning, SocialSciences CRAN checks: nnet results Downloads: Reference manual: nnet.pdf Package source: nnet_7.3-12.tar.gz Windows binaries: r-devel: nnet_7.3-12.zip, r-release: nnet_7.3-12.zip, r-oldrel: nnet_7.3-12.zip OS X Mavericks binaries: r-release: nnet_7.3-12.tgz, r-oldrel: nnet_7.3-12.tgz Old sources: nnet archive Reverse dependencies: Reverse depends: abc, CBPS, depmixS4, epiDisplay, gamlss.add, gamlss.mx, HIest, HydeNet, ImpactIV, introgress, LOGICOIL, MDM, partialOR, pocrm, roughrf, SIDES, sodavis, synthpop Reverse imports: BaBooN, BaM, BayesTree, Biocomb, biomod2, car, chemometrics, CoImp, DAMisc, dprep, EffectLiteR, effects, EnsembleBase, factorplot, flexmix, forecast, Frames2, fRegression, gencve, gnm, Hmisc, hybridEnsemble, ipred, ipw, IsingSampler, mice, mlearning, MXM, NeuralNetTools, NoiseFiltersR, oblique.tree, pvsR, rasclass, RcmdrPlugin.BCA, RecordLinkage, rminer, RTextTools, RVAideMemoire, semiArtificial, ShinyItemAnalysis, simPop, spectral.methods, spls, SSDM, tsDyn, VIM Reverse suggests: AER, AICcmodavg, aplore3, bayesMCClust, BiodiversityR, boostr, broom, caret, caretEnsemble, catdata, causaldrf, ChemometricsWithR, discSurv, DynTxRegime, e1071, fscaret, generalhoslem, glmulti, GSIF, HandTill2001, hnp, lda, lsmeans, MASS, MatchIt, mboost, mi, mlDNA, mlogit, mlr, mlt, mlt.docreg, mnlogit, MuMIn, nnetpredint, ordinal, pmml, psychomix, R2HTML, race, rattle, Rcmdr, RcmdrPlugin.IPSUR, RcmdrPlugin.NMBU, RcmdrPlugin.pointG, relimp, ROSE, seqHMM, subsemble, SuperLearner, VBmix, vcdExtra Reverse enhances: stargazer, texreg"	"null"	"null"	"eed-forward Neural Networks and Multinomial Log-Linear Models"	"true"
"Machine Learning"	"oblique.tree"	"http://cran.r-project.org/web/packages/oblique.tree/index.html"	"Oblique Trees for Classification Data"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package oblique.tree oblique.tree: Oblique Trees for Classification Data Grows Oblique Trees to Classification Data. Version: 1.1.1 Depends: tree, glmnet Imports: nnet Suggests: MASS Published: 2013-07-14 Author: Alfred Truong Maintainer: Alfred Truong <alfred.truong at gmail.com> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: yes In views: MachineLearning CRAN checks: oblique.tree results Downloads: Reference manual: oblique.tree.pdf Package source: oblique.tree_1.1.1.tar.gz Windows binaries: r-devel: oblique.tree_1.1.1.zip, r-release: oblique.tree_1.1.1.zip, r-oldrel: oblique.tree_1.1.1.zip OS X Mavericks binaries: r-release: oblique.tree_1.1.1.tgz, r-oldrel: oblique.tree_1.1.1.tgz Old sources: oblique.tree archive"	"null"	"null"	"Oblique Trees for Classification Data"	"true"
"Machine Learning"	"pamr"	"http://cran.r-project.org/web/packages/pamr/index.html"	"Pam: prediction analysis for microarrays"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package pamr pamr: Pam: prediction analysis for microarrays Some functions for sample classification in microarrays Version: 1.55 Depends: R (≥ 2.10), cluster, survival Published: 2014-08-27 Author: T. Hastie, R. Tibshirani, Balasubramanian Narasimhan, Gil Chu Maintainer: Rob Tibshirani <tibs at stanford.edu> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: yes In views: MachineLearning, Survival CRAN checks: pamr results Downloads: Reference manual: pamr.pdf Package source: pamr_1.55.tar.gz Windows binaries: r-devel: pamr_1.55.zip, r-release: pamr_1.55.zip, r-oldrel: pamr_1.55.zip OS X Mavericks binaries: r-release: pamr_1.55.tgz, r-oldrel: pamr_1.55.tgz Old sources: pamr archive Reverse dependencies: Reverse depends: iC10 Reverse imports: Biocomb, stylo Reverse suggests: caret, emil, fscaret, mlr, VHDClassification"	"null"	"null"	"Pam: prediction analysis for microarrays"	"true"
"Machine Learning"	"party"	"http://cran.r-project.org/web/packages/party/index.html"	"A Laboratory for Recursive Partytioning"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package party party: A Laboratory for Recursive Partytioning A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates. Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. Version: 1.0-25 Depends: R (≥ 2.14.0), methods, grid, stats, mvtnorm (≥ 1.0-2), modeltools (≥ 0.2-21), strucchange Imports: survival (≥ 2.37-7), coin (≥ 1.1-0), zoo, sandwich (≥ 1.1-1) LinkingTo: mvtnorm Suggests: TH.data (≥ 1.0-3), mlbench, colorspace, MASS, vcd, ipred Published: 2015-11-05 Author: Torsten Hothorn [aut, cre], Kurt Hornik [aut], Carolin Strobl [aut], Achim Zeileis [aut] Maintainer: Torsten Hothorn <Torsten.Hothorn at R-project.org> BugReports: NA License: GPL-2 URL: http://party.R-forge.R-project.org NeedsCompilation: yes Citation: party citation info Materials: NEWS In views: Environmetrics, MachineLearning, Multivariate, Survival CRAN checks: party results Downloads: Reference manual: party.pdf Vignettes: party with the mob party: A Laboratory for Recursive Partytioning Package source: party_1.0-25.tar.gz Windows binaries: r-devel: party_1.0-25.zip, r-release: party_1.0-25.zip, r-oldrel: party_1.0-25.zip OS X Mavericks binaries: r-release: party_1.0-25.tgz, r-oldrel: party_1.0-25.tgz Old sources: party archive Reverse dependencies: Reverse depends: GetR, MAclinical, parboost Reverse imports: EcoGenetics, mboost, multilevelPSA, PSAboot, RFinfer, rminer, simPop, synthpop Reverse suggests: betareg, caret, catdata, data.tree, emil, evtree, fscaret, HSAUR, HSAUR2, mlr, ModelGood, ModelMap, pec, rattle, RGraphics, subsemble, SuperLearner, wsrf"	"null"	"null"	"A Laboratory for Recursive Partytioning"	"true"
"Machine Learning"	"partykit"	"http://cran.r-project.org/web/packages/partykit/index.html"	"A Toolkit for Recursive Partytioning"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package partykit partykit: A Toolkit for Recursive Partytioning A toolkit with infrastructure for representing, summarizing, and visualizing tree-structured regression and classification models. This unified infrastructure can be used for reading/coercing tree models from different sources (‘rpart’, ‘RWeka’, ‘PMML’) yielding objects that share functionality for print()/plot()/predict() methods. Furthermore, new and improved reimplementations of conditional inference trees (ctree()) and model-based recursive partitioning (mob()) from the ‘party’ package are provided based on the new infrastructure. Version: 1.1-0 Depends: R (≥ 3.1.0), graphics, grid Imports: grDevices, stats, utils, survival, Formula (≥ 1.2-1) Suggests: XML, pmml, rJava, rpart, mvtnorm, sandwich, strucchange, vcd, AER, mlbench, TH.data (≥ 1.0-3), coin (≥ 1.1-0), RWeka (≥ 0.4-19), datasets, parallel, psychotools, psychotree Published: 2016-07-14 Author: Torsten Hothorn [aut, cre], Achim Zeileis [aut] Maintainer: Torsten Hothorn <Torsten.Hothorn at R-project.org> BugReports: NA License: GPL-2 | GPL-3 URL: http://partykit.R-Forge.R-project.org/partykit NeedsCompilation: yes Citation: partykit citation info Materials: NEWS In views: MachineLearning CRAN checks: partykit results Downloads: Reference manual: partykit.pdf Vignettes: Constant Partying: Growing and Handling Trees with Constant Fits ctree: Conditional Inference Trees Parties, Models, Mobsters: A New Implementation of Model-Based Recursive Partitioning in R partykit: A Toolkit for Recursive Partytioning Package source: partykit_1.1-0.tar.gz Windows binaries: r-devel: partykit_1.1-0.zip, r-release: partykit_1.1-0.zip, r-oldrel: partykit_1.1-0.zip OS X Mavericks binaries: r-release: partykit_1.0-5.tgz, r-oldrel: partykit_1.0-5.tgz Old sources: partykit archive Reverse dependencies: Reverse depends: evtree, NHEMOtree, psychotree, quint, smbinning, vcrpart Reverse imports: C50, LTRCtrees, MST Reverse suggests: binst, data.tree, HSAUR2, HSAUR3, RWeka"	"null"	"null"	"A Toolkit for Recursive Partytioning"	"true"
"Machine Learning"	"penalized"	"http://cran.r-project.org/web/packages/penalized/index.html"	"L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package penalized penalized: L1 (Lasso and Fused Lasso) and L2 (Ridge) Penalized Estimation in GLMs and in the Cox Model Fitting possibly high dimensional penalized regression models. The penalty structure can be any combination of an L1 penalty (lasso and fused lasso), an L2 penalty (ridge) and a positivity constraint on the regression coefficients. The supported regression models are linear, logistic and Poisson regression and the Cox Proportional Hazards model. Cross-validation routines allow optimization of the tuning parameters. Version: 0.9-47 Depends: R (≥ 2.10.0), survival, methods Suggests: globaltest Published: 2016-05-27 Author: Jelle Goeman, Rosa Meijer, Nimisha Chaturvedi Maintainer: Jelle Goeman <j.j.goeman at lumc.nl> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no Citation: penalized citation info Materials: ChangeLog In views: MachineLearning, Survival CRAN checks: penalized results Downloads: Reference manual: penalized.pdf Vignettes: Penalized user guide Package source: penalized_0.9-47.tar.gz Windows binaries: r-devel: penalized_0.9-47.zip, r-release: penalized_0.9-47.zip, r-oldrel: penalized_0.9-47.zip OS X Mavericks binaries: r-release: penalized_0.9-47.tgz, r-oldrel: penalized_0.9-47.tgz Old sources: penalized archive Reverse dependencies: Reverse depends: DIFlasso, DIFtree, lmmlasso, multiPIM, ROC632, subtype, uplift Reverse imports: apricom, DIFboost, gpDDE, hdnom, mvdalab, pensim Reverse suggests: catdata, fscaret, Grace, lda, mlr, peperr"	"null"	"null"	"L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model"	"true"
"Machine Learning"	"penalizedLDA"	"http://cran.r-project.org/web/packages/penalizedLDA/index.html"	"Penalized classification using Fisher's linear discriminant"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package penalizedLDA penalizedLDA: Penalized Classification using Fisher's Linear Discriminant Implements the penalized LDA proposal of ""Witten and Tibshirani (2011), Penalized classification using Fisher's linear discriminant, to appear in Journal of the Royal Statistical Society, Series B"". Version: 1.1 Depends: R (≥ 1.9.0) Imports: flsa, graphics, stats, utils Published: 2015-07-11 Author: Daniela Witten Maintainer: Daniela Witten <dwitten at u.washington.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: penalizedLDA results Downloads: Reference manual: penalizedLDA.pdf Package source: penalizedLDA_1.1.tar.gz Windows binaries: r-devel: penalizedLDA_1.1.zip, r-release: penalizedLDA_1.1.zip, r-oldrel: penalizedLDA_1.1.zip OS X Mavericks binaries: r-release: penalizedLDA_1.1.tgz, r-oldrel: penalizedLDA_1.1.tgz Old sources: penalizedLDA archive Reverse dependencies: Reverse imports: PPtree Reverse suggests: fscaret"	"null"	"null"	"Penalized classification using Fisher's linear discriminant"	"true"
"Machine Learning"	"penalizedSVM"	"http://cran.r-project.org/web/packages/penalizedSVM/index.html"	"Feature Selection SVM using penalty functions"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package penalizedSVM penalizedSVM: Feature Selection SVM using penalty functions This package provides feature selection SVM using penalty functions. The smoothly clipped absolute deviation (SCAD), 'L1-norm', 'Elastic Net' ('L1-norm' and 'L2-norm') and 'Elastic SCAD' (SCAD and 'L2-norm') penalties are availible. The tuning parameters can be founf using either a fixed grid or a interval search. Version: 1.1 Depends: e1071, MASS, corpcor, statmod, tgp, mlegp, lhs Published: 2012-10-29 Author: Natalia Becker, Wiebke Werft, Axel Benner Maintainer: Natalia Becker <natalia.becker at dkfz.de> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: penalizedSVM results Downloads: Reference manual: penalizedSVM.pdf Package source: penalizedSVM_1.1.tar.gz Windows binaries: r-devel: penalizedSVM_1.1.zip, r-release: penalizedSVM_1.1.zip, r-oldrel: penalizedSVM_1.1.zip OS X Mavericks binaries: r-release: penalizedSVM_1.1.tgz, r-oldrel: penalizedSVM_1.1.tgz Old sources: penalizedSVM archive Reverse dependencies: Reverse imports: c060 Reverse suggests: SPOT"	"null"	"null"	"Feature Selection SVM using penalty functions"	"true"
"Machine Learning"	"quantregForest"	"http://cran.r-project.org/web/packages/quantregForest/index.html"	"quantregForest: Quantile Regression Forests"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package quantregForest quantregForest: Quantile Regression Forests Quantile Regression Forests is a tree-based ensemble method for estimation of conditional quantiles. It is particularly well suited for high-dimensional data. Predictor variables of mixed classes can be handled. The package is dependent on the package 'randomForest', written by Andy Liaw. Version: 1.3-5 Depends: randomForest, RColorBrewer Imports: stats, parallel Suggests: gss Published: 2016-05-19 Author: Nicolai Meinshausen Maintainer: Nicolai Meinshausen <meinshausen at stat.math.ethz.ch> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: yes In views: MachineLearning CRAN checks: quantregForest results Downloads: Reference manual: quantregForest.pdf Package source: quantregForest_1.3-5.tar.gz Windows binaries: r-devel: quantregForest_1.3-5.zip, r-release: quantregForest_1.3-5.zip, r-oldrel: quantregForest_1.3-5.zip OS X Mavericks binaries: r-release: quantregForest_1.3-5.tgz, r-oldrel: quantregForest_1.3-5.tgz Old sources: quantregForest archive Reverse dependencies: Reverse suggests: fscaret, GSIF, ModelMap"	"null"	"null"	"quantregForest: Quantile Regression Forests"	"true"
"Machine Learning"	"randomForest"	"http://cran.r-project.org/web/packages/randomForest/index.html"	"randomForest: Breiman and Cutler's random forests for classification and regression."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package randomForest randomForest: Breiman and Cutler's Random Forests for Classification and Regression Classification and regression based on a forest of trees using random inputs. Version: 4.6-12 Depends: R (≥ 2.5.0), stats Suggests: RColorBrewer, MASS Published: 2015-10-07 Author: Fortran original by Leo Breiman and Adele Cutler, R port by Andy Liaw and Matthew Wiener. Maintainer: Andy Liaw <andy_liaw at merck.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: https://www.stat.berkeley.edu/~breiman/RandomForests/ NeedsCompilation: yes Citation: randomForest citation info Materials: NEWS In views: Environmetrics, MachineLearning CRAN checks: randomForest results Downloads: Reference manual: randomForest.pdf Package source: randomForest_4.6-12.tar.gz Windows binaries: r-devel: randomForest_4.6-12.zip, r-release: randomForest_4.6-12.zip, r-oldrel: randomForest_4.6-12.zip OS X Mavericks binaries: r-release: randomForest_4.6-12.tgz, r-oldrel: randomForest_4.6-12.tgz Old sources: randomForest archive Reverse dependencies: Reverse depends: AUCRF, bartMachine, BigTSP, D2C, interpretR, MAVTgsa, missForest, MixRF, mlDNA, ModelMap, partitionMap, quantregForest, RFgroove, RFinfer, rfPermute, roughrf, spikeslab, sprint, trimTrees, varSelRF Reverse imports: abcrf, aCRM, aLFQ, bagRboostR, Biocomb, biomod2, CALIBERrfimpute, cem, CONDOP, conformal, CovSelHigh, ecospat, EnsembleBase, FSelector, fuzzyforest, gamclass, gencve, ggRandomForests, hybridEnsemble, imputeMissings, kernelFactory, LINselect, mlearning, NAM, nodeHarvest, NoiseFiltersR, nproc, optBiomarker, OTE, preprocomb, preproviz, pRF, randomForest.ddR, rasclass, REPTILE, RFmarkerDetector, rfUtilities, rminer, RPtests, RTextTools, SPOT, SSDM, synthpop, TLBC, vita, VSURF, zoon Reverse suggests: A3, BatchExperiments, BiodiversityR, boostr, Boruta, caret, caretEnsemble, ChemometricsWithR, COBRA, crtests, DAAG, DAAGxtras, Daim, discSurv, dismo, doMPI, dyn, e1071, emil, foreach, forestFloor, fscaret, GSIF, HSAUR, HSAUR2, HSAUR3, ICEbox, lulcc, mboost, mice, MLPUGS, mlr, ModelGood, pander, pedometrics, pmml, purge, rattle, RStoolbox, subsemble, SuperLearner, TDMR, tmle.npvi, TunePareto, unbalanced, utiml, VHDClassification, visreg, wsrf, yaImpute"	"null"	"null"	"randomForest: Breiman and Cutler's random forests for classification and regression."	"true"
"Machine Learning"	"randomForestSRC"	"http://cran.r-project.org/web/packages/randomForestSRC/index.html"	"randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC)."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package randomForestSRC randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC) A unified treatment of Breiman's random forests for survival, regression and classification problems based on Ishwaran and Kogalur's random survival forests (RSF) package. The package runs in both serial and parallel (OpenMP) modes. Now extended to include multivariate and unsupervised forests. Version: 2.2.0 Depends: R (≥ 3.1.0) Imports: parallel Suggests: glmnet, XML, survival, pec, prodlim, Hmisc, mlbench Published: 2016-05-17 Author: Hemant Ishwaran, Udaya B. Kogalur Maintainer: Udaya B. Kogalur <ubk at kogalur.com> BugReports: NA License: GPL (≥ 3) URL: http://web.ccs.miami.edu/~hishwaran http://www.kogalur.com NeedsCompilation: yes Citation: randomForestSRC citation info Materials: NEWS In views: HighPerformanceComputing, MachineLearning, Survival CRAN checks: randomForestSRC results Downloads: Reference manual: randomForestSRC.pdf Package source: randomForestSRC_2.2.0.tar.gz Windows binaries: r-devel: randomForestSRC_2.2.0.zip, r-release: randomForestSRC_2.2.0.zip, r-oldrel: randomForestSRC_2.2.0.zip OS X Mavericks binaries: r-release: randomForestSRC_2.2.0.tgz, r-oldrel: randomForestSRC_2.2.0.tgz Old sources: randomForestSRC archive Reverse dependencies: Reverse imports: boostmtree, ggRandomForests, riskRegression, sprinter, SurvRank Reverse suggests: CFC, mlr, ModelGood, pec, pmml"	"null"	"null"	"randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC)."	"true"
"Machine Learning"	"rattle"	"http://cran.r-project.org/web/packages/rattle/index.html"	"Graphical user interface for data mining in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rattle rattle: Graphical User Interface for Data Mining in R The R Analytic Tool To Learn Easily (Rattle) provides a Gnome (RGtk2) based interface to R functionality for data mining. The aim is to provide a simple and intuitive interface that allows a user to quickly load data from a CSV file (or via ODBC), transform and explore the data, build and evaluate models, and export models as PMML (predictive modelling markup language) or as scores. All of this with knowing little about R. All R commands are logged and commented through the log tab. Thus they are available to the user as a script file or as an aide for the user to learn R or to copy-and-paste directly into R itself. Rattle also exports a number of utility functions and the graphical user interface, invoked as rattle(), does not need to be run to deploy these. Version: 4.1.0 Depends: R (≥ 2.13.0) Imports: stats, utils, grDevices, graphics, methods, RGtk2, magrittr, stringi Suggests: pmml (≥ 1.2.13), bitops, colorspace, ada, amap, arules, arulesViz, biclust, cairoDevice, cba, cluster, corrplot, descr, doBy, dplyr, e1071, ellipse, fBasics, foreign, fpc, gdata, ggdendro, ggplot2, gplots, graph, grid, gridExtra, gtools, gWidgetsRGtk2, hmeasure, Hmisc, kernlab, Matrix, mice, nnet, odfWeave, party, playwith, plyr, psych, randomForest, RBGL, RColorBrewer, readxl, reshape, rggobi, RGtk2Extras, ROCR, RODBC, rpart, rpart.plot, SnowballC, stringr, survival, timeDate, tm, verification, wskm, XML, pkgDepTools, Rgraphviz Published: 2016-01-26 Author: Graham Williams [aut, cph, cre], Mark Vere Culp [cph], Ed Cox [ctb], Anthony Nolan [ctb], Denis White [cph], Daniele Medri [ctb], Akbar Waljee [ctb] (OOB AUC for Random Forest), Brian Ripley [cph] (Author of original print.summary.nnet), Jose Magana [ctb] (Contributed the ggpairs plots.) Maintainer: Graham Williams <Graham.Williams at togaware.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://rattle.togaware.com/ NeedsCompilation: no Citation: rattle citation info Materials: NEWS In views: MachineLearning CRAN checks: rattle results Downloads: Reference manual: rattle.pdf Vignettes: Rattle Quick Start Guide Package source: rattle_4.1.0.tar.gz Windows binaries: r-devel: rattle_4.1.0.zip, r-release: rattle_4.1.0.zip, r-oldrel: rattle_4.1.0.zip OS X Mavericks binaries: r-release: rattle_4.1.0.tgz, r-oldrel: rattle_4.1.0.tgz Old sources: rattle archive Reverse dependencies: Reverse depends: mvc Reverse suggests: wsrf"	"null"	"null"	"Graphical user interface for data mining in R."	"true"
"Machine Learning"	"rda"	"http://cran.r-project.org/web/packages/rda/index.html"	"Shrunken Centroids Regularized Discriminant Analysis"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rda rda: Shrunken Centroids Regularized Discriminant Analysis Shrunken Centroids Regularized Discriminant Analysis for the classification purpose in high dimensional data. Version: 1.0.2-2 Depends: R (≥ 2.10) Published: 2012-07-02 Author: Yaqian Guo Trevor Hastie Robert Tibshirani Maintainer: Rob Tibshirani <tibs at stanford.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.r-project.org NeedsCompilation: no In views: MachineLearning, Multivariate CRAN checks: rda results Downloads: Reference manual: rda.pdf Package source: rda_1.0.2-2.tar.gz Windows binaries: r-devel: rda_1.0.2-2.zip, r-release: rda_1.0.2-2.zip, r-oldrel: rda_1.0.2-2.zip OS X Mavericks binaries: r-release: rda_1.0.2-2.tgz, r-oldrel: rda_1.0.2-2.tgz Old sources: rda archive Reverse dependencies: Reverse suggests: ChemometricsWithR"	"null"	"null"	"Shrunken Centroids Regularized Discriminant Analysis"	"true"
"Machine Learning"	"rdetools"	"http://cran.r-project.org/web/packages/rdetools/index.html"	"Relevant Dimension Estimation (RDE) in Feature Spaces"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rdetools rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces The package provides functions for estimating the relevant dimension of a data set in feature spaces, applications to model selection, graphical illustrations and prediction. Version: 1.0 Published: 2012-10-29 Author: Jan Saputra Mueller Maintainer: Jan Saputra Mueller <saputra at cs.tu-berlin.de> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no In views: MachineLearning CRAN checks: rdetools results Downloads: Reference manual: rdetools.pdf Package source: rdetools_1.0.tar.gz Windows binaries: r-devel: rdetools_1.0.zip, r-release: rdetools_1.0.zip, r-oldrel: rdetools_1.0.zip OS X Mavericks binaries: r-release: rdetools_1.0.tgz, r-oldrel: rdetools_1.0.tgz"	"null"	"null"	"Relevant Dimension Estimation (RDE) in Feature Spaces"	"true"
"Machine Learning"	"REEMtree"	"http://cran.r-project.org/web/packages/REEMtree/index.html"	"Regression Trees with Random Effects for Longitudinal (Panel) Data"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package REEMtree REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data This package estimates regression trees with random effects as a way to use data mining techniques to describe longitudinal or panel data. Version: 0.90.3 Depends: nlme, rpart, methods Suggests: AER Published: 2011-08-08 Author: Rebecca Sela and Jeffrey Simonoff Maintainer: Rebecca Sela <rsela at stern.nyu.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: http://pages.stern.nyu.edu/~jsimonof/REEMtree/ NeedsCompilation: no Citation: REEMtree citation info In views: MachineLearning CRAN checks: REEMtree results Downloads: Reference manual: REEMtree.pdf Package source: REEMtree_0.90.3.tar.gz Windows binaries: r-devel: REEMtree_0.90.3.zip, r-release: REEMtree_0.90.3.zip, r-oldrel: REEMtree_0.90.3.zip OS X Mavericks binaries: r-release: REEMtree_0.90.3.tgz, r-oldrel: REEMtree_0.90.3.tgz Old sources: REEMtree archive"	"null"	"null"	"Regression Trees with Random Effects for Longitudinal (Panel) Data"	"true"
"Machine Learning"	"relaxo"	"http://cran.r-project.org/web/packages/relaxo/index.html"	"Relaxed Lasso"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package relaxo relaxo: Relaxed Lasso Relaxed Lasso is a generalisation of the Lasso shrinkage technique for linear regression. Both variable selection and parameter estimation is achieved by regular Lasso, yet both steps do not necessarily use the same penalty parameter. The results include all standard Lasso solutions but allow often for sparser models while having similar or even slightly better predictive performance if many predictor variables are present. The package depends on the LARS package. Version: 0.1-2 Depends: lars Imports: graphics, utils, stats Published: 2012-06-01 Author: Nicolai Meinshausen Maintainer: Nicolai Meinshausen <meinshausen at stats.ox.ac.uk> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: http://www.stats.ox.ac.uk/~meinshau/ NeedsCompilation: no In views: MachineLearning CRAN checks: relaxo results Downloads: Reference manual: relaxo.pdf Package source: relaxo_0.1-2.tar.gz Windows binaries: r-devel: relaxo_0.1-2.zip, r-release: relaxo_0.1-2.zip, r-oldrel: relaxo_0.1-2.zip OS X Mavericks binaries: r-release: relaxo_0.1-2.tgz, r-oldrel: relaxo_0.1-2.tgz Old sources: relaxo archive Reverse dependencies: Reverse suggests: fscaret"	"null"	"null"	"Relaxed Lasso"	"true"
"Machine Learning"	"rgenoud"	"http://cran.r-project.org/web/packages/rgenoud/index.html"	"R version of GENetic Optimization Using Derivatives"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rgenoud rgenoud: R Version of GENetic Optimization Using Derivatives A genetic algorithm plus derivative optimizer. Version: 5.7-12.4 Depends: R (≥ 2.15), utils Suggests: parallel Published: 2015-07-20 Author: Walter R. Mebane, Jr., Jasjeet Singh Sekhon Maintainer: Jasjeet Singh Sekhon <sekhon at berkeley.edu> BugReports: NA License: GPL-3 URL: http://sekhon.berkeley.edu/rgenoud/ NeedsCompilation: yes Citation: rgenoud citation info Materials: ChangeLog In views: HighPerformanceComputing, MachineLearning, Optimization CRAN checks: rgenoud results Downloads: Reference manual: rgenoud.pdf Vignettes: Using genoud Package source: rgenoud_5.7-12.4.tar.gz Windows binaries: r-devel: rgenoud_5.7-12.4.zip, r-release: rgenoud_5.7-12.4.zip, r-oldrel: rgenoud_5.7-12.4.zip OS X Mavericks binaries: r-release: rgenoud_5.7-12.4.tgz, r-oldrel: rgenoud_5.7-12.4.tgz Old sources: rgenoud archive Reverse dependencies: Reverse depends: anchors, DiceOptim, FAiR, KrigInv, multinomRob, RobPer Reverse imports: boolean3, GPareto Reverse suggests: DiceKriging, DynTxRegime, fitdistrplus, icsw, Matching, MuFiCokriging, pnn, regsem, SPOT, Synth"	"null"	"null"	"R version of GENetic Optimization Using Derivatives"	"true"
"Machine Learning"	"rgp"	"http://cran.r-project.org/web/packages/rgp/index.html"	"R genetic programming framework"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rgp rgp: R genetic programming framework RGP is a simple modular Genetic Programming (GP) system build in pure R. In addition to general GP tasks, the system supports Symbolic Regression by GP through the familiar R model formula interface. GP individuals are represented as R expressions, an (optional) type system enables domain-specific function sets containing functions of diverse domain- and range types. A basic set of genetic operators for variation (mutation and crossover) and selection is provided. Version: 0.4-1 Depends: R (≥ 3.0.0), utils Imports: emoa (≥ 0.5-0) Suggests: igraph (≥ 0.5.5), rrules (≥ 0.1-0), rgpui (≥ 0.1-0), snowfall (≥ 1.84-4) Published: 2014-08-08 Author: Oliver Flasch, Olaf Mersmann, Thomas Bartz-Beielstein, Joerg Stork, Martin Zaefferer Maintainer: Oliver Flasch <oliver.flasch at fh-koeln.de> BugReports: NA License: GPL-2 URL: http://rsymbolic.org/projects/show/rgp NeedsCompilation: yes Materials: ChangeLog In views: MachineLearning CRAN checks: rgp results Downloads: Reference manual: rgp.pdf Vignettes: A Friendly Introduction to RGP Package source: rgp_0.4-1.tar.gz Windows binaries: r-devel: rgp_0.4-1.zip, r-release: rgp_0.4-1.zip, r-oldrel: rgp_0.4-1.zip OS X Mavericks binaries: r-release: rgp_0.4-1.tgz, r-oldrel: rgp_0.4-1.tgz Old sources: rgp archive Reverse dependencies: Reverse imports: rgpui Reverse suggests: SPOT"	"null"	"null"	"R genetic programming framework"	"true"
"Machine Learning"	"Rmalschains"	"http://cran.r-project.org/web/packages/Rmalschains/index.html"	"Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package Rmalschains Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R This package implements an algorithm family for continuous optimization called memetic algorithms with local search chains (MA-LS-Chains). Memetic algorithms are hybridizations of genetic algorithms with local search methods. They are especially suited for continuous optimization. Version: 0.2-2 Depends: Rcpp (≥ 0.9.10) LinkingTo: Rcpp Suggests: inline Published: 2014-06-07 Author: Christoph Bergmeir, Daniel Molina, José M. Benítez Maintainer: Christoph Bergmeir <c.bergmeir at decsai.ugr.es> BugReports: NA License: GPL-3 | file LICENSE URL: http://sci2s.ugr.es/dicits/software/Rmalschains NeedsCompilation: yes Citation: Rmalschains citation info Materials: ChangeLog In views: MachineLearning, Optimization CRAN checks: Rmalschains results Downloads: Reference manual: Rmalschains.pdf Package source: Rmalschains_0.2-2.tar.gz Windows binaries: r-devel: Rmalschains_0.2-2.zip, r-release: Rmalschains_0.2-2.zip, r-oldrel: Rmalschains_0.2-2.zip OS X Mavericks binaries: r-release: Rmalschains_0.2-2.tgz, r-oldrel: Rmalschains_0.2-2.tgz Old sources: Rmalschains archive Reverse dependencies: Reverse imports: hybridEnsemble"	"null"	"null"	"Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R"	"true"
"Machine Learning"	"rminer"	"http://cran.r-project.org/web/packages/rminer/index.html"	"Simpler use of data mining methods (e.g. NN and SVM) in classification and regression"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rminer rminer: Data Mining Classification and Regression Methods Facilitates the use of data mining algorithms in classification and regression (including time series forecasting) tasks by presenting a short and coherent set of functions. Versions: 1.4.1 new tutorial and more robust version; 1.4 - new classification and regression models/algorithms, with a total of 14 classification and 15 regression methods, including: Decision Trees, Neural Networks, Support Vector Machines, Random Forests, Bagging and Boosting; 1.3 and 1.3.1 - new classification and regression metrics (improved mmetric function); 1.2 - new input importance methods (improved Importance function); 1.0 - first version. Version: 1.4.1 Depends: kknn Imports: methods, plotrix, lattice, nnet, pls, MASS, mda, rpart, randomForest, adabag, party, Cubist, kernlab, e1071 Published: 2015-07-18 Author: Paulo Cortez Maintainer: Paulo Cortez <pcortez at dsi.uminho.pt> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://cran.r-project.org/package=rminer http://www3.dsi.uminho.pt/pcortez/rminer.html NeedsCompilation: no In views: MachineLearning CRAN checks: rminer results Downloads: Reference manual: rminer.pdf Package source: rminer_1.4.1.tar.gz Windows binaries: r-devel: rminer_1.4.1.zip, r-release: rminer_1.4.1.zip, r-oldrel: rminer_1.4.1.zip OS X Mavericks binaries: r-release: rminer_1.4.1.tgz, r-oldrel: rminer_1.4.1.tgz Old sources: rminer archive Reverse dependencies: Reverse imports: CONDOP"	"null"	"null"	"Simpler use of data mining methods (e.g. NN and SVM) in classification and regression"	"true"
"Machine Learning"	"ROCR"	"http://cran.r-project.org/web/packages/ROCR/index.html"	"Visualizing the performance of scoring classifiers"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ROCR ROCR: Visualizing the Performance of Scoring Classifiers ROC graphs, sensitivity/specificity curves, lift charts, and precision/recall plots are popular examples of trade-off visualizations for specific pairs of performance measures. ROCR is a flexible tool for creating cutoff-parameterized 2D performance curves by freely combining two from over 25 performance measures (new performance measures can be added using a standard interface). Curves from different cross-validation or bootstrapping runs can be averaged by different methods, and standard deviations, standard errors or box plots can be used to visualize the variability across the runs. The parameterization can be visualized by printing cutoff values at the corresponding curve positions, or by coloring the curve according to cutoff. All components of a performance plot can be quickly adjusted using a flexible parameter dispatching mechanism. Despite its flexibility, ROCR is easy to use, with only three commands and reasonable default values for all optional parameters. Version: 1.0-7 Depends: gplots, methods Published: 2015-03-26 Author: Tobias Sing, Oliver Sander, Niko Beerenwinkel, Thomas Lengauer Maintainer: Tobias Sing <tobias.sing at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://rocr.bioinf.mpi-sb.mpg.de/ NeedsCompilation: no Citation: ROCR citation info Materials: README NEWS INSTALL In views: MachineLearning, Multivariate CRAN checks: ROCR results Downloads: Reference manual: ROCR.pdf Package source: ROCR_1.0-7.tar.gz Windows binaries: r-devel: ROCR_1.0-7.zip, r-release: ROCR_1.0-7.zip, r-oldrel: ROCR_1.0-7.zip OS X Mavericks binaries: r-release: ROCR_1.0-7.tgz, r-oldrel: ROCR_1.0-7.tgz Old sources: ROCR archive Reverse dependencies: Reverse depends: Comp2ROC, cvAUC, genMOSS, iFad, MEET, obliqueRF, pathClass, PredictABEL, RcmdrPlugin.ROC, rocc, sperrorest, subtype Reverse imports: aLFQ, AutoModel, Biocomb, btergm, DMwR, DRaWR, DrugClust, EMP, funModeling, gkmSVM, hybridEnsemble, lulcc, mlDNA, MLmetrics, NEArender, netClass, OmicKriging, prcbench, RFmarkerDetector Reverse suggests: AER, dismo, mlr, rattle, recommenderlab, sand, SuperLearner, TDMR, unbalanced"	"null"	"null"	"Visualizing the performance of scoring classifiers"	"true"
"Machine Learning"	"RoughSets"	"http://cran.r-project.org/web/packages/RoughSets/index.html"	"Data Analysis Using Rough Set and Fuzzy Rough Set Theories"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"7"	"3"	"3"	"GitHub - janusza/RoughSets: RoughSets package for R System Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 3 Star 7 Fork 3 janusza/RoughSets Code Issues 0 Pull requests 0 Pulse Graphs RoughSets package for R System 70 commits 1 branch 0 releases Fetching contributors R 98.4% C++ 1.6% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 1f5bbd5 May 22, 2016 janusza Merge pull request #2 from fiedukow/patch-1 … Fix default value of alpha.precision Permalink Failed to load latest commit information. R Merge pull request #2 from fiedukow/patch-1 May 22, 2016 data creation of the repository Jan 15, 2015 demo deletion of two bugged discretization methods Aug 6, 2015 man documentation update May 22, 2016 src .gitattributes Added .gitattributes Jan 15, 2015 .gitignore general cleaning of the code - part1 Aug 26, 2015 DESCRIPTION NAMESPACE documentation update May 22, 2016 Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/janusza/RoughSets"	"Data Analysis Using Rough Set and Fuzzy Rough Set Theories"	"true"
"Machine Learning"	"rpart"	"http://cran.r-project.org/web/packages/rpart/index.html"	"Recursive Partitioning and Regression Trees"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rpart rpart: Recursive Partitioning and Regression Trees Recursive partitioning for classification, regression and survival trees. An implementation of most of the functionality of the 1984 book by Breiman, Friedman, Olshen and Stone. Version: 4.1-10 Priority: recommended Depends: R (≥ 2.15.0), graphics, stats, grDevices Suggests: survival Published: 2015-06-29 Author: Terry Therneau [aut], Beth Atkinson [aut], Brian Ripley [aut, trl, cre] (author of initial R port) Maintainer: Brian Ripley <ripley at stats.ox.ac.uk> BugReports: NA License: GPL-2 | GPL-3 URL: NA NeedsCompilation: yes Materials: NEWS ChangeLog In views: Environmetrics, MachineLearning, Multivariate, Survival CRAN checks: rpart results Downloads: Reference manual: rpart.pdf Vignettes: Introduction to Rpart User Written Split Functions Package source: rpart_4.1-10.tar.gz Windows binaries: r-devel: rpart_4.1-10.zip, r-release: rpart_4.1-10.zip, r-oldrel: rpart_4.1-10.zip OS X Mavericks binaries: r-release: rpart_4.1-10.tgz, r-oldrel: rpart_4.1-10.tgz Old sources: rpart archive Reverse dependencies: Reverse depends: ada, adabag, chemometrics, DidacticBoost, DStree, fda.usc, gamlss.add, GPLTR, maboost, maptree, multiPIM, NHEMOtree, PSAgraphics, quint, REEMtree, rpart.plot, rpartScore, rpart.utils, spatstat, sperrorest, stima, treeClust Reverse imports: BCA, Biocomb, biomod2, bst, CORElearn, CorReg, DMwR, dprep, fastAdaboost, FFTrees, gamclass, gencve, Harvest.Tree, Hmisc, hybridEnsemble, ibmdbR, ipred, LTRCtrees, MergeGUI, mice, NoiseFiltersR, PSAboot, RcmdrPlugin.BCA, RecordLinkage, rminer, rms, rotationForest, SPOT, SSDM, supclust, SurvRank, synthpop, vcrpart, VSURF Reverse suggests: BatchExperiments, BiodiversityR, CALIBERrfimpute, caretEnsemble, catdata, caTools, ChemometricsWithR, classifly, crtests, DAAG, Daim, doParallel, doSNOW, DynTxRegime, e1071, emil, evtree, flacco, FRESA.CAD, fscaret, FSelector, ggdendro, ggplot2, GSIF, HandTill2001, HSAUR, HSAUR2, HSAUR3, klaR, languageR, lulcc, MatchIt, mboost, medflex, metaheur, mlr, ModelGood, partykit, pec, plotmo, pmml, preprocomb, purge, R2HTML, rattle, ROSE, subsemble, SuperLearner, UBL, utiml Reverse enhances: dendextend, PivotalR, sfsmisc"	"null"	"null"	"Recursive Partitioning and Regression Trees"	"true"
"Machine Learning"	"RPMM"	"http://cran.r-project.org/web/packages/RPMM/index.html"	"Recursively Partitioned Mixture Model"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RPMM RPMM: Recursively Partitioned Mixture Model Recursively Partitioned Mixture Model for Beta and Gaussian Mixtures. This is a model-based clustering algorithm that returns a hierarchy of classes, similar to hierarchical clustering, but also similar to finite mixture models. Version: 1.20 Depends: R (≥ 2.3.12), cluster Published: 2014-09-14 Author: E. Andres Houseman, Sc.D. and Devin C. Koestler, Ph.D. Maintainer: E. Andres Houseman <andres.houseman at oregonstate.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no In views: Cluster, MachineLearning CRAN checks: RPMM results Downloads: Reference manual: RPMM.pdf Package source: RPMM_1.20.tar.gz Windows binaries: r-devel: RPMM_1.20.zip, r-release: RPMM_1.20.zip, r-oldrel: RPMM_1.20.zip OS X Mavericks binaries: r-release: RPMM_1.20.tgz, r-oldrel: RPMM_1.20.tgz Old sources: RPMM archive"	"null"	"null"	"Recursively Partitioned Mixture Model"	"true"
"Machine Learning"	"RSNNS"	"http://cran.r-project.org/web/packages/RSNNS/index.html"	"Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS)"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RSNNS RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS) The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the RSNNS low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R. Version: 0.4-7 Depends: R (≥ 2.10.0), methods, Rcpp (≥ 0.8.5) LinkingTo: Rcpp Suggests: scatterplot3d, NeuralNetTools Published: 2015-06-12 Author: Christoph Bergmeir and José M. Benítez Maintainer: Christoph Bergmeir <c.bergmeir at decsai.ugr.es> BugReports: NA License: LGPL-2 | LGPL-2.1 | LGPL-3 | file LICENSE [expanded from: LGPL (≥ 2) | file LICENSE] URL: http://sci2s.ugr.es/dicits/software/RSNNS NeedsCompilation: yes Citation: RSNNS citation info Materials: ChangeLog In views: MachineLearning CRAN checks: RSNNS results Downloads: Reference manual: RSNNS.pdf Package source: RSNNS_0.4-7.tar.gz Windows binaries: r-devel: RSNNS_0.4-7.zip, r-release: RSNNS_0.4-7.zip, r-oldrel: RSNNS_0.4-7.zip OS X Mavericks binaries: r-release: RSNNS_0.4-7.tgz, r-oldrel: RSNNS_0.4-7.tgz Old sources: RSNNS archive Reverse dependencies: Reverse imports: nnetpredint, rasclass, semiArtificial Reverse suggests: fscaret, mlr, NeuralNetTools"	"null"	"null"	"Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS)"	"true"
"Machine Learning"	"RWeka"	"http://cran.r-project.org/web/packages/RWeka/index.html"	"R/Weka interface"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RWeka RWeka: R/Weka Interface An R interface to Weka (Version 3.9.0). Weka is a collection of machine learning algorithms for data mining tasks written in Java, containing tools for data pre-processing, classification, regression, clustering, association rules, and visualization. Package 'RWeka' contains the interface code, the Weka jar is in a separate package 'RWekajars'. For more information on Weka see <http://www.cs.waikato.ac.nz/ml/weka/>. Version: 0.4-29 Depends: R (≥ 2.6.0) Imports: RWekajars (≥ 3.9.0), rJava (≥ 0.6-3), graphics, stats, utils, grid Suggests: partykit (≥ 0.8.0), mlbench, e1071 Published: 2016-06-09 Author: Kurt Hornik [aut, cre], Christian Buchta [ctb], Torsten Hothorn [ctb], Alexandros Karatzoglou [ctb], David Meyer [ctb], Achim Zeileis [ctb] Maintainer: Kurt Hornik <Kurt.Hornik at R-project.org> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no SystemRequirements: Java (>= 7.0) Citation: RWeka citation info Materials: ChangeLog In views: MachineLearning, NaturalLanguageProcessing CRAN checks: RWeka results Downloads: Reference manual: RWeka.pdf Vignettes: RWeka Odds and Ends Package source: RWeka_0.4-29.tar.gz Windows binaries: r-devel: RWeka_0.4-29.zip, r-release: RWeka_0.4-29.zip, r-oldrel: RWeka_0.4-29.zip OS X Mavericks binaries: r-release: RWeka_0.4-26.tgz, r-oldrel: RWeka_0.4-26.tgz Old sources: RWeka archive Reverse dependencies: Reverse depends: ANLP, MSIseq Reverse imports: Biocomb, FSelector, NoiseFiltersR Reverse suggests: fscaret, mlr, partykit, utiml Reverse enhances: clue"	"null"	"null"	"R/Weka interface"	"true"
"Machine Learning"	"RXshrink"	"http://cran.r-project.org/web/packages/RXshrink/index.html"	"RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package RXshrink RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression Identify and display TRACEs for a specified shrinkage path and determine the extent of shrinkage most likely, under normal distribution theory, to produce an optimal reduction in MSE Risk in estimates of regression (beta) coefficients. Version: 1.0-8 Depends: R (≥ 1.8.0), lars Published: 2014-01-14 Author: Bob Obenchain Maintainer: Bob Obenchain <wizbob at att.net> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.r-project.org, http://members.iquest.net/~softrx NeedsCompilation: no In views: MachineLearning CRAN checks: RXshrink results Downloads: Reference manual: RXshrink.pdf Package source: RXshrink_1.0-8.tar.gz Windows binaries: r-devel: RXshrink_1.0-8.zip, r-release: RXshrink_1.0-8.zip, r-oldrel: RXshrink_1.0-8.zip OS X Mavericks binaries: r-release: RXshrink_1.0-8.tgz, r-oldrel: RXshrink_1.0-8.tgz Old sources: RXshrink archive"	"null"	"null"	"RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression"	"true"
"Machine Learning"	"sda"	"http://cran.r-project.org/web/packages/sda/index.html"	"Shrinkage Discriminant Analysis and CAT Score Variable Selection"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package sda sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection Provides an efficient framework for high-dimensional linear and diagonal discriminant analysis with variable selection. The classifier is trained using James-Stein-type shrinkage estimators and predictor variables are ranked using correlation-adjusted t-scores (CAT scores). Variable selection error is controlled using false non-discovery rates or higher criticism. Version: 1.3.7 Depends: R (≥ 3.0.2), entropy (≥ 1.2.1), corpcor (≥ 1.6.8), fdrtool (≥ 1.2.15) Imports: graphics, stats, utils Suggests: crossval (≥ 1.0.3) Published: 2015-07-08 Author: Miika Ahdesmaki, Verena Zuber, Sebastian Gibb, and Korbinian Strimmer Maintainer: Korbinian Strimmer <strimmerlab at gmail.com> BugReports: NA License: GPL (≥ 3) URL: http://strimmerlab.org/software/sda/ NeedsCompilation: no Materials: NEWS In views: MachineLearning CRAN checks: sda results Downloads: Reference manual: sda.pdf Package source: sda_1.3.7.tar.gz Windows binaries: r-devel: sda_1.3.7.zip, r-release: sda_1.3.7.zip, r-oldrel: sda_1.3.7.zip OS X Mavericks binaries: r-release: sda_1.3.7.tgz, r-oldrel: sda_1.3.7.tgz Old sources: sda archive Reverse dependencies: Reverse depends: st Reverse imports: FADA Reverse suggests: crossval, fscaret, mlr"	"null"	"null"	"Shrinkage Discriminant Analysis and CAT Score Variable Selection"	"true"
"Machine Learning"	"SDDA"	"http://cran.r-project.org/web/packages/SDDA/index.html"	"Stepwise Diagonal Discriminant Analysis"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package SDDA Package ‘SDDA’ was removed from the CRAN repository. Formerly available versions can be obtained from the archive. Archived on 2014-08-30 as new/delete mismatches were not corrected."	"null"	"null"	"Stepwise Diagonal Discriminant Analysis"	"true"
"Machine Learning"	"SuperLearner"	"https://github.com/ecpolley/SuperLearner"	"and - Multi-algorithm ensemble learning packages."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"62"	"10"	"26"	"GitHub - ecpolley/SuperLearner: Current version of the SuperLearner R package Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 62 Fork 26 ecpolley/SuperLearner Code Issues 3 Pull requests 1 Wiki Pulse Graphs Current version of the SuperLearner R package 167 commits 1 branch 0 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 11609b8 Jun 27, 2016 ecpolley committed on GitHub Update NAMESPACE … Add importFrom for xgboost predict method Permalink Failed to load latest commit information. R Update SL.bartMachine.R Jun 24, 2016 inst Update NEWS Jun 24, 2016 man Merge pull request #36 from ck37/bart Jun 24, 2016 tests Merge pull request #37 from ck37/cc_ls Jun 24, 2016 vignettes Moved vignette into vignettes folder Sep 3, 2013 .Rbuildignore Added recombine SL functions Apr 21, 2015 DESCRIPTION Fix merge conflict Jun 16, 2016 NAMESPACE Update NAMESPACE Jun 27, 2016 README.md Update README.md Feb 2, 2016 README.md SuperLearner This is the current version of the SuperLearner R package (version 2.*). How to install from Github To install the SuperLearner package, we recommend using the devtools package. devtools If you have devtools installed you can install the SuperLearner package using the following script. # install.packages(""devtools"") library(devtools) install_github(""ecpolley/SuperLearner"")  CRAN Alternatively, the package is available on CRAN and can be installed within R using install.packages(""SuperLearner"")  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ecpolley/SuperLearner"	"and - Multi-algorithm ensemble learning packages."	"true"
"Machine Learning"	"subsemble"	"http://cran.r-project.org/web/packages/subsemble/index.html"	"and - Multi-algorithm ensemble learning packages."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package subsemble subsemble: An Ensemble Method for Combining Subset-Specific Algorithm Fits Subsemble is a general subset ensemble prediction method, which can be used for small, moderate, or large datasets. Subsemble partitions the full dataset into subsets of observations, fits a specified underlying algorithm on each subset, and uses a unique form of V-fold cross-validation to output a prediction function that combines the subset-specific fits. An oracle result provides a theoretical performance guarantee for Subsemble. Version: 0.0.9 Depends: R (≥ 2.14.0), SuperLearner Suggests: arm, caret, class, e1071, earth, gam, gbm, glmnet, Hmisc, ipred, lattice, LogicReg, MASS, mda, mlbench, nnet, parallel, party, polspline, quadprog, randomForest, rpart, SIS, spls, stepPlr Published: 2014-07-01 Author: Erin LeDell, Stephanie Sapp, Mark van der Laan Maintainer: Erin LeDell <ledell at berkeley.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no Materials: NEWS CRAN checks: subsemble results Downloads: Reference manual: subsemble.pdf Package source: subsemble_0.0.9.tar.gz Windows binaries: r-devel: subsemble_0.0.9.zip, r-release: subsemble_0.0.9.zip, r-oldrel: subsemble_0.0.9.zip OS X Mavericks binaries: r-release: subsemble_0.0.9.tgz, r-oldrel: subsemble_0.0.9.tgz Old sources: subsemble archive"	"null"	"null"	"and - Multi-algorithm ensemble learning packages."	"true"
"Machine Learning"	"svmpath"	"http://cran.r-project.org/web/packages/svmpath/index.html"	"svmpath: the SVM Path algorithm"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package svmpath svmpath: svmpath: the SVM Path algorithm Computes the entire regularization path for the two-class svm classifier with essentially the same cost as a single SVM fit. Version: 0.953 Published: 2012-12-23 Author: Trevor Hastie Maintainer: Trevor Hastie <hastie at stanford.edu> BugReports: NA License: GPL-2 URL: http://www.jmlr.org/papers/volume5/hastie04a/hastie04a.pdf NeedsCompilation: yes In views: MachineLearning CRAN checks: svmpath results Downloads: Reference manual: svmpath.pdf Package source: svmpath_0.953.tar.gz Windows binaries: r-devel: svmpath_0.953.zip, r-release: svmpath_0.953.zip, r-oldrel: svmpath_0.953.zip OS X Mavericks binaries: r-release: svmpath_0.953.tgz, r-oldrel: svmpath_0.953.tgz Old sources: svmpath archive Reverse dependencies: Reverse depends: pathClass"	"null"	"null"	"svmpath: the SVM Path algorithm"	"true"
"Machine Learning"	"tgp"	"http://cran.r-project.org/web/packages/tgp/index.html"	"Bayesian treed Gaussian process models"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package tgp tgp: Bayesian Treed Gaussian Process Models Bayesian nonstationary, semiparametric nonlinear regression and design by treed Gaussian processes (GPs) with jumps to the limiting linear model (LLM). Special cases also implemented include Bayesian linear models, CART, treed linear models, stationary separable and isotropic GPs, and GP single-index models. Provides 1-d and 2-d plotting functions (with projection and slice capabilities) and tree drawing, designed for visualization of tgp-class output. Sensitivity analysis and multi-resolution models are supported. Sequential experimental design and adaptive sampling functions are also provided, including ALM, ALC, and expected improvement. The latter supports derivative-free optimization of noisy black-box functions. Version: 2.4-14 Depends: R (≥ 2.14.0) Imports: maptree Suggests: MASS Published: 2016-02-07 Author: Robert B. Gramacy and Matt A. Taddy Maintainer: Robert B. Gramacy <rbgramacy at chicagobooth.edu> BugReports: NA License: LGPL-2 | LGPL-2.1 | LGPL-3 [expanded from: LGPL] URL: http://bobby.gramacy.com/r_packages/tgp NeedsCompilation: yes Citation: tgp citation info Materials: README ChangeLog In views: Bayesian, ExperimentalDesign, MachineLearning, Spatial CRAN checks: tgp results Downloads: Reference manual: tgp.pdf Vignettes: a guide to the tgp package new features in tgp version 2.x Package source: tgp_2.4-14.tar.gz Windows binaries: r-devel: tgp_2.4-14.zip, r-release: tgp_2.4-14.zip, r-oldrel: tgp_2.4-14.zip OS X Mavericks binaries: r-release: tgp_2.4-14.tgz, r-oldrel: tgp_2.4-14.tgz Old sources: tgp archive Reverse dependencies: Reverse depends: earlywarnings, penalizedSVM, plgp Reverse imports: c060, laGP, RNCEP Reverse suggests: BayesTreePrior, dynaTree, mlr, SPOT"	"null"	"null"	"Bayesian treed Gaussian process models"	"true"
"Machine Learning"	"tree"	"http://cran.r-project.org/web/packages/tree/index.html"	"Classification and regression trees"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package tree tree: Classification and Regression Trees Classification and regression trees. Version: 1.0-37 Depends: R (≥ 2.15.0), grDevices, graphics, stats Suggests: MASS Published: 2016-01-21 Author: Brian Ripley [aut, cre] Maintainer: Brian Ripley <ripley at stats.ox.ac.uk> BugReports: NA License: GPL-2 | GPL-3 URL: NA NeedsCompilation: yes Materials: ChangeLog In views: MachineLearning CRAN checks: tree results Downloads: Reference manual: tree.pdf Package source: tree_1.0-37.tar.gz Windows binaries: r-devel: tree_1.0-37.zip, r-release: tree_1.0-37.zip, r-oldrel: tree_1.0-37.zip OS X Mavericks binaries: r-release: tree_1.0-37.tgz, r-oldrel: tree_1.0-37.tgz Old sources: tree archive Reverse dependencies: Reverse depends: BigTSP, msos, oblique.tree, SPODT Reverse imports: RTextTools Reverse suggests: COBRA, ggdendro, optpart, ROSE, TunePareto"	"null"	"null"	"Classification and regression trees"	"true"
"Machine Learning"	"varSelRF"	"http://cran.r-project.org/web/packages/varSelRF/index.html"	"Variable selection using random forests"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"4"	"2"	"2"	"GitHub - rdiaz02/varSelRF Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 2 Star 4 Fork 2 rdiaz02/varSelRF Code Issues 3 Pull requests 0 Pulse Graphs No description or website provided. 22 commits 1 branch 1 release Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 0.7-4 Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. R man .Rbuildignore .gitignore Changes DESCRIPTION NAMESPACE README.md README.md varSelRF An R package for variable selection using random Forest. References Diaz-Uriarte and Alvarez de Andres, 2006, ""Gene selection and classification of microarray data using random forest."", BMC Bioinformatics, 2006, 7:3 (with Supplementary Material) Diaz-Uriarte, 2007, ""GeneSrF and varSelRF: a web-based tool and R package for gene selection and classification using random forest."" BMC Bioinformatics, 8: 328. License GPL (>= 2) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rdiaz02/varSelRF"	"Variable selection using random forests"	"true"
"Machine Learning"	"xgboost"	"https://github.com/tqchen/xgboost/tree/master/R-package"	"eXtreme Gradient Boosting Tree model, well known for its speed and performance."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"104"	"14"	"2078"	"xgboost/R-package at master · tqchen/xgboost · GitHub Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 14 Star 104 Fork 2,078 tqchen/xgboost forked from dmlc/xgboost Code Pull requests 0 Wiki Pulse Graphs Branch: master Switch branches/tags Branches Tags bench master Nothing to show v0.40 v0.32 v0.22 v0.21 v0.1 Nothing to show Create new file Find file History xgboost/R-package/ Pull request Compare This branch is 71 commits behind dmlc:master. Latest commit 611b317 Apr 16, 2016 khotilov make travis happy Permalink .. Failed to load latest commit information. R make travis happy May 17, 2016 data resolving not-CRAN issues Jan 20, 2015 demo Fixed typos. Mar 22, 2016 man make travis happy May 17, 2016 src [R] more attribute handling functionality May 14, 2016 tests xgb.model.dt.tree up to x100 faster May 17, 2016 vignettes fixed typo Apr 30, 2016 .Rbuildignore fix namespace and desc Jul 24, 2015 DESCRIPTION fix cran, update version to 0.4-3 Feb 16, 2016 LICENSE modify licence and desc to standard format Aug 30, 2014 NAMESPACE xgb.model.dt.tree up to x100 faster May 17, 2016 README.md Updated obsolete installation instructions Mar 30, 2016 README.md XGBoost R Package for Scalable GBM Resources XGBoost R Package Online Documentation Check this out for detailed documents, examples and tutorials. Installation We are on CRAN now. For stable/pre-compiled(for Windows and OS X) version, please install from CRAN: install.packages('xgboost') You can also install from our weekly updated drat repo: install.packages(""drat"", repos=""https://cran.rstudio.com"") drat:::addRepo(""dmlc"") install.packages(""xgboost"", repos=""http://dmlc.ml/drat/"", type=""source"") Important Due to the usage of submodule, install_github is no longer support to install the latest version of R package. For up-to-date version, please install from github. Windows users will need to install RTools first. They also need to download MinGW-W64 using x86_64 architecture during installation. Run the following command to add MinGW to PATH in Windows if not already added. PATH %PATH%;C:\Program Files\mingw-w64\x86_64-5.3.0-posix-seh-rt_v4-rev0\mingw64\bin To compile xgboost at the root of your storage, run the following bash script. git clone --recursive https://github.com/dmlc/xgboost cd xgboost git submodule init git submodule update alias make='mingw32-make' cd dmlc-core make -j4 cd ../rabit make lib/librabit_empty.a -j4 cd .. cp make/mingw64.mk config.mk make -j4 Run the following R script to install xgboost package from the root directory. install.package('devtools') # if not installed setwd('C:/xgboost/') library(devtools) install('R-package') For more detailed installation instructions, please see here. Examples Please visit walk through example. See also the example scripts for Kaggle Higgs Challenge, including speedtest script on this dataset and the one related to Otto challenge, including a RMarkdown documentation. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/tqchen/xgboost/tree/master/R-package"	"eXtreme Gradient Boosting Tree model, well known for its speed and performance."	"true"
"Natural Language Processing"	"text2vec"	"https://github.com/dselivanov/text2vec"	"Fast Text Mining Framework for Vectorization and Word Embeddings."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"130"	"18"	"26"	"GitHub - dselivanov/text2vec: Fast text mining framework for R. Text vectorization, topic modeling and GloVe word embeddings. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 18 Star 130 Fork 26 dselivanov/text2vec Code Issues 25 Pull requests 0 Wiki Pulse Graphs Fast text mining framework for R. Text vectorization, topic modeling and GloVe word embeddings. 292 commits 2 branches 3 releases Fetching contributors R 64.9% C++ 35.1% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 0.4 master Nothing to show 0.3.1 0.3.0 0.2.0 Nothing to show New pull request Latest commit a4f5dfa Jul 11, 2016 dselivanov Merge branch 'master' of github.com:dselivanov/text2vec Permalink Failed to load latest commit information. R Merge branch 'master' of github.com:dselivanov/text2vec Jul 11, 2016 data fixes suggested by CRAN team Jan 10, 2016 man Merge branch 'master' of github.com:dselivanov/text2vec Jul 11, 2016 src refactor ngram - slightly faster generation. Remove public API for ng… Mar 31, 2016 tests better names Mar 21, 2016 vignettes typos Jun 15, 2016 .Rbuildignore minor updates Nov 12, 2015 .gitignore initial commit Aug 5, 2015 .travis.yml fix #68 Mar 21, 2016 DESCRIPTION 0.3.1 minor release. Mainly for checking for empty iterators. Jul 11, 2016 LICENSE year Jan 11, 2016 NAMESPACE refactor ngram - slightly faster generation. Remove public API for ng… Mar 31, 2016 NEWS.md 0.3.1 minor release. Mainly for checking for empty iterators. Jul 11, 2016 readme.md Update readme.md Jun 25, 2016 text2vec.Rproj vignetes. related to #39 Jan 10, 2016 readme.md Development We keep stable (last CRAN release) version in master. Current active development is in 0.4 branch. Tutorials To learn how to use this package, see the package vignettes. Text vectorization: vignette(""text-vectorization"", package = ""text2vec"") GloVe word embeddings: vignette(""glove"", package = ""text2vec"") See also the text2vec articles on my blog. Features text2vec is a package that provides an efficient framework with a concise API for text analysis and natural language processing (NLP) in R. It is inspired by gensim, an excellent Python library for NLP. The core functionality at the moment includes Fast text vectorization on arbitrary n-grams, using vocabulary or feature hashing. State-of-the-art GloVe word embeddings. The core of this package is carefully written in C++, which means text2vec is fast and memory friendly. Some parts (GloVe training) are fully parallelized using the excellent RcppParallel package. This means that parallel processing works on OS X, Linux, Windows and Solaris (x86) without any additional hacking or tricks. In addition, there is a higher-level parallelization for text vectorization and vocabulary construction on top of the foreach package, and text2vec has a streaming API so that users don't have to load all of the data into RAM. The API is built around the iterator abstraction. The API is concise, providing only a few functions which do their job well. The package does not (and probably will not in the future) provide trivial very high-level functions. But other packages can build on top of the framework that text2vec provides. Contributing The package has issue tracker on GitHub where I'm filing feature requests and notes for future work. Any ideas are appreciated. Contributors are welcome. You can help by testing and leaving feedback on the GitHub issuer tracker (preferably) or directly by e-mail. forking and contributing. Vignettes, docs, tests, and use cases are very welcome. by giving me a star on project page :-) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/dselivanov/text2vec"	"Fast Text Mining Framework for Vectorization and Word Embeddings."	"true"
"Natural Language Processing"	"tm"	"http://cran.r-project.org/web/packages/tm/index.html"	"A comprehensive text mining framework for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package tm tm: Text Mining Package A framework for text mining applications within R. Version: 0.6-2 Depends: R (≥ 3.1.0), NLP (≥ 0.1-6.2) Imports: parallel, slam (≥ 0.1-31), stats, tools, utils, graphics Suggests: filehash, methods, Rcampdf, Rgraphviz, Rpoppler, SnowballC, tm.lexicon.GeneralInquirer, XML Published: 2015-07-03 Author: Ingo Feinerer [aut, cre], Kurt Hornik [aut], Artifex Software, Inc. [ctb, cph] (pdf_info.ps taken from GPL Ghostscript) Maintainer: Ingo Feinerer <feinerer at logic.at> BugReports: NA License: GPL-3 URL: http://tm.r-forge.r-project.org/ NeedsCompilation: yes SystemRequirements: Antiword (<http://www.winfield.demon.nl/>) for reading MS Word files, pdfinfo and pdftotext from Poppler (<http://poppler.freedesktop.org/>) for reading PDF Citation: tm citation info Materials: NEWS In views: HighPerformanceComputing, NaturalLanguageProcessing CRAN checks: tm results Downloads: Reference manual: tm.pdf Vignettes: Extensions Introduction to the tm Package Package source: tm_0.6-2.tar.gz Windows binaries: r-devel: tm_0.6-2.zip, r-release: tm_0.6-2.zip, r-oldrel: tm_0.6-2.zip OS X Mavericks binaries: r-release: tm_0.6-2.tgz, r-oldrel: tm_0.6-2.tgz Old sources: tm archive Reverse dependencies: Reverse depends: ANLP, DeducerText, manifestoR, maxent, RcmdrPlugin.temis, RNewsflow, smdc, tm.plugin.dc Reverse imports: edgar, fulltext, genderizeR, inpdfr, ngramrr, polmineR, PubMedWordcloud, qdap, rClinicalCodes, reproducer, RKEA, RTextTools, SocialMediaLab, TELP, textmineR, textreg, tm.plugin.alceste, tm.plugin.europresse, tm.plugin.factiva, tm.plugin.lexisnexis, tm.plugin.mail, tm.plugin.webmining, topicmodels Reverse suggests: HSAUR2, HSAUR3, koRpus, lsa, movMF, PRISMA, quanteda, rattle, stm, tau, tidytext, toaster, wordcloud Reverse enhances: rplos"	"null"	"null"	"A comprehensive text mining framework for R."	"true"
"Natural Language Processing"	"openNLP"	"http://cran.r-project.org/web/packages/openNLP/index.html"	"Apache OpenNLP Tools Interface."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package openNLP openNLP: Apache OpenNLP Tools Interface An interface to the Apache OpenNLP tools (version 1.5.3). The Apache OpenNLP library is a machine learning based toolkit for the processing of natural language text written in Java. It supports the most common NLP tasks, such as tokenization, sentence segmentation, part-of-speech tagging, named entity extraction, chunking, parsing, and coreference resolution. See <http://opennlp.apache.org/> for more information. Version: 0.2-6 Imports: NLP (≥ 0.1-6.3), openNLPdata (≥ 1.5.3-1), rJava (≥ 0.6-3) Suggests: openNLPmodels.en Published: 2016-02-18 Author: Kurt Hornik [aut, cre] Maintainer: Kurt Hornik <Kurt.Hornik at R-project.org> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: no SystemRequirements: Java (>= 5.0) In views: NaturalLanguageProcessing CRAN checks: openNLP results Downloads: Reference manual: openNLP.pdf Package source: openNLP_0.2-6.tar.gz Windows binaries: r-devel: openNLP_0.2-6.zip, r-release: openNLP_0.2-6.zip, r-oldrel: openNLP_0.2-6.zip OS X Mavericks binaries: r-release: openNLP_0.2-6.tgz, r-oldrel: openNLP_0.2-6.tgz Old sources: openNLP archive Reverse dependencies: Reverse imports: qdap, syuzhet"	"null"	"null"	"Apache OpenNLP Tools Interface."	"true"
"Natural Language Processing"	"koRpus"	"http://cran.r-project.org/web/packages/koRpus/index.html"	"An R Package for Text Analysis."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package koRpus koRpus: An R Package for Text Analysis A set of tools to analyze texts. Includes, amongst others, functions for automatic language detection, hyphenation, several indices of lexical diversity (e.g., type token ratio, HD-D/vocd-D, MTLD) and readability (e.g., Flesch, SMOG, LIX, Dale-Chall). Basic import functions for language corpora are also provided, to enable frequency analyses (supports Celex and Leipzig Corpora Collection file formats) and measures like tf-idf. Support for additional languages can be added on-the-fly or by plugin packages. Note: For full functionality a local installation of TreeTagger is recommended. 'koRpus' also includes a plugin for the R GUI and IDE RKWard, providing graphical dialogs for its basic features. The respective R package 'rkward' cannot be installed directly from a repository, as it is a part of RKWard. To make full use of this feature, please install RKWard from https://rkward.kde.org (plugins are detected automatically). Due to some restrictions on CRAN, the full package sources are only available from the project homepage. To ask for help, report bugs, suggest feature improvements, or discuss the global development of the package, please subscribe to the koRpus-dev mailing list (https://ml06.ispgateway.de/mailman/ listinfo/korpus-dev_r.reaktanz.de). Version: 0.06-5 Depends: R (≥ 2.10.0), methods Suggests: testthat, tm, SnowballC, shiny Enhances: rkward Published: 2016-06-06 Author: m.eik michalke [aut, cre], Earl Brown [ctb], Alberto Mirisola [ctb], Alexandre Brulet [ctb], Laura Hauser [ctb] Maintainer: m.eik michalke <meik.michalke at hhu.de> BugReports: NA License: GPL (≥ 3) URL: http://reaktanz.de/?c=hacking&s=koRpus NeedsCompilation: no Citation: koRpus citation info Materials: README NEWS ChangeLog In views: NaturalLanguageProcessing CRAN checks: koRpus results Downloads: Reference manual: koRpus.pdf Vignettes: Using the koRpus Package for Text Analysis Package source: koRpus_0.06-5.tar.gz Windows binaries: r-devel: koRpus_0.06-5.zip, r-release: koRpus_0.06-5.zip, r-oldrel: koRpus_0.06-5.zip OS X Mavericks binaries: r-release: koRpus_0.06-5.tgz, r-oldrel: koRpus_0.06-5.tgz Old sources: koRpus archive Reverse dependencies: Reverse suggests: pander, polmineR, qdap"	"null"	"null"	"An R Package for Text Analysis."	"true"
"Natural Language Processing"	"zipfR"	"http://cran.r-project.org/web/packages/zipfR/index.html"	"Statistical models for word frequency distributions."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package zipfR zipfR: Statistical models for word frequency distributions Statistical models and utilities for the analysis of word frequency distributions. The utilities include functions for loading, manipulating and visualizing word frequency data and vocabulary growth curves. The package also implements several statistical models for the distribution of word frequencies in a population. (The name of this library derives from the most famous word frequency distribution, Zipf's law.) Version: 0.6-6 Depends: R (≥ 2.10.1) Published: 2012-04-03 Author: Stefan Evert, Marco Baroni Maintainer: Stefan Evert <stefan.evert at uos.de> BugReports: NA License: GPL-3 URL: http://zipfR.R-Forge.R-project.org/ NeedsCompilation: no Citation: zipfR citation info Materials: README In views: Distributions, NaturalLanguageProcessing CRAN checks: zipfR results Downloads: Reference manual: zipfR.pdf Package source: zipfR_0.6-6.tar.gz Windows binaries: r-devel: zipfR_0.6-6.zip, r-release: zipfR_0.6-6.zip, r-oldrel: zipfR_0.6-6.zip OS X Mavericks binaries: r-release: zipfR_0.6-6.tgz, r-oldrel: zipfR_0.6-6.tgz Old sources: zipfR archive Reverse dependencies: Reverse suggests: languageR"	"null"	"null"	"Statistical models for word frequency distributions."	"true"
"Natural Language Processing"	"NLP"	"http://cran.r-project.org/web/packages/NLP/index.html"	"Basic functions for Natural Language Processing."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package NLP NLP: Natural Language Processing Infrastructure Basic classes and methods for Natural Language Processing. Version: 0.1-9 Depends: R (≥ 2.10) Imports: utils Published: 2016-02-18 Author: Kurt Hornik [aut, cre] Maintainer: Kurt Hornik <Kurt.Hornik at R-project.org> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: no CRAN checks: NLP results Downloads: Reference manual: NLP.pdf Package source: NLP_0.1-9.tar.gz Windows binaries: r-devel: NLP_0.1-9.zip, r-release: NLP_0.1-9.zip, r-oldrel: NLP_0.1-9.zip OS X Mavericks binaries: r-release: NLP_0.1-9.tgz, r-oldrel: NLP_0.1-9.tgz Old sources: NLP archive Reverse dependencies: Reverse depends: manifestoR, RcmdrPlugin.temis, tm Reverse imports: NLPutils, openNLP, qdap, syuzhet, textreg, textreuse, tm.plugin.alceste, tm.plugin.dc, tm.plugin.europresse, tm.plugin.factiva, tm.plugin.lexisnexis, tm.plugin.mail, tm.plugin.webmining Reverse suggests: stm, tidytext"	"null"	"null"	"Basic functions for Natural Language Processing."	"true"
"Natural Language Processing"	"LDAvis"	"https://github.com/cpsievert/LDAvis"	"Interactive visualization of topic models."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"212"	"23"	"59"	"GitHub - cpsievert/LDAvis Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 23 Star 212 Fork 59 cpsievert/LDAvis Code Issues 15 Pull requests 1 Pulse Graphs No description or website provided. 251 commits 4 branches 0 releases 6 contributors JavaScript 68.7% R 29.4% Other 1.9% JavaScript R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master quick-fix v0.1 Nothing to show Nothing to show New pull request Latest commit 69397bb Jan 8, 2016 cpsievert Bump version; update news Permalink Failed to load latest commit information. R fix warnings during build Dec 22, 2015 data Remove data Jan 22, 2015 inst add citation Nov 23, 2015 man option to not reorder topics Dec 22, 2015 vignettes Bump version; update news; change location of a couple comments Jul 17, 2015 .Rbuildignore CRAN version 0.3.2 Oct 24, 2015 .gitignore CRAN version 0.3.2 Oct 24, 2015 .push_gh_pages.sh Merge branch 'master' of https://github.com/cpsievert/LDAvis Feb 3, 2015 .travis.yml Install gistr binary Feb 3, 2015 DESCRIPTION Bump version; update news Jan 8, 2016 LICENSE Reformat LICENSE to the structure that CRAN wants Nov 29, 2014 NAMESPACE Switch from Sweave back to knitr; re-document with newest roxygen Jul 17, 2015 NEWS Bump version; update news Jan 8, 2016 README.md Update README.md Dec 7, 2015 cran-comments.md fix spelling; cran comments Jan 23, 2015 README.md LDAvis R package for interactive topic model visualization. LDAvis is designed to help users interpret the topics in a topic model that has been fit to a corpus of text data. The package extracts information from a fitted LDA topic model to inform an interactive web-based visualization. Installing the package Stable version on CRAN: install.packages(""LDAvis"") Development version on GitHub (with devtools): devtools::install_github(""cpsievert/LDAvis"") Getting started Once installed, we recommend a visit to the main help page: library(LDAvis) help(createJSON, package = ""LDAvis"") The documentation and example on the bottom of that page should provide a quick sense of how to create (and share) your own visualizations. If you want more details about the technical specifications of the visualization, see the vignette: vignette(""details"", package = ""LDAvis"") Note that LDAvis itself does not provide facilities for fitting the model (only visualizing a fitted model). If you want to perform LDA in R, there are several packages, including mallet, lda, and topicmodels. If you want to perform LDA with the R package lda and visualize the result with LDAvis, our example of a 20-topic model fit to 2,000 movie reviews may be helpful. LDAvis does not limit you to topic modeling facilities in R. If you use other tools (MALLET and gensim are popular), we recommend that you visit our Twenty Newsgroups example to help quickly understand what components LDAvis will need. Sharing a Visualization To share a visualization that you created using LDAvis, you can encode the state of the visualization into the URL by appending a string of the form: ""#topic=k&lambda=l&term=s"" to the end of the URL, where ""k"", ""l"", and ""s"" are strings indicating the desired values of the selected topic, the value of lambda, and the selected term, respectively. For more details, see the last section of our Movie Reviews example, or for a quick example, see the link here: http://cpsievert.github.io/LDAvis/reviews/vis/#topic=3&lambda=0.6&term=cop Video demos Visualizing & Exploring the Twenty Newsgroup Data Visualizing Topic Models demo with Hacker News Corpus Notebook w/Visualization Slide deck More documentation To read about the methodology behind LDAvis, see our paper, which we presented at the 2014 ACL Workshop on Interactive Language Learning, Visualization, and Interfaces in Baltimore on June 27, 2014. Additional data We included one data set in LDAvis, 'TwentyNewsgroups', which consists of a list with 5 elements: phi, a matrix with the topic-term distributions theta, a matrix with the document-topic distributions doc.length, a numeric vector with token counts for each document vocab, a character vector containing the terms term.frequency, a numeric vector of observed term frequencies We also created a second data-only package called LDAvisData to hold additional example data sets. Currently there are three more examples available there: Movie Reviews (a 20-topic model fit to 2,000 movie reviews) AP (a 40-topic model fit to approximately 2,246 news articles) Jeopardy (a 100-topic model fit to approximately 20,000 Jeopardy questions) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/cpsievert/LDAvis"	"Interactive visualization of topic models."	"true"
"Natural Language Processing"	"topicmodels"	"https://cran.r-project.org/web/packages/topicmodels/index.html"	"Topic modeling interface to the C code developed by by David M. Blei for Topic Modeling (Latent Dirichlet Allocation (LDA), and Correlated Topics Models (CTM))."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package topicmodels topicmodels: Topic Models Provides an interface to the C code for Latent Dirichlet Allocation (LDA) models and Correlated Topics Models (CTM) by David M. Blei and co-authors and the C++ code for fitting LDA models using Gibbs sampling by Xuan-Hieu Phan and co-authors. Version: 0.2-4 Depends: R (≥ 2.15.0) Imports: stats4, methods, modeltools, slam, tm (≥ 0.6) Suggests: lasso2, lattice, lda, OAIHarvester, SnowballC, XML, corpus.JSS.papers Published: 2016-05-23 Author: Bettina Grün [aut, cre], Kurt Hornik [aut] Maintainer: Bettina Grün <Bettina.Gruen at jku.at> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: yes SystemRequirements: GNU Scientific Library version >= 1.8 Citation: topicmodels citation info Materials: NEWS In views: NaturalLanguageProcessing CRAN checks: topicmodels results Downloads: Reference manual: topicmodels.pdf Vignettes: topicmodels: An R Package for Fitting Topic Models Package source: topicmodels_0.2-4.tar.gz Windows binaries: r-devel: topicmodels_0.2-4.zip, r-release: topicmodels_0.2-4.zip, r-oldrel: topicmodels_0.2-4.zip OS X Mavericks binaries: r-release: topicmodels_0.2-4.tgz, r-oldrel: topicmodels_0.2-4.tgz Old sources: topicmodels archive Reverse dependencies: Reverse imports: ldatuning, textmineR Reverse suggests: LDAvis, quanteda, tidytext"	"null"	"null"	"Topic modeling interface to the C code developed by by David M. Blei for Topic Modeling (Latent Dirichlet Allocation (LDA), and Correlated Topics Models (CTM))."	"true"
"Natural Language Processing"	"syuzhet"	"https://cran.r-project.org/web/packages/syuzhet/index.html"	"Extracts sentiment from text using three different sentiment dictionaries."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"158"	"28"	"38"	"GitHub - mjockers/syuzhet: An R package for the extraction of sentiment and sentiment-based plot arcs from text Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 28 Star 158 Fork 38 mjockers/syuzhet Code Issues 2 Pull requests 0 Pulse Graphs An R package for the extraction of sentiment and sentiment-based plot arcs from text 86 commits 1 branch 2 releases 5 contributors HTML 94.8% R 5.2% HTML R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v1.0.0 v0.2.0 Nothing to show New pull request Latest commit 92943b8 Jun 6, 2016 mjockers Merge pull request #15 from Ironholds/master … cleanup Permalink Failed to load latest commit information. R cleanup Jun 3, 2016 inst Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 man Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 tests Version 1 update. See NEWS for details Apr 25, 2016 vignettes Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 .Rbuildignore rebuild for CRAN Apr 27, 2016 .gitignore added ds_store to gitignore Jan 28, 2015 .travis.yml Fixing travis.yml with java suggestion from benmarwick Feb 17, 2015 DESCRIPTION Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 NAMESPACE Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 NEWS Version 1 update. See NEWS for details Apr 25, 2016 README.md Version 1 update. See NEWS for details Apr 25, 2016 cran-comments.md Minor tweaks to be compliant with CRAN changes effective June 2015. F… Apr 27, 2016 syuzhet.Rproj Initial Commit Jan 28, 2015 README.md Syuzhet An R package for the extraction of sentiment and sentiment-based plot arcs from text. The name ""Syuzhet"" comes from the Russian Formalists Victor Shklovsky and Vladimir Propp who divided narrative into two components, the ""fabula"" and the ""syuzhet."" Syuzhet refers to the ""device"" or technique of a narrative whereas fabula is the chronological order of events. Syuzhet, therefore, is concerned with the manner in which the elements of the story (fabula) are organized (syuzhet). The Syuzhet package attempts to reveal the latent structure of narrative by means of sentiment analysis. Instead of detecting shifts in the topic or subject matter of the narrative (as Ben Schmidt has done), the Syuzhet package reveals the emotional shifts that serve as proxies for the narrative movement between conflict and conflict resolution. This was an idea inspired by the late Kurt Vonnegut in an essay titled ""Here's a Lesson in Creative Writing"" in his collection A Man Without A Country ( Random House, 2007). A lecture Vonnegut gave on this subject is available via youTube Thanks to Lincoln Mullen for early feedback on this package (see http://rpubs.com/lmullen/58030). Installation This package is now available on CRAN (http://cran.r-project.org/web/packages/syuzhet/). You can install the most current development version from gitHub using the devtools package: # install.packages(""devtools"") devtools::install_github(""mjockers/syuzhet"") References Syuzhet incorporates four sentiment lexicons: The default ""Syuzhet"" lexicon was developed in the Nebraska Literary Lab under the direction of Matthew L. Jockers The ""afinn"" lexicon was develoepd by Finn Arup Nielsen as the AFINN WORD DATABASE See: See http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010 The AFINN database of words is copyright protected and distributed under ""Open Database License (ODbL) v1.0"" http://www.opendatacommons.org/licenses/odbl/1.0/ or a similar copyleft license. The ""bing"" lexicon was develoepd by Minqing Hu and Bing Liu as the OPINION LEXICON See: http://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html The ""nrc"" lexicon was develoepd by Mohammad, Saif M. and Turney, Peter D. as the NRC EMOTION LEXICON. See: http://saifmohammad.com/WebPages/lexicons.html The NRC EMOTION LEXICON is released under the following terms of use: Terms of use: This lexicon can be used freely for research purposes. The papers listed below provide details of the creation and use of the lexicon. If you use a lexicon, then please cite the associated papers. If interested in commercial use of the lexicon, send email to the contact. If you use the lexicon in a product or application, then please credit the authors and NRC appropriately. Also, if you send us an email, we will be thrilled to know about how you have used the lexicon. National Research Council Canada (NRC) disclaims any responsibility for the use of the lexicon and does not provide technical support. However, the contact listed above will be happy to respond to queries and clarifications. Rather than redistributing the data, please direct interested parties to this page: http://www.purl.com/net/lexicons -- Crowdsourcing a Word-Emotion Association Lexicon, Saif Mohammad and Peter Turney, To Appear in Computational Intelligence, Wiley Blackwell Publishing Ltd. -- Tracking Sentiment in Mail: How Genders Differ on Emotional Axes, Saif Mohammad and Tony Yang, In Proceedings of the ACL 2011 Workshop on ACL 2011 Workshop on Computational Approaches to Subjectivity and Sentiment Analysis (WASSA), June 2011, Portland, OR. Paper (pdf) -- From Once Upon a Time to Happily Ever After: Tracking Emotions in Novels and Fairy Tales, Saif Mohammad, In Proceedings of the ACL 2011 Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities (LaTeCH), June 2011, Portland, OR. Paper -- Emotions Evoked by Common Words and Phrases: Using Mechanical Turk to Create an Emotion Lexicon"", Saif Mohammad and Peter Turney, In Proceedings of the NAACL-HLT 2010 Workshop on Computational Approaches to Analysis and Generation of Emotion in Text, June 2010, LA, California. Links to the papers are available here: http://www.purl.org/net/NRCemotionlexicon CONTACT INFORMATION Saif Mohammad Research Officer, National Research Council Canada email: saif.mohammad@nrc-cnrc.gc.ca phone: +1-613-993-0620 Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/mjockers/syuzhet"	"Extracts sentiment from text using three different sentiment dictionaries."	"true"
"Natural Language Processing"	"SnowballC"	"https://cran.rstudio.com/web/packages/SnowballC/index.html"	"Snowball stemmers based on the C libstemmer UTF-8 library."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package SnowballC SnowballC: Snowball stemmers based on the C libstemmer UTF-8 library An R interface to the C libstemmer library that implements Porter's word stemming algorithm for collapsing words to a common root to aid comparison of vocabulary. Currently supported languages are Danish, Dutch, English, Finnish, French, German, Hungarian, Italian, Norwegian, Portuguese, Romanian, Russian, Spanish, Swedish and Turkish. Version: 0.5.1 Published: 2014-08-09 Author: Milan Bouchet-Valat [aut, cre] Maintainer: Milan Bouchet-Valat <nalimilan at club.fr> BugReports: https://r-forge.r-project.org/tracker/?group_id=1437 License: BSD_2_clause + file LICENSE Copyright: Dr Martin Porter (2001) for the libstemmer C library, and Milan Bouchet-Valat (2013) for the R package contents URL: https://r-forge.r-project.org/projects/r-temis/ NeedsCompilation: yes Materials: NEWS In views: NaturalLanguageProcessing CRAN checks: SnowballC results Downloads: Reference manual: SnowballC.pdf Package source: SnowballC_0.5.1.tar.gz Windows binaries: r-devel: SnowballC_0.5.1.zip, r-release: SnowballC_0.5.1.zip, r-oldrel: SnowballC_0.5.1.zip OS X Mavericks binaries: r-release: SnowballC_0.5.1.tgz, r-oldrel: SnowballC_0.5.1.tgz Old sources: SnowballC archive Reverse dependencies: Reverse depends: lsa, RWBP Reverse imports: DeducerText, inpdfr, NLPutils, quanteda, textmineR, tokenizers Reverse suggests: koRpus, movMF, qdap, rattle, RcmdrPlugin.temis, stm, textreg, tm, topicmodels"	"null"	"null"	"Snowball stemmers based on the C libstemmer UTF-8 library."	"true"
"Natural Language Processing"	"quanteda"	"https://github.com/kbenoit/quanteda"	"R functions for Quantitative Analysis of Textual Data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"159"	"32"	"43"	"GitHub - kbenoit/quanteda: R functions for Quantitative Analysis of Textual Data Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 32 Star 159 Fork 43 kbenoit/quanteda Code Issues 47 Pull requests 2 Wiki Pulse Graphs R functions for Quantitative Analysis of Textual Data 1,950 commits 15 branches 4 releases Fetching contributors R 94.6% C++ 4.6% Python 0.8% R C++ Python Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bugfix_207_wordfish_plot bugfix_234_lint corpusToks dev-wordshoal dev_dfmPerformance dev_multiWordDictionaries dev_ngrams dev_plots_vignette dev_pos dev_selectFeatures_mt dev_tcm dev_unicodeNorm feature_207_plot_scaled_objects gh-pages master Nothing to show v0.9.7-17 v0.9.6-1 v0.9.4 v0.9.2 Nothing to show New pull request Latest commit 599556e Jul 7, 2016 kbenoit Fix #239 issue in phrasetotoken when phrases included a ""+"" Permalink Failed to load latest commit information. R Fix #239 issue in phrasetotoken when phrases included a ""+"" Jul 7, 2016 data Improve tokenize(x, removeHyphens = TRUE, what = ""fast(er|est)word"") Apr 2, 2016 demo remove nbsp in demo/quanteda.R Oct 31, 2015 images Reknit README.Rmd Jun 28, 2016 inst Fix #209 inefficient convert(x, to = ""stm) Jun 14, 2016 man Add punctuation argument to collocations() Jun 30, 2016 src Fix for Solaris Jun 21, 2016 tests Add tests to testKwic.R Jun 30, 2016 vignettes Tidy up plot.kwic additions for comparison dispersion plots May 24, 2016 .Rbuildignore Merge branch 'master' into testTextfile Jun 27, 2016 .gitignore tweak to .gitignore May 23, 2016 .travis.yml debugging travis.yml Dec 10, 2015 CONDUCT.md Tidy up NAMESPACE Jun 26, 2016 DESCRIPTION Fix #239 issue in phrasetotoken when phrases included a ""+"" Jul 7, 2016 NAMESPACE Tidy up NAMESPACE Jun 26, 2016 NEWS.md Fix #239 issue in phrasetotoken when phrases included a ""+"" Jul 7, 2016 README.Rmd Re-order README sections following ROpenSci guidelines Jun 21, 2016 README.md Reknit README.Rmd Jun 28, 2016 quanteda.pdf Update documentation for dictionary Jun 27, 2016 README.md quanteda: Quantitative Analysis of Textual Data See the Getting Started Vignette. An R package for managing and analyzing text, by Ken Benoit and Paul Nulty. quanteda makes it easy to manage texts in the form of a corpus, defined as a collection of texts that includes document-level variables specific to each text, as well as meta-data for documents and for the collection as a whole. quanteda includes tools to make it easy and fast to manuipulate the texts in a corpus, by performing the most common natural language processing tasks simply and quickly, such as tokenizing, stemming, or forming ngrams. quanteda's functions for tokenizing texts and forming multiple tokenized documents into a document-feature matrix are both extremely fast and extremely simple to use. quanteda can segment texts easily by words, paragraphs, sentences, or even user-supplied delimiters and tags. Built on the text processing functions in the stringi package, which is in turn built on C++ implementation of the ICU libraries for Unicode text handling, quanteda pays special attention to fast and correct implementation of Unicode and the handling of text in any character set, following conversion internally to UTF-8. quanteda is built for efficiency and speed, through its design around three infrastructures: the stringi package for text processing, the data.table package for indexing large documents efficiently, and the Matrix package for sparse matrix objects. If you can fit it into memory, quanteda will handle it quickly. (And eventually, we will make it possible to process objects even larger than available memory.) quanteda is principally designed to allow users a fast and convenient method to go from a corpus of texts to a selected matrix of documents by features, after defining and selecting the documents and features. The package makes it easy to redefine documents, for instance by splitting them into sentences or paragraphs, or by tags, as well as to group them into larger documents by document variables, or to subset them based on logical conditions or combinations of document variables. The package also implements common NLP feature selection functions, such as removing stopwords and stemming in numerous languages, selecting words found in dictionaries, treating words as equivalent based on a user-defined ""thesaurus"", and trimming and weighting features based on document frequency, feature frequency, and related measures such as tf-idf. Once constructed, a quanteda ""dfm"""" can be easily analyzed using either quanteda's built-in tools for scaling document positions, or used with a number of other text analytic tools, such as: topic models (including converters for direct use with the topicmodels, LDA, and stm packages) document scaling (using quanteda's own functions for the ""wordfish"" and ""Wordscores"" models, direct use with the ca package for correspondence analysis, or scaling with the austin package) machine learning through a variety of other packages that take matrix or matrix-like inputs. Additional features of quanteda include: the ability to explore texts using key-words-in-context; fast computation of a variety of readability indexes; fast computation of a variety of lexical diversity measures; quick computation of word or document association measures, for clustering or to compute similarity scores for other purposes; and a comprehensive suite of descriptive statistics on text such as the number of sentences, words, characters, or syllables per document. Planned features coming soon to quanteda are: bootstrapping methods for texts that makes it easy to resample texts from pre-defined units, to facilitate computation of confidence intervals on textual statistics using techniques of non-parametric bootstrapping, but applied to the original texts as data. expansion of predictive and analytic methods called through the standard interface called textmodel(). Current model types include correspondence analysis, ""Wordscores"", ""Wordfish"", and Naive Bayes. Addition of settings to corpus projects, that will propogate through downstream objects. Addition of a history that will propogate through downstream objects. Acknowledgements: This research was supported by the European Research Council grant ERC-2011-StG 283794-QUANTESS. How to Install As of version 0.8.0, the GitHub master repository will always contain the development version of quanteda, while the CRAN version will contain the latest ""stable"" version. You therefore have two options for installing the package: From CRAN, using your R package installer, or simply install.packages(""quanteda"") (For the development version) From GitHub, using # devtools packaged required to install quanteda from Github devtools::install_github(""kbenoit/quanteda"") Because this compiles some C++ source code, you will need a compiler installed. If you are using a Windows platform, this means you will need also to install the Rtools software available from CRAN. If you are using OS X, you will need to to install XCode, available for free from the App Store, or if you prefer a lighter footprint set of tools, just the Xcode command line tools, using the command xcode-select --install from the Terminal. (Optional) You can install some additional corpus data from quantedaData using devtools::install_github(""kbenoit/quantedaData"") Example usage library(quanteda) #> quanteda version 0.9.7.7 #>  #> Attaching package: 'quanteda' #> The following object is masked from 'package:base': #>  #>     sample # create a corpus from the immigration texts from UK party platforms uk2010immigCorpus <- corpus(ukimmigTexts,                             docvars=data.frame(party=names(ukimmigTexts)),                             notes=""Immigration-related sections of 2010 UK party manifestos"",                             enc=""UTF-8"") #> Warning in corpus.character(ukimmigTexts, docvars = data.frame(party = #> names(ukimmigTexts)), : Argument enc not used. uk2010immigCorpus #> Corpus consisting of 9 documents and 1 docvar. summary(uk2010immigCorpus, showmeta=TRUE) #> Corpus consisting of 9 documents. #>  #>          Text Types Tokens Sentences        party #>           BNP  1126   3330        88          BNP #>     Coalition   144    268         4    Coalition #>  Conservative   252    503        15 Conservative #>        Greens   325    687        21       Greens #>        Labour   296    703        29       Labour #>        LibDem   257    499        14       LibDem #>            PC    80    118         5           PC #>           SNP    90    136         4          SNP #>          UKIP   346    739        27         UKIP #>  #> Source:  /Users/kbenoit/Dropbox/GitHub/quanteda/* on x86_64 by kbenoit #> Created: Tue Jun 28 11:25:31 2016 #> Notes:   Immigration-related sections of 2010 UK party manifestos  # key words in context for ""deport"", 3 words of context kwic(uk2010immigCorpus, ""deport"", 3) #>                        contextPre keyword                contextPost #>  [BNP, 159]        The BNP will [  deport ] all foreigners convicted #> [BNP, 1970]                . 2. [  Deport ] all illegal immigrants   #> [BNP, 1976] immigrants We shall [  deport ] all illegal immigrants   #> [BNP, 2621]  Criminals We shall [  deport ] all criminal entrants  # create a dfm, removing stopwords mydfm <- dfm(uk2010immigCorpus, ignoredFeatures=c(""will"", stopwords(""english""))) #> Creating a dfm from a corpus ... #>    ... lowercasing #>    ... tokenizing #>    ... indexing documents: 9 documents #>    ... indexing features: 1,585 feature types #>    ... removed 97 features, from 175 supplied (glob) feature types #>    ... created a 9 x 1489 sparse dfm #>    ... complete.  #> Elapsed time: 0.023 seconds. dim(mydfm)              # basic dimensions of the dfm #> [1]    9 1489 topfeatures(mydfm, 20)  # 20 top words #> immigration     british      people      asylum     britain          uk  #>          66          37          35          29          28          27  #>      system  population     country         new  immigrants      ensure  #>          27          21          20          19          17          17  #>       shall citizenship      social    national         bnp     illegal  #>          17          16          14          14          13          13  #>        work     percent  #>          13          12 plot(mydfm, min.freq = 6, random.order = FALSE)             # word cloud     Documentation In-depth tutorials in the form of a gitbook will be available here here. Examples for any function can also be seen using (for instance, for corpus()): example(corpus) There are also some demo functions that show off some of the package capabilities, such as demo(quanteda). Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/kbenoit/quanteda"	"R functions for Quantitative Analysis of Textual Data."	"true"
"Lists"	"Topic Models"	"https://github.com/trinker/topicmodels_learning"	"Topic Models learning and R related resources."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"51"	"10"	"12"	"GitHub - trinker/topicmodels_learning: A repository of learning & R resources related to topic models Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 10 Star 51 Fork 12 trinker/topicmodels_learning Code Issues 1 Pull requests 1 Pulse Graphs A repository of learning & R resources related to topic models 88 commits 1 branch 0 releases 2 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 365a49b Jan 30, 2016 trinker Update README.Rmd Permalink Failed to load latest commit information. articles added mimno Dec 21, 2015 data added jockers Dec 21, 2015 functions updated Dec 23, 2015 inst/figure pushed new seed Dec 23, 2015 presentations corrected misspelling BLei's name Dec 20, 2015 scripts yep Dec 23, 2015 stopword_lists added stopword lists Dec 21, 2015 .gitignore moved functions location Dec 22, 2015 README.Rmd Update README.Rmd Jan 30, 2016 README.md Update README.md Jan 30, 2016 topicmodels_learning.Rproj first commit Dec 20, 2015 README.md Topic Models Learning and R Resources This is a collection documenting the resources I find related to topic models with an R flavored focus. A topic model is a type of generative model used to ""discover"" latent topics that compose a corpus or collection of documents. Typically topic modeling is used on a collection of text documents but can be used for other modes including use as caption generation for images. Table of Contents Just the Essentials Key Players Videos Introductory Theory Visualization Articles Applied Theoretical Websites & Blogs R Resources Package Comparisons R Specific References Example Modeling Topic Modeling R Demo topicmodels Package Contributing Just the Essentials This is my run down of the minimal readings, websites, videos, & scripts the reader needs to become familiar with topic modeling. The list is in an order I believe will be of greatest use and contains a nice mix of introduction, theory, application, and interpretation. As you want to learn more about topic modeling, the other sections will become more useful. Boyd-Graber, J. (2013). Computational Linguistics I: Topic Modeling Underwood, T. (2012). Topic Modeling Made Just Simple Enough Weingart, S. (2012). Topic Modeling for Humanists: A Guided Tour Blei, D. M. (2012). Probabilistic topic models. Communications of the ACM, (55)4, 77-84. doi:10.1145/2133806.2133826 inkhorn82 (2014). A Delicious Analysis! (aka topic modelling using recipes) (CODE) Grüen, B. & Hornik, K. (2011). topicmodels: An R Package for Fitting Topic Models.. Journal of Statistical Software, 40(13), 1-30. Marwick, B. (2014a). The input parameters for using latent Dirichlet allocation Tang, J., Meng, Z., Nguyen, X. , Mei, Q. , & Zhang, M. (2014). Understanding the limiting factors of topic modeling via posterior contraction analysis. In 31 st International Conference on Machine Learning, 190-198. Sievert, C. (2014). LDAvis: A method for visualizing and interpreting topic models Rhody, L. M. (2012). Some Assembly Required: Understanding and Interpreting Topics in LDA Models of Figurative Language Rinker, T.W. (2015). R Script: Example Topic Model Analysis Key Players Papadimitriou, Raghavan, Tamaki & Vempala, Santosh (1997) first introduced the notion of topic modeling in their ""Latent Semantic Indexing: A probabilistic analysis"". Thomas Hofmann (1999) developed ""Probabilistic latent semantic indexing"". Blei, Ng, & Jordan (2003) proposed latent Dirichlet allocation (LDA) as a means of modeling documents with multiple topics but assumes the topic are uncorrelated. Blei & Lafferty (2007) proposed correlated topics model (CTM), extending LDA to allow for correlations between topics. Roberts, Stewart, Tingley, & Airoldi (2013) propose a Structural Topic Model (STM), allowing the inclusion of meta-data in the modeling process. Videos Introductory Boyd-Graber, J. (2013). Computational Linguistics I: Topic Modeling Theory Blei, D. (2007) Modeling Science: Dynamic Topic Models of Scholarly Research Blei, D. (2009) Topic Models: Parts I & II (Lecture Notes) Jordan, M. (2014) A Short History of Topic Models Visualization Sievert, C. (2014) LDAvis: A method for visualizing and interpreting topic models Maybe, B. (2015) SavvySharpa: Visualizing Topic Models Articles Applied Marwick, B. 2013. Discovery of Emergent Issues and Controversies in Anthropology Using Text Mining, Topic Modeling, and Social Network Analysis of Microblog Content. In Yanchang Zhao, Yonghua Cen (eds) Data Mining Applications with R. Elsevier. p. 63-93 Newman, D.J. & Block, S. (2006). Probabilistic topic decomposition of an eighteenth-century American newspaper. Journal of the American Society for Information Science and Technology. 57(6), 753-767. doi:10.1002/asi.v57:6 Theoretical Blei, D. M. (2012). Probabilistic topic models. Communications of the ACM, (55)4, 77-84. doi:10.1145/2133806.2133826 Blei, D. M. & Lafferty, J. D. (2007) A correlated topic model of Science. The Annals of Applied Statistics 1(1), 17-35. doi:10.1214/07-AOAS114 Blei, D. M. & Lafferty, J. D. (2009) Topic models. In A Srivastava, M Sahami (eds.), Text mining: classification, clustering, and applications. Chapman & Hall/CRC Press. 71-93. Blei, D. M. & McAuliffe, J. (2008). Supervised topic models. In Advances in Neural Information Processing Systems 20, 1-8. Blei, D. M., Ng, A.Y., & Jordan, M.I. (2003). Latent Dirichlet Allocation. Journal of Machine Learning Research, 3, 993-1022. Chang, J., Boyd-Graber, J. , Wang, C., Gerrish, S., & Blei. D. (2009). Reading tea leaves: How humans interpret topic models. In Neural Information Processing Systems. Griffiths, T.L. & Steyvers, M. (2004). Finding Scientific Topics. Proceedings of the National Academy of Sciences of the United States of America, 101, 5228-5235. Griffiths, T.L., Steyvers, M., & Tenenbaum, J.B.T. (2007). Topics in Semantic Representation. Psychological Review, 114(2), 211-244. Grüen, B. & Hornik, K. (2011). topicmodels: An R Package for Fitting Topic Models.. Journal of Statistical Software, 40(13), 1-30. Mimno, D. & A. Mccallum. (2007). Organizing the OCA: learning faceted subjects from a library of digital books. In Joint Conference on Digital Libraries. ACM Press, New York, NY, 376â€“385. Ponweiser, M. (2012). Latent Dirichlet Allocation in R (Diploma Thesis). Vienna University of Economics and Business, Vienna Roberts M.E., Stewart B.M., Tingley D., & Airoldi E.M. (2013) The Structural Topic Model and Applied Social Science. Advances in Neural Information Processing Systems Workshop on Topic Models: Computation, Application, and Evaluation, 1-4. Roberts, M., Stewart, B., Tingley, D., Lucas, C., Leder-Luis, J., Gadarian, S., Albertson, B., et al. (2014). Structural topic models for open ended survey responses. American Journal of Political Science, American Journal of Political Science, 58(4), 1064-1082. Roberts, M., Stewart, B., Tingley, D. (n.d.). stm: R Package for Structural Topic Models, 1-49. Sievert, C. & Shirley, K. E. (2014a). LDAvis: A Method for Visualizing and Interpreting Topics. in Proceedings of the Workshop on Interactive Language Learning, Visualization, and Interfaces 63-70. Steyvers, M. & Griffiths, T. (2007). Probabilistic topic models. In T. Landauer, D McNamara, S. Dennis, and W. Kintsch (eds), Latent Semantic Analysis: A Road to Meaning. Laurence Erlbaum Taddy, M.A. (2012). On Estimation and Selection for Topic Models In Proceedings of the 15th International Conference on Artificial Intelligence and Statistics (AISTATS 2012), 1184-1193. Tang, J., Meng, Z., Nguyen, X. , Mei, Q. , & Zhang, M. (2014). Understanding the limiting factors of topic modeling via posterior contraction analysis. In 31 st International Conference on Machine Learning, 190-198. Websites & Blogs Blei, D. (n.d.). Topic Modeling Jockers, M.L. (2013). ""Secret"" Recipe for Topic Modeling Themes Jones, T. (n.d.). Topic Models Reading List Marwick, B. (2014a). The input parameters for using latent Dirichlet allocation Marwick, B. (2014b). Topic models: cross validation with loglikelihood or perplexity Rhody, L. M. (2012). Some Assembly Required: Understanding and Interpreting Topics in LDA Models of Figurative Language Schmidt, B.M. (2012). Words Alone: Dismantling Topic Models in the Humanities Underwood, T. (2012a). Topic Modeling Made Just Simple Enough Underwood, T. (2012b). What kinds of ""topics"" does topic modeling actually produce? Weingart, S. (2012). Topic Modeling for Humanists: A Guided Tour Weingart, S. (2011). Topic Modeling and Network Analysis R Resources Package Comparisons Package Functionality Pluses Author R Language Interface lda* Collapsed Gibbs for LDA Graphing utilities Chang R topicmodels LDA and CTM Follows Blei's implementation; great vignette; takes C DTM stm Model w/ meta-data Great documentation; nice visualization Roberts, Stewart, & Tingley C LDAvis Interactive visualization Aids in model interpretation Sievert & Shirley R + Shiny mallet** LDA MALLET is well known Mimno Java *StackExchange discussion of lda vs. topicmodels **Setting Up MALLET R Specific References Chang J. (2010). lda: Collapsed Gibbs Sampling Methods for Topic Models. http://CRAN.R-project.org/package=lda. Grüen, B. & Hornik, K. (2011). topicmodels: An R Package for Fitting Topic Models.. Journal of Statistical Software, 40(13), 1-30. Mimno, D. (2013). vignette-mallet: A wrapper around the Java machine learning tool MALLET. https://CRAN.R-project.org/package=mallet Ponweiser, M. (2012). Latent Dirichlet Allocation in R (Diploma Thesis). Vienna University of Economics and Business, Vienna. Roberts, M., Stewart, B., Tingley, D. (n.d.). stm: R Package for Structural Topic Models, 1-49. Sievert, C. & Shirley, K. E. (2014a). LDAvis: A Method for Visualizing and Interpreting Topics. Proceedings of the Workshop on Interactive Language Learning, Visualization, and Interfaces 63-70. Sievert, C. & Shirley, K. E. (2014b). Vignette: LDAvis details. 1-5. Example Modeling Awati, K. (2015). A gentle introduction to topic modeling using R Dubins, M. (2013). Topic Modeling in Python and R: A Rather Nosy Analysis of the Enron Email Corpus Goodrich, B. (2015) Topic Modeling Twitter Using R (CODE) inkhorn82 (2014). A Delicious Analysis! (aka topic modelling using recipes) (CODE) Jockers, M.L. (2014).Introduction to Text Analysis and Topic Modeling with R Medina, L. (2015). Conspiracy Theories - Topic Modeling & Keyword Extraction Sievert, C. (n.d.). A topic model for movie reviews Sievert, C. (2014). Topic Modeling In R Topic Modeling R Demo topicmodels Package The .R script for this demonstration can be downloaded from scripts/Example_topic_model_analysis.R Install/Load Tools & Data if (!require(""pacman"")) install.packages(""pacman"") pacman::p_load_gh(""trinker/gofastr"") pacman::p_load(tm, topicmodels, dplyr, tidyr, igraph, devtools, LDAvis, ggplot2)  ## Source topicmodels2LDAvis & optimal_k functions invisible(lapply(     file.path(         ""https://raw.githubusercontent.com/trinker/topicmodels_learning/master/functions"",          c(""topicmodels2LDAvis.R"", ""optimal_k.R"")     ),     devtools::source_url ))  ## SHA-1 hash of file is 5ac52af21ce36dfe8f529b4fe77568ced9307cf0 ## SHA-1 hash of file is 7f0ab64a94948c8b60ba29dddf799e3f6c423435  data(presidential_debates_2012)  Generate Stopwords stops <- c(         tm::stopwords(""english""),         tm::stopwords(""SMART""),         ""governor"", ""president"", ""mister"", ""obama"",""romney""     ) %>%     gofastr::prep_stopwords()   Create the DocumentTermMatrix doc_term_mat <- presidential_debates_2012 %>%     with(gofastr::q_dtm_stem(dialogue, paste(person, time, sep = ""_""))) %>%                gofastr::remove_stopwords(stops, stem=TRUE) %>%                                                         gofastr::filter_tf_idf() %>%     gofastr::filter_documents()   Control List control <- list(burnin = 500, iter = 1000, keep = 100, seed = 2500)  Determine Optimal Number of Topics The plot below shows the harmonic mean of the log likelihoods against k (number of topics). (k <- optimal_k(doc_term_mat, 40, control = control))  ##  ## Grab a cup of coffee this could take a while...  ## 10 of 40 iterations (Current: 08:54:32; Elapsed: .2 mins) ## 20 of 40 iterations (Current: 08:55:07; Elapsed: .8 mins; Remaining: ~2.3 mins) ## 30 of 40 iterations (Current: 08:56:03; Elapsed: 1.7 mins; Remaining: ~1.3 mins) ## 40 of 40 iterations (Current: 08:57:30; Elapsed: 3.2 mins; Remaining: ~0 mins) ## Optimal number of topics = 20  It appears the optimal number of topics is ~k = 20. Run the Model control[[""seed""]] <- 100 lda_model <- topicmodels::LDA(doc_term_mat, k=as.numeric(k), method = ""Gibbs"",      control = control)  Plot the Topics Per Person & Time topics <- topicmodels::posterior(lda_model, doc_term_mat)[[""topics""]] topic_dat <- dplyr::add_rownames(as.data.frame(topics), ""Person_Time"") colnames(topic_dat)[-1] <- apply(terms(lda_model, 10), 2, paste, collapse = "", "")  tidyr::gather(topic_dat, Topic, Proportion, -c(Person_Time)) %>%     tidyr::separate(Person_Time, c(""Person"", ""Time""), sep = ""_"") %>%     dplyr::mutate(Person = factor(Person,          levels = c(""OBAMA"", ""ROMNEY"", ""LEHRER"", ""SCHIEFFER"", ""CROWLEY"", ""QUESTION"" ))     ) %>%     ggplot2::ggplot(ggplot2::aes(weight=Proportion, x=Topic, fill=Topic)) +         ggplot2::geom_bar() +         ggplot2::coord_flip() +         ggplot2::facet_grid(Person~Time) +         ggplot2::guides(fill=FALSE) +         ggplot2::xlab(""Proportion"")  Plot the Topics Matrix as a Heatmap heatmap(topics, scale = ""none"")  Network of the Word Distributions Over Topics (Topic Relation) post <- topicmodels::posterior(lda_model)  cor_mat <- cor(t(post[[""terms""]])) cor_mat[ cor_mat < .05 ] <- 0 diag(cor_mat) <- 0  graph <- graph.adjacency(cor_mat, weighted=TRUE, mode=""lower"") graph <- delete.edges(graph, E(graph)[ weight < 0.05])  E(graph)$edge.width <- E(graph)$weight*20 V(graph)$label <- paste(""Topic"", V(graph)) V(graph)$size <- colSums(post[[""topics""]]) * 15  par(mar=c(0, 0, 3, 0)) set.seed(110) plot.igraph(graph, edge.width = E(graph)$edge.width,      edge.color = ""orange"", vertex.color = ""orange"",      vertex.frame.color = NA, vertex.label.color = ""grey30"") title(""Strength Between Topics Based On Word Probabilities"", cex.main=.8)  Network of the Topics Over Dcouments (Topic Relation) minval <- .1 topic_mat <- topicmodels::posterior(lda_model)[[""topics""]]  graph <- graph_from_incidence_matrix(topic_mat, weighted=TRUE) graph <- delete.edges(graph, E(graph)[ weight < minval])  E(graph)$edge.width <- E(graph)$weight*17 E(graph)$color <- ""blue"" V(graph)$color <- ifelse(grepl(""^\\d+$"", V(graph)$name), ""grey75"", ""orange"") V(graph)$frame.color <- NA V(graph)$label <- ifelse(grepl(""^\\d+$"", V(graph)$name), paste(""topic"", V(graph)$name), gsub(""_"", ""\n"", V(graph)$name)) V(graph)$size <- c(rep(10, nrow(topic_mat)), colSums(topic_mat) * 20) V(graph)$label.color <- ifelse(grepl(""^\\d+$"", V(graph)$name), ""red"", ""grey30"")  par(mar=c(0, 0, 3, 0)) set.seed(369) plot.igraph(graph, edge.width = E(graph)$edge.width,      vertex.color = adjustcolor(V(graph)$color, alpha.f = .4)) title(""Topic & Document Relationships"", cex.main=.8)  LDAvis of Model The output from LDAvis is not easily embedded within an R markdown document, however, the reader may see the results here. lda_model %>%     topicmodels2LDAvis() %>%     LDAvis::serVis()  Apply Model to New Data ## Create the DocumentTermMatrix for New Data doc_term_mat2 <- partial_republican_debates_2015 %>%     with(gofastr::q_dtm_stem(dialogue, paste(person, location, sep = ""_""))) %>%                gofastr::remove_stopwords(stops, stem=TRUE) %>%                                                         gofastr::filter_tf_idf() %>%     gofastr::filter_documents()    ## Update Control List control2 <- control control2[[""estimate.beta""]] <- FALSE   ## Run the Model for New Data lda_model2 <- topicmodels::LDA(doc_term_mat2, k = k, model = lda_model,      control = list(seed = 100, estimate.beta = FALSE))   ## Plot the Topics Per Person & Location for New Data topics2 <- topicmodels::posterior(lda_model2, doc_term_mat2)[[""topics""]] topic_dat2 <- dplyr::add_rownames(as.data.frame(topics2), ""Person_Location"") colnames(topic_dat2)[-1] <- apply(terms(lda_model2, 10), 2, paste, collapse = "", "")  tidyr::gather(topic_dat2, Topic, Proportion, -c(Person_Location)) %>%     tidyr::separate(Person_Location, c(""Person"", ""Location""), sep = ""_"") %>%     ggplot2::ggplot(ggplot2::aes(weight=Proportion, x=Topic, fill=Topic)) +         ggplot2::geom_bar() +         ggplot2::coord_flip() +         ggplot2::facet_grid(Person~Location) +         ggplot2::guides(fill=FALSE) +         ggplot2::xlab(""Proportion"")   ## LDAvis of Model for New Data lda_model2 %>%     topicmodels2LDAvis() %>%     LDAvis::serVis()  Contributing You are welcome to: submit suggestions and bug-reports at: https://github.com/trinker/topicmodels_learning/issues send a pull request on: https://github.com/trinker/topicmodels_learning/ compose a friendly e-mail to: tyler.rinker@gmail.com Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/trinker/topicmodels_learning"	"Topic Models learning and R related resources."	"true"
"Lists"	"Natural Language Processing"	"https://github.com/BZRLC/R-notes/blob/master/NLP/readme.md"	"NLP related resources in R. @Chinese"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1"	"1"	"0"	"R-notes/readme.md at master · BZRLC/R-notes · GitHub Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 1 Star 1 Fork 0 BZRLC/R-notes Code Issues 0 Pull requests 0 Pulse Graphs Permalink Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show Find file Copy path R-notes/NLP/readme.md Fetching contributors… Cannot retrieve contributors at this time Raw Blame History 82 lines (60 sloc) 4.66 KB Awesome NLP in R 小赵搜集的关于自然语言处理相关的R包： 分词相关的包 jiebaR cppjieba THULAC 向量化 text2vec wordVectors 文本回归与去重 textreg textreuse stringdist 文本定量分析与主题模型 quanteda topicmodels lda LDAvis mallet stm Awesome-R的补充 tm openNLP koRpus zipfR NLP syuzhet SnowballC CRAN Task View Chinese Text Segmentation jiebaR - 基于c++的R分词包，支持keywords,simhash,海明距离...(首推) cppjieba - c++ 分词工具 THULAC - 一个高效的中文词法分析工具包,清华大学荣誉出品,目前只有持Python，c++,java. Document-Term Matrix text2vec - c++ 写的,基于standford的glove 的API,占用内存小.vignette：text2vec 0.3 GloVe vs word2vec revisited wordVectors - An R package for building and exploring Word2Vec models.基于李舰封装word2vec里面的C代码,需要注意的目前在win8下不能安装，其他的环境都可以. Text Regression and Document Similarity textreg - n-Gram Text Regression, aka Concise Comparative Summarization textreuse - provides classes and functions to detect document similarity and text reuse in text corpora. stringdist - Approximate String Matching and String Distance Functions.可以计算hamming distance等等... Quantitative Analysis of Textual Data quanteda - c++写的，分析基于""dfm"",依赖stingi,data.table等包，效率还是比较高的；另外还需要加载依赖的主题模型的包,例如lda,topicmodels等.快速上手文档; github地址. topicmodels - Provides an interface to the C code for Latent Dirichlet Allocation (LDA) models and Correlated Topics Models (CTM) 更多请看这里 lda - Implements latent Dirichlet allocation (LDA) and related models. LDAvis - Interactive visualization of topic models. mallet - This package allows you to train topic models in mallet and load results directly into R.基于JAVA stm - Estimation of the Structural Topic Model.基于C 主题模型可以参考这里的比较和例子：https://github.com/trinker/topicmodels_learning#r-resources Implemention from Awesome R Packages for Natural Language Processing. tm - A comprehensive text mining framework for R. openNLP - Apache OpenNLP Tools Interface. koRpus - An R Package for Text Analysis. zipfR - Statistical models for word frequency distributions. NLP - Basic functions for Natural Language Processing. syuzhet - Extracts sentiment from text using three different sentiment dictionaries. SnowballC - Snowball stemmers based on the C libstemmer UTF-8 library. CRAN Task View https://cran.r-project.org/web/views/NaturalLanguageProcessing.html Jump to Line Go Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/BZRLC/R-notes/blob/master/NLP/readme.md"	"NLP related resources in R. @Chinese"	"true"
"Bayesian"	"coda"	"http://cran.r-project.org/web/packages/coda/index.html"	"Output analysis and diagnostics for MCMC."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package coda coda: Output Analysis and Diagnostics for MCMC Provides functions for summarizing and plotting the output from Markov Chain Monte Carlo (MCMC) simulations, as well as diagnostic tests of convergence to the equilibrium distribution of the Markov chain. Version: 0.18-1 Depends: R (≥ 2.14.0) Imports: lattice Published: 2015-10-16 Author: Martyn Plummer [aut, cre, trl], Nicky Best [aut], Kate Cowles [aut], Karen Vines [aut], Deepayan Sarkar [aut], Douglas Bates [aut], Russell Almond [aut], Arni Magnusson [aut] coda author details Maintainer: Martyn Plummer <plummerm at iarc.fr> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no Citation: coda citation info Materials: README ChangeLog In views: Bayesian, gR CRAN checks: coda results Downloads: Reference manual: coda.pdf Package source: coda_0.18-1.tar.gz Windows binaries: r-devel: coda_0.18-1.zip, r-release: coda_0.18-1.zip, r-oldrel: coda_0.18-1.zip OS X Mavericks binaries: r-release: coda_0.18-1.tgz, r-oldrel: coda_0.18-1.tgz Old sources: coda archive Reverse dependencies: Reverse depends: adaptMCMC, adaptsmoFMRI, anominate, B2Z, BANOVA, bayesDccGarch, BayesFactor, BayesLCA, bayespref, BayesSAE, bayesSurv, Bayesthresh, bayou, BAYSTAR, Bergm, bisoreg, bmk, boral, coalescentMCMC, codadiags, cplm, cubfits, dclone, eiPack, elrm, endorse, FME, gemtc, HelpersMG, HSROC, HybridMC, hzar, iFad, InSilicoVA, lira, MasterBayes, mcgibbsit, MCMCglmm, MCMC.OTU, MCMCpack, mcmcplots, MCMC.qpcr, mcsm, metamisc, ocomposition, PhaseType, phcfM, phenology, popReconstruct, prevalence, R2MLwiN, R2WinBUGS, ramps, relevent, rjags, season, siar, SPACECAP, spatial.gev.bma, spBayes, spTDyn, stochvol, superdiag, TESS, Ultimixt, WMCapacity, zoib Reverse imports: agRee, arm, auRoc, BaBooN, BaM, BANFF, BayesComm, bayescount, bayesGARCH, bayesLife, bayesmix, BayesSingleSub, bayesTFR, BayesX, Bchron, bdpopt, BDWreg, BEST, bfa, BPEC, brms, BRugs, btergm, btf, BTSPAS, CARBayes, CARBayesST, conting, dcmle, DeLorean, DrBats, EasyMARK, eggCounts, eiwild, emdbook, EpiBayes, ergm, ergm.ego, evolqg, evolvability, geiger, geoBayes, GERGM, glmBfp, hierarchicalDS, HLSM, hSDM, idem, IFP, immer, jagsUI, kobe, latentnet, list, lsmeans, marked, MfUSampler, mixAK, MixSIAR, morse, MplusAutomation, MRH, MSBVAR, multimark, networkTomography, nLTT, pcnetmeta, plotMCMC, polySegratioMM, pomp, ptycho, PVAClone, qrjoint, R2admb, R2jags, R2OpenBUGS, r4ss, RcmdrPlugin.RMTCJags, redist, RMark, rr, runjags, rwty, SAVE, scape, SeqFeatR, simmr, sirt, sisus, slfm, sns, sparsereg, spBayesSurv, spdep, spikeSlabGAM, spTimer, sspse, stocc, TBSSurvival, tergm, tglm, Zelig, zic Reverse suggests: AdMit, amen, BayHaz, bcp, bglm, bnormnlr, broom, CARrampsOcl, DiffusionRgqd, DiffusionRimp, DiffusionRjgqd, embryogrowth, gap, GeneFeST, geoCount, geoRglm, ggmcmc, HDInterval, ltbayes, Luminescence, MethComp, polyfreqs, pscl, R2BayesX, rbugs, SALTSampler, shinystan, surveillance, systemicrisk, zoo"	"null"	"null"	"Output analysis and diagnostics for MCMC."	"true"
"Bayesian"	"mcmc"	"http://cran.r-project.org/web/packages/mcmc/index.html"	"Markov Chain Monte Carlo."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"6"	"2"	"2"	"GitHub - cjgeyer/mcmc: R package mcmc (public version on CRAN) Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 2 Star 6 Fork 2 cjgeyer/mcmc Code Issues 1 Pull requests 0 Pulse Graphs R package mcmc (public version on CRAN) 20 commits 3 branches 0 releases Fetching contributors C 44.3% R 40.5% TeX 15.2% C R TeX Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags hit-and-run master morph Nothing to show Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. package .gitignore README README This is the source tree for the R contributed package mcmc. The version for users is at CRAN (http://cran.r-project.org/package=mcmc)  This package suggests packages Iso and xtable.  So if don't have need to add to R.  In R do      install.packages(c(""Iso"", ""xtable""))  The PDF's for the vignettes are not in the git repo. In order to avoid errors in check must first do      pushd package/mcmc/inst/doc     make R_HOME=`R RHOME`     popd  To check do      cd package     rm -rf mcmc/src/*.{o,so}     R CMD check mcmc  Since one of the vignettes takes a long time, probably want      rm -rf mcmc/src/*.{o,so}     R CMD check --no-vignettes mcmc  except for one last check before push   Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/cjgeyer/mcmc"	"Markov Chain Monte Carlo."	"true"
"Bayesian"	"MCMCpack"	"http://mcmcpack.berkeley.edu/"	"Markov chain Monte Carlo (MCMC) Package."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"MCMCpack Home Installation Documentation Development Acknowledgments MCMCpack is a software package designed to allow users to perform Bayesian inference via Markov chain Monte Carlo (MCMC). More specifically, MCMCpack is a formal R package. R is an extremely powerful language and environment for statistical computation and graphics. The lead developers of the MCMCpack project are Andrew D.Martin (University of Michigan), Kevin M. Quinn (UC Berkeley), and Jong Hee Park (Seoul National University). We assume that users of this package will be familiar with R. Currently MCMCpack allows the user to perform Bayesian inference via simulation from the posterior distributions of the following models: linear regression (with Gaussian errors), Quinn's dynamic ecological inference model, Wakefield's hierarchial ecological inference model, a probit model, a logistic regression model, a one-dimensional item response theory model, a K-dimensional item response theory model, a robust k-dimensional item response theory model, a Normal theory factor analysis model, a mixed response factor analysis model, an ordinal item response theory model, a Poisson regression, a Poisson changepoint model, a tobit regression, a multinomial logit model, an SVD regression model, and an ordered probit model. The package also contains densities and random number generators for commonly used distributions that are not part of the standard R distribution, a general purpose Metropolis sampling algorithm, functions to compute Bayes factors for some models, a handful of teaching models, and some data visualization tools for ecological inference. To maximize computational efficiency, the actual sampling for each model is done in compiled C++ using the Scythe Statistical Library. The posterior samples returned by each function are returned as mcmc objects, which can easily be summarized and manipulated by the coda package. Please consult the coda documentation for a comprehensive list of functions that can be used to analyze the posterior sample."	"null"	"null"	"Markov chain Monte Carlo (MCMC) Package."	"true"
"Bayesian"	"R2WinBUGS"	"http://cran.r-project.org/web/packages/R2WinBUGS/index.html"	"Running WinBUGS and OpenBUGS from R / S-PLUS."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package R2WinBUGS R2WinBUGS: Running 'WinBUGS' and 'OpenBUGS' from 'R' / 'S-PLUS' Invoke a 'BUGS' model in 'OpenBUGS' or 'WinBUGS', a class ""bugs"" for 'BUGS' results and functions to work with that class. Function write.model() allows a 'BUGS' model file to be written. The class and auxiliary functions could be used with other MCMC programs, including 'JAGS'. Version: 2.1-21 Depends: R (≥ 2.13.0), coda (≥ 0.11-0), boot Imports: utils, stats, graphics Suggests: BRugs (≥ 0.3-2) Published: 2015-07-30 Author: originally written by Andrew Gelman; changes and packaged by Sibylle Sturtz and Uwe Ligges. With considerable contributions by Gregor Gorjanc and Jouni Kerman. Ported to S-PLUS by Insightful Corp. Maintainer: Uwe Ligges <ligges at statistik.tu-dortmund.de> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no SystemRequirements: OpenBugs for functions bugs() and openbugs() or WinBUGS 1.4 for function bugs() Citation: R2WinBUGS citation info Materials: NEWS In views: Bayesian, gR CRAN checks: R2WinBUGS results Downloads: Reference manual: R2WinBUGS.pdf Vignettes: R2WinBUGS Package source: R2WinBUGS_2.1-21.tar.gz Windows binaries: r-devel: R2WinBUGS_2.1-21.zip, r-release: R2WinBUGS_2.1-21.zip, r-oldrel: R2WinBUGS_2.1-21.zip OS X Mavericks binaries: r-release: R2WinBUGS_2.1-21.tgz, r-oldrel: R2WinBUGS_2.1-21.tgz Old sources: R2WinBUGS archive Reverse dependencies: Reverse depends: bisoreg, iBUGS Reverse imports: R2jags, spikeSlabGAM Reverse suggests: AICcmodavg, bcrm, classify, crmPack, dclone, emdbook, MethComp Reverse enhances: glmmBUGS"	"null"	"null"	"Running WinBUGS and OpenBUGS from R / S-PLUS."	"true"
"Bayesian"	"BRugs"	"http://cran.r-project.org/web/packages/BRugs/index.html"	"R interface to the OpenBUGS MCMC software."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package BRugs BRugs: Interface to the 'OpenBUGS' MCMC Software Fully-interactive R interface to the 'OpenBUGS' software for Bayesian analysis using MCMC sampling. Runs natively and stably in 32-bit R under Windows. Versions running on Linux and on 64-bit R under Windows are in ""beta"" status and less efficient. Version: 0.8-6 Depends: R (≥ 2.11.0) Imports: utils, coda, grDevices, graphics, stats Published: 2015-12-16 Author: OpenBUGS was developed by Andrew Thomas, Dave Lunn, David Spiegelhalter and Nicky Best. R interface developed by Uwe Ligges, Sibylle Sturtz, Andrew Gelman, Gregor Gorjanc and Chris Jackson. Linux port and most recent developments by Chris Jackson. Maintainer: Uwe Ligges <ligges at statistik.tu-dortmund.de> BugReports: NA License: GPL-2 URL: http://www.openbugs.net/ NeedsCompilation: yes SystemRequirements: OpenBUGS (>= 3.2.2), hence Windows or Linux Citation: BRugs citation info Materials: NEWS In views: gR CRAN checks: BRugs results Downloads: Reference manual: BRugs.pdf Package source: BRugs_0.8-6.tar.gz Windows binaries: r-devel: not available, r-release: not available, r-oldrel: BRugs_0.8-6.zip OS X Mavericks binaries: r-release: not available, r-oldrel: not available Old sources: BRugs archive Reverse dependencies: Reverse depends: miscF Reverse suggests: bcrm, BTSPAS, dclone, MethComp, R2WinBUGS Reverse enhances: glmmBUGS"	"null"	"null"	"R interface to the OpenBUGS MCMC software."	"true"
"Bayesian"	"rjags"	"http://cran.r-project.org/web/packages/rjags/index.html"	"R interface to the JAGS MCMC library."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package rjags rjags: Bayesian Graphical Models using MCMC Interface to the JAGS MCMC library. Version: 4-6 Depends: R (≥ 2.14.0), coda (≥ 0.13) Suggests: tcltk Published: 2016-02-19 Author: Martyn Plummer [aut, cre], Alexey Stukalov [ctb], Matt Denwood [ctb] Maintainer: Martyn Plummer <plummerm at iarc.fr> BugReports: NA License: GPL (== 2) URL: http://mcmc-jags.sourceforge.net NeedsCompilation: yes SystemRequirements: JAGS 4.x.y Materials: INSTALL In views: Bayesian, Cluster, gR CRAN checks: rjags results Downloads: Reference manual: rjags.pdf Package source: rjags_4-6.tar.gz Windows binaries: r-devel: rjags_4-6.zip, r-release: rjags_4-6.zip, r-oldrel: rjags_4-6.zip OS X Mavericks binaries: r-release: rjags_4-6.tgz, r-oldrel: rjags_4-6.tgz Old sources: rjags archive Reverse dependencies: Reverse depends: auRoc, BANOVA, BaySIC, HydeNet, lira, metamisc, pcnetmeta, prevalence, PurBayes, R2jags, simmr, zoib Reverse imports: BACCT, bamdit, bayescount, bayesmix, bdpopt, BTSPAS, CCTpack, crmPack, dclone, EasyMARK, gemtc, jagsUI, MixSIAR, morse, RcmdrPlugin.RMTCJags, SIBER, StatMethRank Reverse suggests: bcrm, blavaan, covafillr, dcmle, LEAPFrOG, lucid, Luminescence, MethComp, nCal, runjags"	"null"	"null"	"R interface to the JAGS MCMC library."	"true"
"Bayesian"	"rstan"	"http://mc-stan.org/interfaces/rstan.html"	"R interface to the Stan MCMC software."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"225"	"55"	"82"	"GitHub - stan-dev/rstan: RStan, the R interface to Stan Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 55 Star 225 Fork 82 stan-dev/rstan Code Issues 73 Pull requests 6 Wiki Pulse Graphs RStan, the R interface to Stan http://mc-stan.org 2,114 commits 48 branches 18 releases 19 contributors R 72.0% C++ 26.4% Makefile 0.8% TeX 0.4% Shell 0.3% Stan 0.1% R C++ Makefile TeX Shell Stan Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: develop Switch branches/tags Branches Tags CRAN advb debug/test_grad_crash develop enhance_pairs feature/Andrewfy feature/adapt-eta feature/add_bfgs feature/arg_refactor feature/auto_rstan_sha feature/csr_extract feature/html_open_progress feature/improve_stanc feature/interruptions4bfgs feature/issue-103-initialize_state feature/issue-179-stan-api feature/issue-197-remove-writer feature/move-stan_demo feature/naming feature/nolibrstan feature/partial-inits feature/prepare_for_2.10.0 feature/read_csv_more_sampler_params feature/reduce_warning feature/refactor-common-run_markov_chain feature/return_wall_time feature/save_dso_automatically feature/stan-issue-109 feature/stan-services feature/stan_pull_issue155 feature/testify feature/travis_trial_n_error feature/uninvisible feature/vignette features/lookup fix_ess_rfun hotfix/failure_of_dense_e hotfix/index_out_of_bounds issues/no56 master more-rstan-options release-2.0.0 release-2.3 release/v2.1.0 release/v2.6.3 split test_travis tink_travis Nothing to show v2.10.1 v2.9.0 v2.9.0-3 v2.8.2 v2.8.1 v2.8.1-1 v2.8.0 v2.7.0 v2.6.0 v2.5.0 v2.4.0 v2.3.0 v2.2.0 v2.1.1 v2.1.0 v2.0.1 v2.0.0 v1.3.0 Nothing to show New pull request Latest commit 0b0ba79 Jul 13, 2016 jgabry document append_samples … closes #311 Permalink Failed to load latest commit information. .github Adding copyright and licensing info. Mar 16, 2016 StanHeaders redo symlink Jun 23, 2016 licenses Update rstan-license.txt Mar 6, 2015 rstan document append_samples Jul 13, 2016 rstan3 rstan3: n_divergent__ -> divergent__ Mar 15, 2016 .gitignore add .RHistory to .gitignore Apr 27, 2016 .gitmodules Updated from cvodes to cvode Apr 18, 2016 .jenkins script for jenkins Feb 1, 2014 .travis.yml fix merge conflicts Jun 14, 2016 README.md add downloads per month badge Jun 12, 2016 Slides.pdf slides Jun 24, 2014 StanNYCMeetup.zip examples for Stan Meetup Jun 24, 2014 sh_b.sh start working on 2.10.0 Feb 19, 2016 README.md RStan is the R interface to Stan. Home Page RStan's home page, with links to everything you'll need to use RStan and Stan is: http://mc-stan.org/ RStan Getting Started https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started Source Repository RStan's source-code repository is hosted here on GitHub. Stan's source repository is defined as a submodule here, see how to work with stan submodule in rstan repo. Licensing RStan is licensed under GPLv3. The Stan code packaged in RStan is licensed under new BSD. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/stan-dev/rstan"	"R interface to the Stan MCMC software."	"true"
"Optimization"	"minqa"	"https://cran.rstudio.com/web/packages/minqa/index.html"	"Derivative-free optimization algorithms by quadratic approximation."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package minqa minqa: Derivative-free optimization algorithms by quadratic approximation Derivative-free optimization by quadratic approximation based on an interface to Fortran implementations by M. J. D. Powell. Version: 1.2.4 Imports: Rcpp (≥ 0.9.10) LinkingTo: Rcpp Published: 2014-10-09 Author: Douglas Bates, Katharine M. Mullen, John C. Nash, Ravi Varadhan Maintainer: Katharine M. Mullen <katharine.mullen at stat.ucla.edu> BugReports: NA License: GPL-2 URL: http://optimizer.r-forge.r-project.org NeedsCompilation: yes SystemRequirements: GNU make Materials: ChangeLog In views: Optimization CRAN checks: minqa results Downloads: Reference manual: minqa.pdf Package source: minqa_1.2.4.tar.gz Windows binaries: r-devel: minqa_1.2.4.zip, r-release: minqa_1.2.4.zip, r-oldrel: minqa_1.2.4.zip OS X Mavericks binaries: r-release: minqa_1.2.4.tgz, r-oldrel: minqa_1.2.4.tgz Old sources: minqa archive Reverse dependencies: Reverse depends: geospt Reverse imports: cplm, geosptdb, glmmLasso, GMMBoost, GxM, lme4, optimx, simecol, VARsignR, wCorr Reverse suggests: blackbox, diversitree, fdapace, icsw, metafor, msm, RandomFields, SPOT"	"null"	"null"	"Derivative-free optimization algorithms by quadratic approximation."	"true"
"Optimization"	"nloptr"	"https://cran.rstudio.com/web/packages/nloptr/index.html"	"NLopt is a free/open-source library for nonlinear optimization."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package nloptr nloptr: R interface to NLopt nloptr is an R interface to NLopt. NLopt is a free/open-source library for nonlinear optimization, providing a common interface for a number of different free optimization routines available online as well as original implementations of various other algorithms. See http://ab-initio.mit.edu/wiki/index.php/NLopt_Introduction for more information on the available algorithms. During installation on Unix the NLopt code is downloaded and compiled from the NLopt website. Version: 1.0.4 Suggests: testthat (≥ 0.8.1) Published: 2014-08-04 Author: Jelmer Ypma, with contributions by Hans W. Borchers and Dirk Eddelbuettel Maintainer: Jelmer Ypma <uctpjyy at ucl.ac.uk> BugReports: NA License: LGPL-3 URL: NA NeedsCompilation: yes Citation: nloptr citation info Materials: README ChangeLog In views: Optimization CRAN checks: nloptr results Downloads: Reference manual: nloptr.pdf Vignettes: Introduction to nloptr: an R interface to NLopt Package source: nloptr_1.0.4.tar.gz Windows binaries: r-devel: nloptr_1.0.4.zip, r-release: nloptr_1.0.4.zip, r-oldrel: nloptr_1.0.4.zip OS X Mavericks binaries: r-release: nloptr_1.0.4.tgz, r-oldrel: nloptr_1.0.4.tgz Old sources: nloptr archive Reverse dependencies: Reverse depends: CCpop, corHMM, episplineDensity, hisse, MaxPro, OUwie, parma, stpm Reverse imports: blackbox, lme4, minimaxdesign, nlshrink, OptimaRegion, optiSel, pomp, ptw, ROI.plugin.nloptr, rugarch, seqHMM, spaMM Reverse suggests: afex, CEGO, metafor, PortfolioAnalytics, RandomFields, SACOBRA, SPOT, SuperLearner"	"null"	"null"	"NLopt is a free/open-source library for nonlinear optimization."	"true"
"Optimization"	"lpSolve"	"https://cran.rstudio.com/web/packages/lpSolve/index.html"	"Interface to to Solve Linear/Integer Programs."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package lpSolve lpSolve: Interface to 'Lp_solve' v. 5.5 to Solve Linear/Integer Programs Lp_solve is freely available (under LGPL 2) software for solving linear, integer and mixed integer programs. In this implementation we supply a ""wrapper"" function in C and some R functions that solve general linear/integer problems, assignment problems, and transportation problems. This version calls lp_solve version 5.5. Version: 5.6.13 Published: 2015-09-19 Author: Michel Berkelaar and others Maintainer: Samuel E. Buttrey <buttrey at nps.edu> BugReports: NA License: LGPL-2 URL: NA NeedsCompilation: yes In views: Optimization CRAN checks: lpSolve results Downloads: Reference manual: lpSolve.pdf Package source: lpSolve_5.6.13.tar.gz Windows binaries: r-devel: lpSolve_5.6.13.zip, r-release: lpSolve_5.6.13.zip, r-oldrel: lpSolve_5.6.13.zip OS X Mavericks binaries: r-release: lpSolve_5.6.13.tgz, r-oldrel: lpSolve_5.6.13.tgz Old sources: lpSolve archive Reverse dependencies: Reverse depends: cherry, clime, EDFIR, goalprog, ibd, imprProbEst, irr, kappalab, linprog, mcclust, modQR, mpcv, nonparaeff, pathClass, RcmdrPlugin.sampling, StatMatch, WhatIf Reverse imports: bmrm, Compind, ergm, kantorovich, label.switching, limSolve, matchingMarkets, mediation, MoTBFs, netgen, QCAGUI, QCApro, sampling, systemicrisk Reverse suggests: catdata, clue, relations"	"null"	"null"	"Interface to to Solve Linear/Integer Programs."	"true"
"Finance"	"quantmod"	"http://www.quantmod.com/"	"Quantitative Financial Modelling & Trading Framework for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"quantmod: Quantitative Financial Modelling Framework quantmod Quantitative Financial Modelling & Trading Framework for R quantmod news what's next documentation examples gallery download license feeds R/quant links add to del.icio.us { quantmod } Updated Charting Tools for 0.3-6! The quantmod package for R is designed to assist the quantitative trader in the development, testing, and deployment of statistically based trading models. What quantmod IS A rapid prototyping environment, where quant traders can quickly and cleanly explore and build trading models. What quantmod is NOT A replacement for anything statistical. It has no 'new' modelling routines or analysis tool to speak of. It does now offer charting not currently available elsewhere in R, but most everything else is more of a wrapper to what you already know and love about the language and packages you currently use. quantmod makes modelling easier by removing the repetitive workflow issues surrounding data management, modelling interfaces, and performance analysis. Explore what is currently possible in the examples This software is written and maintained by Jeffrey A. Ryan. See license for details on copying and use. Copyright 2008."	"null"	"null"	"Quantitative Financial Modelling & Trading Framework for R."	"true"
"Finance"	"TTR"	"http://cran.r-project.org/web/packages/TTR/index.html"	"Functions and data to construct technical trading rules with R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"51"	"24"	"25"	"GitHub - joshuaulrich/TTR: Technical analysis and other functions to construct technical trading rules with R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 24 Star 51 Fork 25 joshuaulrich/TTR Code Issues 11 Pull requests 0 Pulse Graphs Technical analysis and other functions to construct technical trading rules with R 180 commits 1 branch 15 releases Fetching contributors R 85.5% FORTRAN 8.0% C 6.5% R FORTRAN C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.23-1 v0.23-0 v0.22-0 v0.21-1 v0.21-0 v0.20-2 v0.20-1 v0.20-0 v0.14 v0.13 v0.13-2 v0.13-1 v0.12 v0.11 v0.2 Nothing to show New pull request Latest commit 07ea670 Jul 4, 2016 joshuaulrich Fix ultimateOscillator if HLC is monthly xts … An issue in xts::to.monthly causes the simplify2array call in sapply to fail. Avoid the issue completely by replacing the sapply call with an explicit for loop.  Fixes #30. Permalink Failed to load latest commit information. R Fix ultimateOscillator if HLC is monthly xts Jul 4, 2016 data Roxygenize docs and change file modes May 9, 2015 inst/unitTests Fix ultimateOscillator if HLC is monthly xts Jul 4, 2016 man Initial commit of SNR function Jul 2, 2016 src Roxygenize docs and change file modes May 10, 2015 tests Move and fix unit tests Mar 19, 2016 .Rbuildignore Add .Rbuildignore file May 9, 2015 CHANGES Prepare for CRAN release Jul 9, 2015 DESCRIPTION Move and fix unit tests Mar 19, 2016 NAMESPACE Prepare for CRAN release Jul 10, 2015 THANKS Roxygenize docs and change file modes May 10, 2015 Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/joshuaulrich/TTR"	"Functions and data to construct technical trading rules with R."	"true"
"Finance"	"PerformanceAnalytics"	"http://cran.r-project.org/web/packages/PerformanceAnalytics/index.html"	"Econometric tools for performance and risk analysis."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package PerformanceAnalytics PerformanceAnalytics: Econometric tools for performance and risk analysis Collection of econometric functions for performance and risk analysis. This package aims to aid practitioners and researchers in utilizing the latest research in analysis of non-normal return streams. In general, it is most tested on return (rather than price) data on a regular scale, but most functions will work with irregular return data as well, and increasing numbers of functions will work with P&L or price data where possible. Version: 1.4.3541 Depends: R (≥ 3.0.0), xts (≥ 0.9) Imports: zoo Suggests: Hmisc, MASS, quantmod, gamlss, gamlss.dist, robustbase, quantreg, gplots Published: 2014-09-16 Author: Brian G. Peterson [cre, aut, cph], Peter Carl [aut, cph], Kris Boudt [ctb, cph], Ross Bennett [ctb], Joshua Ulrich [ctb], Eric Zivot [ctb], Matthieu Lestel [ctb], Kyle Balkissoon [ctb], Diethelm Wuertz [ctb] Maintainer: Brian G. Peterson <brian at braverock.com> BugReports: NA License: GPL-2 | GPL-3 Copyright: (c) 2004-2014 URL: http://r-forge.r-project.org/projects/returnanalytics/ NeedsCompilation: yes Materials: NEWS In views: Finance CRAN checks: PerformanceAnalytics results Downloads: Reference manual: PerformanceAnalytics.pdf Vignettes: Performance Attribution from Bacon PerformanceAnalytics Charts and Tables Reference PerformanceAnalytics Charts and Tables Presentation - Meielisalp - 2007 PerformanceAnalytics Data Mining Presentation - UseR - 2007 Portfolio Returns How to Present Tables in Plot Devices Package source: PerformanceAnalytics_1.4.3541.tar.gz Windows binaries: r-devel: PerformanceAnalytics_1.4.3541.zip, r-release: PerformanceAnalytics_1.4.3541.zip, r-oldrel: PerformanceAnalytics_1.4.3541.zip OS X Mavericks binaries: r-release: PerformanceAnalytics_1.4.3541.tgz, r-oldrel: PerformanceAnalytics_1.4.3541.tgz Old sources: PerformanceAnalytics archive Reverse dependencies: Reverse depends: PortfolioAnalytics Reverse imports: SMNCensReg, tawny Reverse suggests: Dowd, ExtDist, pbo, timeSeries"	"null"	"null"	"Econometric tools for performance and risk analysis."	"true"
"Finance"	"zoo"	"http://cran.r-project.org/web/packages/zoo/index.html"	"S3 Infrastructure for Regular and Irregular Time Series."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package zoo zoo: S3 Infrastructure for Regular and Irregular Time Series (Z's Ordered Observations) An S3 class with methods for totally ordered indexed observations. It is particularly aimed at irregular time series of numeric vectors/matrices and factors. zoo's key design goals are independence of a particular index/date/time class and consistency with ts and base R by providing methods to extend standard generics. Version: 1.7-13 Depends: R (≥ 2.10.0), stats Imports: utils, graphics, grDevices, lattice (≥ 0.20-27) Suggests: coda, chron, DAAG, fts, its, ggplot2, mondate, scales, strucchange, timeDate, timeSeries, tis, tseries, xts Published: 2016-05-03 Author: Achim Zeileis [aut, cre], Gabor Grothendieck [aut], Jeffrey A. Ryan [aut], Felix Andrews [ctb] Maintainer: Achim Zeileis <Achim.Zeileis at R-project.org> BugReports: NA License: GPL-2 | GPL-3 URL: http://zoo.R-Forge.R-project.org/ NeedsCompilation: yes Citation: zoo citation info Materials: NEWS In views: Econometrics, Environmetrics, Finance, TimeSeries CRAN checks: zoo results Downloads: Reference manual: zoo.pdf Vignettes: zoo Design zoo FAQ zoo Quick Reference Reading Data in zoo zoo: An S3 Class and Methods for Indexed Totally Ordered Observations Package source: zoo_1.7-13.tar.gz Windows binaries: r-devel: zoo_1.7-13.zip, r-release: zoo_1.7-13.zip, r-oldrel: zoo_1.7-13.zip OS X Mavericks binaries: r-release: zoo_1.7-13.tgz, r-oldrel: zoo_1.7-13.tgz Old sources: zoo archive Reverse dependencies: Reverse depends: acc, AER, AutoSEARCH, bdrift, betategarch, bsts, changepoint, dendrometeR, dtwSat, dyn, dynlm, egcm, EIAdata, EloRating, Evapotranspiration, eventstudies, fast, FinancialInstrument, FinTS, FLIM, forecast, fts, fxregime, gamlss.util, geotopbricks, gets, ggseas, glogis, highfrequency, hydroGOF, hydroTSM, IBrokers, lgarch, lmtest, mar1s, meteoForecast, Modalclust, phenology, PortfolioAnalytics, QoLR, quantmod, RcmdrPlugin.temis, rdatamarket, reGenotyper, RelValAnalysis, RJSDMX, RObsDat, rts, sde, solaR, STMedianPolish, StreamMetabolism, strucchange, SWMPr, tgram, trackeR, VideoComparison, xts, yuima Reverse imports: ACDm, acss, bfast, BigVAR, carx, changepoint.np, covmat, creditr, DBEST, diskImageR, DMwR, dygraphs, dynatopmodel, ecd, eyetrackingR, FDboost, gazepath, ggpmisc, GSSE, gstat, gtrendsR, gunsales, hddtools, highcharter, hydroPSO, hyfo, iemisc, iki.dataclim, inegiR, kehra, lfl, lfstat, LICORS, Luminescence, manifestoR, mlogit, mptools, msltrend, nparACT, obAnalytics, partialAR, party, pdfetch, PerformanceAnalytics, plm, plotKML, PortRisk, preprocomb, psd, qrmtools, Quandl, quantspec, rasterVis, RmarineHeatWaves, rmgarch, rugarch, sandwich, scidb, sirad, snht, sophisthse, spacetime, STI, survMisc, syuzhet, tableone, tawny, tawny.types, TED, termstrc, tigerhitteR, timeseriesdb, translateSPSS2R, trib, tripEstimation, TSdist, tseries, TSmisc, TSsql, TTR, vcrpart, Wats, wq Reverse suggests: atsd, broom, copula, data.table, ETLUtils, FatTailsR, fda, FRAPO, ggfortify, GGIR, glarma, gsubfn, h5, latticeExtra, lava, meboot, mondate, pander, playwith, pscl, quantreg, Rblpapi, RcppRoll, RQuantLib, tframePlus, tolBasis, TScompare, TSdata, TSdbi, TSfame, TSMySQL, TSodbc, TSPostgreSQL, TSSQLite, UsingR, XLConnect, xtable Reverse enhances: chron, lubridate, tis"	"null"	"null"	"S3 Infrastructure for Regular and Irregular Time Series."	"true"
"Finance"	"xts"	"http://cran.r-project.org/web/packages/xts/index.html"	"eXtensible Time Series."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package xts xts: eXtensible Time Series Provide for uniform handling of R's different time-based data classes by extending zoo, maximizing native format information preservation and allowing for user level customization and extension, while simplifying cross-class interoperability. Version: 0.9-7 Depends: zoo (≥ 1.7-10) Suggests: timeSeries, timeDate, tseries, its, chron, fts, tis Published: 2014-01-02 Author: Jeffrey A. Ryan, Joshua M. Ulrich Maintainer: Jeffrey A. Ryan <jeff.a.ryan at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://r-forge.r-project.org/projects/xts/ NeedsCompilation: yes Materials: NEWS In views: Econometrics, Finance, SpatioTemporal, TimeSeries CRAN checks: xts results Downloads: Reference manual: xts.pdf Vignettes: xts: Extensible Time Series Package source: xts_0.9-7.tar.gz Windows binaries: r-devel: xts_0.9-7.zip, r-release: xts_0.9-7.zip, r-oldrel: xts_0.9-7.zip OS X Mavericks binaries: r-release: xts_0.9-7.tgz, r-oldrel: xts_0.9-7.tgz Old sources: xts archive Reverse dependencies: Reverse depends: aqr, bdrift, bsts, cotrend, egcm, EIAdata, eventstudies, FinancialInstrument, highfrequency, hydroTSM, IBrokers, lfstat, PerformanceAnalytics, PortfolioAnalytics, Quandl, quantmod, RcmdrPlugin.epack, RcppXts, RFinanceYJ, rts, YieldCurve Reverse imports: backtestGraphics, carx, covmat, creditr, DMwR, dygraphs, dynatopmodel, ecd, ggpmisc, highcharter, hydroGOF, kehra, machina, pdfetch, qrmdata, qrmtools, rmgarch, rnrfa, RObsDat, rugarch, shinystan, spacetime, stressr, tawny, tawny.types, timeseriesdb, TSdist, TSmisc, TTR, vetools Reverse linking to: RcppXts, TTR Reverse suggests: crawl, data.table, FatTailsR, FRAPO, ggfortify, gstat, hydroPSO, parma, Rblpapi, SharpeR, sos4R, surveillance, tframePlus, timeSeries, tolBasis, trajectories, TSdata, ustyc, zoo Reverse enhances: lubridate"	"null"	"null"	"eXtensible Time Series."	"true"
"Finance"	"tseries"	"http://cran.r-project.org/web/packages/tseries/index.html"	"Time series analysis and computational finance."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package tseries tseries: Time Series Analysis and Computational Finance Time series analysis and computational finance. Version: 0.10-35 Depends: R (≥ 2.10.0) Imports: graphics, stats, utils, quadprog, zoo Suggests: its Published: 2016-05-02 Author: Adrian Trapletti [aut], Kurt Hornik [aut, cre], Blake LeBaron [ctb] (BDS test code) Maintainer: Kurt Hornik <Kurt.Hornik at R-project.org> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: yes Citation: tseries citation info Materials: README ChangeLog In views: Econometrics, Environmetrics, Finance, TimeSeries CRAN checks: tseries results Downloads: Reference manual: tseries.pdf Package source: tseries_0.10-35.tar.gz Windows binaries: r-devel: tseries_0.10-35.zip, r-release: tseries_0.10-35.zip, r-oldrel: tseries_0.10-35.zip OS X Mavericks binaries: r-release: tseries_0.10-35.tgz, r-oldrel: tseries_0.10-35.tgz Old sources: tseries archive Reverse dependencies: Reverse depends: acp, AnalyzeTS, CADFtest, earlywarnings, fma, forecTheta, fpp, Mcomp, mgarchBEKK, nonlinearTseries, RcmdrPlugin.epack, RcmdrPlugin.UCA, TSA Reverse imports: AID, conting, CryptRndTest, egcm, erer, forecast, lfl, msltrend, partialAR, PCA4TS, PortRisk, SDD, tsDyn, TSmisc Reverse suggests: AER, copula, dyn, FinTS, ggfortify, mFilter, mistat, pander, portes, RTDE, strucchange, TSdata, TSdbi, TSfame, TSMySQL, TSodbc, TSPostgreSQL, TSsql, TSSQLite, xts, zoo Reverse enhances: lubridate"	"null"	"null"	"Time series analysis and computational finance."	"true"
"Finance"	"fAssets"	"http://cran.r-project.org/web/packages/fAssets/index.html"	"Analysing and Modelling Financial Assets."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package fAssets fAssets: Rmetrics - Analysing and Modelling Financial Assets Environment for teaching ""Financial Engineering and Computational Finance"". Version: 3011.83 Depends: R (≥ 2.15.1), timeDate, timeSeries, fBasics Imports: fMultivar, robustbase, MASS, sn, ecodist, mvnormtest, energy Suggests: methods, mnormt, RUnit Published: 2014-10-30 Author: Rmetrics Core Team, Diethelm Wuertz [aut], Tobias Setz [cre], Yohan Chalabi [ctb] Maintainer: Tobias Setz <tobias.setz at rmetrics.org> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: https://www.rmetrics.org NeedsCompilation: no Materials: ChangeLog In views: Finance CRAN checks: fAssets results Downloads: Reference manual: fAssets.pdf Package source: fAssets_3011.83.tar.gz Windows binaries: r-devel: fAssets_3011.83.zip, r-release: fAssets_3011.83.zip, r-oldrel: fAssets_3011.83.zip OS X Mavericks binaries: r-release: fAssets_3011.83.tgz, r-oldrel: fAssets_3011.83.tgz Old sources: fAssets archive Reverse dependencies: Reverse depends: fPortfolio"	"null"	"null"	"Analysing and Modelling Financial Assets."	"true"
"Bioinformatics"	"Bioconductor"	"http://www.bioconductor.org/"	"Tools for the analysis and comprehension of high-throughput genomic data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Bioconductor - Home Thanks for making BioC 2016: Where Software and Biology Connect a great success! About Bioconductor Bioconductor provides tools for the analysis and comprehension of high-throughput genomic data. Bioconductor uses the R statistical programming language, and is open source and open development. It has two releases each year, 1211 software packages, and an active user community. Bioconductor is also available as an AMI (Amazon Machine Image) and a series of Docker images. News Bioconductor 3.3 is available. Bioconductor F1000 Research Channel launched. Orchestrating high-throughput genomic analysis with Bioconductor (abstract) and other recent literature. Read our latest newsletter and course material. Use the support site to get help installing, learning and using Bioconductor. Install » Get started with Bioconductor Install Bioconductor Explore packages Get support Latest newsletter Follow us on twitter Install R Learn » Master Bioconductor tools Courses Support site Package vignettes Literature citations Common work flows FAQ Community resources Videos Use » Create bioinformatic solutions with Bioconductor Software, Annotation, and Experiment packages Amazon Machine Image Latest release annoucement Support site Develop » Contribute to Bioconductor Developer resources Use Bioc ‘devel’ ‘Devel’ Software, Annotation and Experiment packages Package guidelines New package submission Build reports Support Read the posting guide bioc-devel mailing list (for package authors) Greek letters in R 2016-07-15T21:33:28Z How to decorate complexheatmap? 2016-07-15T20:34:12Z Dropping genes with zero read counts ... 2016-07-15T17:05:18Z extract subsequence(s) from DNAString... 2016-07-15T15:59:14Z How to interpret DNAShapeR results 2016-07-15T15:35:51Z Events CSAMA 2016 (14th edition) - Statistics and Computing in Genome Data Science 10 - 15 July 2016 — Bressanone-Brixen, Italy Bioconductor Asia Developers' Meeting 03 - 04 November 2016 — Brisbane, Australia Bioconductor European Developers' Workshop 06 - 07 December 2016 — Basel, Switzerland See all events  » Tweets by @Bioconductor Contact us: support.bioconductor.org Copyright © 2003 - 2016, Bioconductor Home Install Install R Find Bioconductor Packages Install Bioconductor Packages Update Bioconductor Packages Help Workflows Package Vignettes FAQ Support Using R Courses Publications Cloud AMI Community Resources Developers Package Guidelines Package Submission Release Schedule Source Control About Advisory Board Annual Reports Core Team Mirrors Related Projects   Search: Home Install Help Developers About"	"null"	"null"	"Tools for the analysis and comprehension of high-throughput genomic data."	"true"
"Bioinformatics"	"genetics"	"http://cran.r-project.org/web/packages/genetics/index.html"	"Classes and methods for handling genetic data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package genetics genetics: Population Genetics Classes and methods for handling genetic data. Includes classes to represent genotypes and haplotypes at single markers up to multiple markers on multiple chromosomes. Function include allele frequencies, flagging homo/heterozygotes, flagging carriers of certain alleles, estimating and testing for Hardy-Weinberg disequilibrium, estimating and testing for linkage disequilibrium, ... Version: 1.3.8.1 Depends: combinat, gdata, gtools, MASS, mvtnorm Published: 2013-09-03 Author: Gregory Warnes, with contributions from Gregor Gorjanc, Friedrich Leisch, and Michael Man. Maintainer: Gregory Warnes <greg at warnes.net> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL] URL: NA NeedsCompilation: no Materials: NEWS ChangeLog In views: Genetics CRAN checks: genetics results Downloads: Reference manual: genetics.pdf Package source: genetics_1.3.8.1.tar.gz Windows binaries: r-devel: genetics_1.3.8.1.zip, r-release: genetics_1.3.8.1.zip, r-oldrel: genetics_1.3.8.1.zip OS X Mavericks binaries: r-release: genetics_1.3.8.1.tgz, r-oldrel: genetics_1.3.8.1.tgz Old sources: genetics archive Reverse dependencies: Reverse depends: boostSeq, forensic, introgress, luca, MasterBayes Reverse imports: LDheatmap, lmem.gwaser, PopGenReport, snp.plotter Reverse suggests: GenABEL, HWxtest"	"null"	"null"	"Classes and methods for handling genetic data."	"true"
"Bioinformatics"	"gap"	"http://cran.r-project.org/web/packages/gap/index.html"	"An integrated package for genetic data analysis of both population and family data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package gap gap: Genetic Analysis Package It is designed as an integrated package for genetic data analysis of both population and family data. Currently, it contains functions for sample size calculations of both population-based and family-based designs, probability of familial disease aggregation, kinship calculation, statistics in linkage analysis, and association analysis involving genetic markers including haplotype analysis with or without environmental covariates. Version: 1.1-16 Depends: R (≥ 2.10) Suggests: BradleyTerry2, MASS, Matrix, MCMCglmm, R2jags, bdsmatrix, coda, coxme, foreign, grid, haplo.stats, kinship2, lattice, magic, mets, nlme, pedigree, pedigreemm, regress, rms, survival Published: 2015-06-06 Author: Jing Hua Zhao and colleagues with inputs from Kurt Hornik and Brian Ripley Maintainer: Jing Hua Zhao <jinghua.zhao at mrc-epid.cam.ac.uk> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.mrc-epid.cam.ac.uk/people/jing-hua-zhao/ NeedsCompilation: yes Citation: gap citation info Materials: ChangeLog In views: Genetics, MetaAnalysis CRAN checks: gap results Downloads: Reference manual: gap.pdf Vignettes: An overview of gap Heritability estimation using relationship matrices gap: genetic analysis package Example pedigrees for pedtodot Drawing pedigree diagrams with R and graphviz Package source: gap_1.1-16.tar.gz Windows binaries: r-devel: gap_1.1-16.zip, r-release: gap_1.1-16.zip, r-oldrel: gap_1.1-16.zip OS X Mavericks binaries: r-release: gap_1.1-16.tgz, r-oldrel: gap_1.1-16.tgz Old sources: gap archive Reverse dependencies: Reverse imports: PopGenReport"	"null"	"null"	"An integrated package for genetic data analysis of both population and family data."	"true"
"Bioinformatics"	"ape"	"http://cran.r-project.org/web/packages/ape/index.html"	"Analyses of Phylogenetics and Evolution."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ape ape: Analyses of Phylogenetics and Evolution Functions for reading, writing, plotting, and manipulating phylogenetic trees, analyses of comparative data in a phylogenetic framework, ancestral character analyses, analyses of diversification and macroevolution, computing distances from allelic and nucleotide data, reading and writing nucleotide sequences as well as importing from BioConductor, and several tools such as Mantel's test, generalized skyline plots, graphical exploration of phylogenetic data (alex, trex, kronoviz), estimation of absolute evolutionary rates and clock-like trees using mean path lengths and penalized likelihood. Phylogeny estimation can be done with the NJ, BIONJ, ME, MVR, SDM, and triangle methods, and several methods handling incomplete distance matrices (NJ*, BIONJ*, MVR*, and the corresponding triangle method). Some functions call external applications (PhyML, Clustal, T-Coffee, Muscle) whose results are returned into R. Version: 3.5 Depends: R (≥ 3.0.0) Imports: nlme, lattice, graphics, methods, stats, tools, utils, parallel Suggests: gee, expm Published: 2016-05-24 Author: Emmanuel Paradis [aut, cre, cph], Simon Blomberg [aut, cph], Ben Bolker [aut, cph], Julien Claude [aut, cph], Hoa Sien Cuong [aut, cph], Richard Desper [aut, cph], Gilles Didier [aut, cph], Benoit Durand [aut, cph], Julien Dutheil [aut, cph], Olivier Gascuel [aut, cph], Christoph Heibl [aut, cph], Anthony Ives [aut, cph], Daniel Lawson [aut, cph], Vincent Lefort [aut, cph], Pierre Legendre [aut, cph], Jim Lemon [aut, cph], Rosemary McCloskey [aut, cph], Johan Nylander [aut, cph], Rainer Opgen-Rhein [aut, cph], Andrei-Alin Popescu [aut, cph], Manuela Royer-Carenzi [aut, cph], Klaus Schliep [aut, cph], Korbinian Strimmer [aut, cph], Damien de Vienne [aut, cph] Maintainer: Emmanuel Paradis <Emmanuel.Paradis at ird.fr> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://ape-package.ird.fr/ NeedsCompilation: yes Citation: ape citation info Materials: NEWS In views: Environmetrics, Genetics, Graphics, Phylogenetics CRAN checks: ape results Downloads: Reference manual: ape.pdf Vignettes: Moran's I Package source: ape_3.5.tar.gz Windows binaries: r-devel: ape_3.5.zip, r-release: ape_3.5.zip, r-oldrel: ape_3.5.zip OS X Mavericks binaries: r-release: ape_3.5.tgz, r-oldrel: ape_3.5.tgz Old sources: ape archive Reverse dependencies: Reverse depends: adhoc, apex, apTreeshape, BAMMtools, bayou, BioGeoBEARS, BPEC, Canopy, caper, cati, coalescentMCMC, convevol, corHMM, DAMOCLES, DDD, DiscML, distory, diversitree, ecospat, expoTree, FD, geiger, geomorph, GUniFrac, HAP.ROR, hisse, HyPhy, ips, iteRates, jrich, laser, MCMCglmm, metricTester, MiSPU, MonoPhy, MPSEM, mvMORPH, mvSLOUCH, OUwie, paleotree, pastis, pegas, perspectev, pez, phangorn, phyclust, phyloclim, phylolm, phylotools, phyloTop, phytools, picante, PVR, RADami, rase, recluster, RNeXML, Rphylip, Rphylopars, Rsampletrees, rwty, spider, strap, surface, TESS, treebase, TreePar, treeplyr, treescape, TreeSim, windex Reverse imports: adegenet, adephylo, bcRep, betapart, BMhyd, BoSSA, brranching, CommT, entropart, EpiModel, evobiR, evolqg, expands, gamclass, gquad, GrammR, graphscan, gromovlab, HMPTrees, homals, kdetrees, lefse, markophylo, megaptera, Momocs, monogeneaGM, msap, nLTT, nodiv, outbreaker, OutbreakTools, P2C2M, PBD, PCPS, phyext2, phylobase, phylocurve, phyloland, PhyloMeasures, phylosignal, phyndr, PhySortR, PIGShift, poppr, primerTree, RAM, Reol, rotl, RPANDA, SeqFeatR, sharpshootR, sidier, SigTree, STEPCAM, strataG, stylo, taxize, TKF, TotalCopheneticIndex, vcfR Reverse suggests: ade4, aqp, asnipe, data.tree, dcGOR, dendextend, enveomics.R, GLSME, hierfstat, HSAUR, HSAUR2, HSAUR3, igraph, MVA, netdiffuseR, ouch, paco, polysat, rncl, rphast, sand, scrm, speciesgeocodeR, structSSI, symmoments, vhica Reverse enhances: clue"	"null"	"null"	"Analyses of Phylogenetics and Evolution."	"true"
"Bioinformatics"	"pheatmap"	"http://cran.r-project.org/web/packages/pheatmap/index.html"	"Pretty heatmaps made easy."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package pheatmap pheatmap: Pretty Heatmaps Implementation of heatmaps that offers more control over dimensions and appearance. Version: 1.0.8 Depends: R (≥ 2.0) Imports: grid, RColorBrewer, scales, gtable, stats, grDevices, graphics Published: 2015-12-11 Author: Raivo Kolde Maintainer: Raivo Kolde <rkolde at gmail.com> BugReports: NA License: GPL-2 URL: NA NeedsCompilation: no Materials: NEWS CRAN checks: pheatmap results Downloads: Reference manual: pheatmap.pdf Package source: pheatmap_1.0.8.tar.gz Windows binaries: r-devel: pheatmap_1.0.8.zip, r-release: pheatmap_1.0.8.zip, r-oldrel: pheatmap_1.0.8.zip OS X Mavericks binaries: r-release: pheatmap_1.0.8.tgz, r-oldrel: pheatmap_1.0.8.tgz Old sources: pheatmap archive Reverse dependencies: Reverse depends: KOGMWU, LncMod, MM2S Reverse imports: FAMILY, NPflow, omics, qiimer, timeSeq Reverse suggests: diverse"	"null"	"null"	"Pretty heatmaps made easy."	"true"
"Network Analysis"	"igraph"	"http://igraph.org/r/"	"A collection of network analysis tools."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"94"	"21"	"53"	"GitHub - igraph/rigraph: igraph R package Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 94 Fork 53 igraph/rigraph Code Issues 82 Pull requests 5 Pulse Graphs igraph R package http://igraph.org/r 2,080 commits 24 branches 0 releases 17 contributors R 96.4% Tcl 2.5% Other 1.1% R Tcl Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: dev Switch branches/tags Branches Tags 0.1-main 0.1-release 0.2-main 0.2-release 0.3-main 0.3-release 0.4-main 0.4-release 0.5-main 0.6-attributes 0.6-java 0.6-matching 0.6-scg 0.7-hpp 0.7-igraphx dev feature-int-igraph_t feature-temporal graphons lsgm master-old master release-0.6 release-0.7 Nothing to show Nothing to show New pull request Latest commit 02e7a47 Jul 9, 2016 gaborcsardi Remove some broken URLs Permalink Failed to load latest commit information. R Remove some broken URLs Jul 9, 2016 cigraph @ 85e0a03 Update C igraph Jul 15, 2015 demo Demos do not pause when run with demo() Jan 30, 2015 inst Update NEWS.md file Jul 9, 2016 man Major docs update, moved to roxygen completely now Jan 28, 2015 tools Handle @VERSION@ in configure.ac, closes #75 Jul 16, 2015 .Rbuildignore Put printr in the package, do not use bundler Dec 7, 2015 .gitignore Handle @VERSION@ in configure.ac, closes #75 Jul 16, 2015 .gitmodules cigraph module to latest C lib, master branch Jan 16, 2015 .travis.yml Travis: need pkgconfig from github Jul 13, 2015 CONTRIBUTING.md CONTRIBUTING.md git module -> git submodule Jan 28, 2015 Makefile Put printr in the package, do not use bundler Dec 7, 2015 NEWS.md Move README/NEWS to inst, update NEWS Jun 21, 2015 README.md Move README/NEWS to inst, update NEWS Jun 22, 2015 configure.win Move package to root Jan 6, 2015 README.md R/igraph R/igraph is an R package of the igraph network analysis library. Installation You can install the stable version of R/igraph from CRAN: install.packages(""igraph"") For the development version, you can use Github, with the devtools package: devtools::install_github(""gaborcsardi/pkgconfig"") devtools::install_github(""igraph/rigraph"") Documentation See the igraph homepage for the complete manual. Contributions Please read our contribution guide. License GNU GPL version 2 or later Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/igraph/rigraph"	"A collection of network analysis tools."	"true"
"Network Analysis"	"network"	"https://cran.r-project.org/web/packages/network/index.html"	"Basic tools to manipulate relational data in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package network network: Classes for Relational Data Tools to create and modify network objects. The network class can represent a range of relational data types, and supports arbitrary vertex/edge/graph attributes. Version: 1.13.0 Depends: R (≥ 2.10), utils Suggests: sna, statnet.common, testthat Published: 2015-09-19 Author: Carter T. Butts [aut, cre], David Hunter [ctb], Mark Handcock [ctb], Skye Bender-deMoll [ctb], Jeffrey Horner [ctb] Maintainer: Carter T. Butts <buttsc at uci.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://statnet.org/ NeedsCompilation: yes Citation: network citation info Materials: ChangeLog In views: SocialSciences, gR CRAN checks: network results Downloads: Reference manual: network.pdf Vignettes: network Vignette Package source: network_1.13.0.tar.gz Windows binaries: r-devel: network_1.13.0.zip, r-release: network_1.13.0.zip, r-oldrel: network_1.13.0.zip OS X Mavericks binaries: r-release: network_1.13.0.tgz, r-oldrel: network_1.13.0.tgz Old sources: network archive Reverse dependencies: Reverse depends: Bergm, Blaunet, blkergm, CCMnet, enaR, ergm, ergm.count, ergm.ego, ergm.graphlets, ergm.rank, ergm.userterms, haplotypes, hergm, latentnet, lvm4net, mpa, ndtv, networkDynamic, networkDynamicData, networksis, OutbreakTools, statnetWeb, tergm, tsna, VBLPCM, xergm.common Reverse imports: BANFF, bingat, btergm, degreenet, EpiModel, epinet, geomnet, ggnetwork, gwdegree, intergraph, SchemaOnRead, sidier, SparseTSCGM, statnet, tnam, toaster, VineCopula Reverse linking to: networkDynamic Reverse suggests: amen, broom, GGally, GGMselect, rDNA, RDS, RGraphics, RSiena, sand, sna, sparsebnUtils, sspse, texreg"	"null"	"null"	"Basic tools to manipulate relational data in R."	"true"
"Network Analysis"	"sna"	"https://cran.r-project.org/web/packages/sna/index.html"	"Basic network measures and visualization tools."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package sna sna: Tools for Social Network Analysis A range of tools for social network analysis, including node and graph-level indices, structural distance and covariance methods, structural equivalence detection, network regression, random graph generation, and 2D/3D network visualization. Version: 2.3-2 Depends: R (≥ 2.0.0), utils Suggests: network, rgl, numDeriv, SparseM Published: 2014-01-14 Author: Carter T. Butts [aut, cre, cph] Maintainer: Carter T. Butts <buttsc at uci.edu> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: http://www.statnet.org NeedsCompilation: yes Materials: ChangeLog In views: Bayesian, Optimization, SocialSciences CRAN checks: sna results Downloads: Reference manual: sna.pdf Package source: sna_2.3-2.tar.gz Windows binaries: r-devel: sna_2.3-2.zip, r-release: sna_2.3-2.zip, r-oldrel: sna_2.3-2.zip OS X Mavericks binaries: r-release: sna_2.3-2.tgz, r-oldrel: sna_2.3-2.tgz Old sources: sna archive Reverse dependencies: Reverse depends: bipartite, CCMnet, CEoptim, cssTools, egonet, enaR, hergm, ndtv, NetCluster, Rambo, relevent, SSrat, statnet Reverse imports: btergm, compete, ftsspec, geomnet, ggnetwork, gwdegree, keyplayer, latentnet, netdiffuseR, OutbreakTools, qgraph, statnetWeb, tnam, VBLPCM Reverse suggests: asnipe, blockmodeling, ChemoSpec, ergm, GGally, haplotypes, HiveR, MSG, network, rDNA, sand, tsna Reverse enhances: texreg"	"null"	"null"	"Basic network measures and visualization tools."	"true"
"Network Analysis"	"networkDynamic"	"https://cran.r-project.org/web/packages/networkDynamic/"	"Support for dynamic, (inter)temporal networks."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package networkDynamic networkDynamic: Dynamic Extensions for Network Objects Simple interface routines to facilitate the handling of network objects with complex intertemporal data. This is a part of the ""statnet"" suite of packages for network analysis. Version: 0.9.0 Depends: R (≥ 3.0.0), network (≥ 1.13) Imports: statnet.common, methods LinkingTo: network Suggests: testthat Published: 2016-01-15 Author: Carter T. Butts [aut], Ayn Leslie-Cook [aut], Pavel N. Krivitsky [aut], Skye Bender-deMoll [aut, cre], Zack Almquist [ctb], David R. Hunter [ctb], Li Wang [ctb], Kirk Li [ctb], Steven M. Goodreau [ctb], Jeffrey Horner [ctb], Martina Morris [ctb] Maintainer: Skye Bender-deMoll <skyebend at uw.edu> BugReports: NA License: GPL-3 URL: http://statnet.org NeedsCompilation: yes Materials: ChangeLog In views: gR CRAN checks: networkDynamic results Downloads: Reference manual: networkDynamic.pdf Vignettes: networkDynamic Example Package source: networkDynamic_0.9.0.tar.gz Windows binaries: r-devel: networkDynamic_0.9.0.zip, r-release: networkDynamic_0.9.0.zip, r-oldrel: networkDynamic_0.9.0.zip OS X Mavericks binaries: r-release: networkDynamic_0.9.0.tgz, r-oldrel: networkDynamic_0.9.0.tgz Old sources: networkDynamic archive Reverse dependencies: Reverse depends: EpiModel, ndtv, networkDynamicData, tergm, tsna Reverse imports: OutbreakTools, statnet Reverse suggests: sand"	"null"	"null"	"Support for dynamic, (inter)temporal networks."	"true"
"Network Analysis"	"ndtv"	"https://cran.r-project.org/web/packages/ndtv/"	"Tools to construct animated visualizations of dynamic network data in various formats."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1"	"5"	"2"	"GitHub - statnet/ndtv: ndtv: Network Dynamic Temporal Visualizations in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 5 Star 1 Fork 2 statnet/ndtv Code Issues 20 Pull requests 0 Pulse Graphs ndtv: Network Dynamic Temporal Visualizations in R https://cran.r-project.org/web/packages/ndtv/index.html 133 commits 1 branch 1 release Fetching contributors HTML 97.3% R 2.2% Other 0.5% HTML R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.10.0 Nothing to show New pull request Latest commit 6fa24a6 May 19, 2016 skyebend added status badges Permalink Failed to load latest commit information. htmlWidgetShinyTest version bumps Feb 19, 2016 ndtv added execution tests for export.pajek.net, and updated documentation May 9, 2016 ndtv_d3_vignette update to ndtv-d3 vignette to show htmlwidget Oct 6, 2015 staticNetShinyTest version bumps, workshop updates Dec 1, 2015 workshop 'final' version of ndtv and dynamics tutorial Apr 5, 2016 .travis.yml Update .travis.yml Apr 21, 2016 README.md added status badges May 19, 2016 README.md ndtv: Network Dynamic Temporal Visualizations The R package ndtv renders dynamic network data from networkDynamic objects as movies, interactive HTML5 animations, or other static representations of changing relational structures and attributes. by Skye Bender-deMoll, Martina Morris, and the http://statnet.org team. This work was supported by grant R01HD68395 from the National Institute of Health Install Released versions of the package are on CRAN at https://cran.r-project.org/web/packages/ndtv/index.html install in R with install.packages('ndtv')  A network movie example library(ndtv) # load the package data(short.stergm.sim)  # load an example dynamic network dataset render.d3movie(short.stergm.sim) # create a HTML5 animation   Docs and Examples The package vignette is at: https://github.com/statnet/ndtv/blob/master/ndtv/vignettes/ndtv.pdf A longer tutorial with more background is at: http://statnet.csde.washington.edu/workshops/SUNBELT/current/ndtv/ndtv_workshop.html Citation and License This software is distributed under the GPL-3 license. It is free, open source, and has the attribution requirements (GPL Section 7) at http://statnet.org/attribution To cite package ‘ndtv’ in publications use: Skye Bender-deMoll (2016). ndtv: Network Dynamic Temporal Visualizations. R package version 0.10. http://statnet.org Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/statnet/ndtv"	"Tools to construct animated visualizations of dynamic network data in various formats."	"true"
"Network Analysis"	"statnet"	"http://statnet.org/"	"The project behind many R network analysis packages."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Statnet   statnet Home statnet Wiki statnet Users Group About Us Citing statnet License and source code attribution requirements statnet Software tools for the analysis, simulation and visualization of network data. Welcome to statnet! Visit the statnet Wiki for information on, background material for and access to the statnet suite of packages for network analysis. You can find installation instructions, tutorials, and developer resources at the wiki. What is statnet? statnet is a suite of software packages for network analysis that implement recent advances in the statistical modeling of networks. The analytic framework is based on Exponential family Random Graph Models (ergm). statnet provides a comprehensive framework for ergm-based network modeling, including tools for model estimation, model evaluation, model-based network simulation, and network visualization. This broad functionality is powered by a central Markov chain Monte Carlo (MCMC) algorithm. statnet has a different purpose than the excellent packages UCINET or Pajek; the focus is on statistical modeling of network data. The statistical modeling capabilities of statnet include ERGMs, latent space and latent cluster models.  The packages are written in a combination of (the open-source statistical language) R and (ANSI standard) C, and are called from the R command line. And because it runs in the R package (www.r-project.org), you also have access to the full functionality of R, including the packages ""network"" and ""sna"" written by Carter Butts.  statnet has a command line interface, not a GUI, with a syntax that resembles R.   CONTACT CSDE UW LINKS:  MyUW | Web Pine | Libraries | Computing | UWired | Directory | Campus Maps          "	"null"	"null"	"The project behind many R network analysis packages."	"true"
"Network Analysis"	"ergm"	"https://cran.r-project.org/web/packages/ergm/index.html"	"Exponential random graph models in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package ergm ergm: Fit, Simulate and Diagnose Exponential-Family Models for Networks An integrated set of tools to analyze and simulate networks based on exponential-family random graph models (ERGM). ""ergm"" is a part of the ""statnet"" suite of packages for network analysis. Version: 3.6.0 Depends: statnet.common (≥ 3.3), network (≥ 1.13) Imports: robustbase (≥ 0.9-10), coda (≥ 0.18-1), trust, Matrix, lpSolve, parallel, methods, MASS Suggests: lattice, latticeExtra, sna, latentnet, rmarkdown, ergm.userterms, tergm, Rmpi Published: 2016-03-25 Author: Mark S. Handcock [aut], David R. Hunter [aut], Carter T. Butts [aut], Steven M. Goodreau [aut], Pavel N. Krivitsky [aut, cre], Martina Morris [aut], Li Wang [ctb], Kirk Li [ctb], Skye Bender-deMoll [ctb] Maintainer: Pavel N. Krivitsky <pavel at uow.edu.au> BugReports: NA License: GPL-3 + file LICENSE URL: http://statnet.org NeedsCompilation: yes Citation: ergm citation info Materials: NEWS In views: SocialSciences, gR CRAN checks: ergm results Downloads: Reference manual: ergm.pdf Vignettes: ergm Example Package source: ergm_3.6.0.tar.gz Windows binaries: r-devel: ergm_3.6.0.zip, r-release: ergm_3.6.0.zip, r-oldrel: ergm_3.6.0.zip OS X Mavericks binaries: r-release: ergm_3.6.0.tgz, r-oldrel: ergm_3.6.0.tgz Old sources: ergm archive Reverse dependencies: Reverse depends: Bergm, blkergm, CCMnet, ergm.count, ergm.ego, ergm.graphlets, ergm.rank, ergm.userterms, gwdegree, hergm, latentnet, lvm4net, statnetWeb, tergm, VBLPCM, xergm.common Reverse imports: btergm, EpiModel, statnet Reverse linking to: blkergm, ergm.count, ergm.graphlets, ergm.rank, ergm.userterms, tergm Reverse suggests: broom, sand, texreg, tsna Reverse enhances: stargazer"	"null"	"null"	"Exponential random graph models in R."	"true"
"Network Analysis"	"latentnet"	"https://cran.r-project.org/web/packages/latentnet/index.html"	"Latent position and cluster models for network objects."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package latentnet latentnet: Latent Position and Cluster Models for Statistical Networks Fit and simulate latent position and cluster models for statistical networks. Version: 2.7.1 Depends: R (≥ 2.8.0), statnet.common, network, ergm (≥ 3.2.0) Imports: sna, mvtnorm, abind, coda (≥ 0.17.1), tools Suggests: KernSmooth, snowFT, rgl, heplots, rlecuyer, ergm.userterms Published: 2015-06-20 Author: Pavel N. Krivitsky [aut, cre], Mark S. Handcock [aut], Susan M. Shortreed [ctb], Jeremy Tantrum [ctb], Peter D. Hoff [ctb], Li Wang [ctb], Kirk Li [ctb] Maintainer: Pavel N. Krivitsky <pavel at uow.edu.au> BugReports: NA License: GPL-3 + file LICENSE URL: http://www.statnet.org NeedsCompilation: yes Citation: latentnet citation info Materials: ChangeLog In views: Cluster, HighPerformanceComputing, SocialSciences CRAN checks: latentnet results Downloads: Reference manual: latentnet.pdf Package source: latentnet_2.7.1.tar.gz Windows binaries: r-devel: latentnet_2.7.1.zip, r-release: latentnet_2.7.1.zip, r-oldrel: latentnet_2.7.1.zip OS X Mavericks binaries: r-release: latentnet_2.7.1.tgz, r-oldrel: latentnet_2.7.1.tgz Old sources: latentnet archive Reverse dependencies: Reverse depends: hergm Reverse suggests: ergm, statnet Reverse enhances: texreg"	"null"	"null"	"Latent position and cluster models for network objects."	"true"
"Network Analysis"	"tnet"	"https://cran.r-project.org/web/packages/tnet/index.html"	"Network measures for weighted, two-mode and longitudinal networks."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package tnet tnet: Software for Analysis of Weighted, Two-Mode, and Longitudinal Networks R package for analyzing weighted, two-mode, and longitudinal networks. Version: 3.0.14 Depends: R (≥ 2.13.0), igraph, survival Published: 2015-11-18 Author: Tore Opsahl Maintainer: Tore Opsahl <tore at opsahl.co.uk> BugReports: NA License: GPL-3 URL: NA NeedsCompilation: no Citation: tnet citation info Materials: ChangeLog CRAN checks: tnet results Downloads: Reference manual: tnet.pdf Package source: tnet_3.0.14.tar.gz Windows binaries: r-devel: tnet_3.0.14.zip, r-release: tnet_3.0.14.zip, r-oldrel: tnet_3.0.14.zip OS X Mavericks binaries: r-release: tnet_3.0.14.tgz, r-oldrel: tnet_3.0.14.tgz Old sources: tnet archive"	"null"	"null"	"Network measures for weighted, two-mode and longitudinal networks."	"true"
"Network Analysis"	"rgexf"	"https://bitbucket.org/gvegayon/rgexf/wiki/Home"	"Export network objects from R to, for manipulation with network software like or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"gvegayon / rgexf / wiki / Home — Bitbucket  Bitbucket Features Pricing owner/repository English English 日本語 Sign up Log in rgexf Actions Clone Compare Fork Navigation Overview Source Commits Branches 1 Pull requests 13 Issues Wiki Downloads Settings HTTPS HTTPS SSH Need help cloning? Learn how to clone a repository. Clone in SourceTree Atlassian SourceTree is a free Git and Mercurial client for Windows. Atlassian SourceTree is a free Git and Mercurial client for Mac. George Vega Yon rgexf Wiki Clone wiki HTTPS HTTPS SSH Need help cloning? Learn how to clone a repository. Clone in SourceTree Atlassian SourceTree is a free Git and Mercurial client for Windows. Atlassian SourceTree is a free Git and Mercurial client for Mac. rgexf / Home View History es- en rgexf: An R package to build GEXF graph files The first R package to work with GEXF graph files (used in Gephi and others). Using XML library, it allows the user to easily build/read graph files including attributes, GEXF viz attributes (such as colour, size, and position), network dynamics (for both edges and nodes, including spells) and edges weighting. Users can build/handle graphs element-by-element or massively through data-frames, visualize the graph on a web browser through sigmajs javascript library and interact with the igraph package.. (Installation) News [2015-02-03] Version 0.15.2.3 of rgexf is on CRAN. Just updating emails... [2014-03-10] Version 0.14.9 of rgexf is on CRAN! solves issues 15-18. Thanks =). [2013-08-07] Version 0.13.8 of rgexf is on CRAN! New plot.gexf method and igraph integration working =). [2013-05-09] Version 0.13.05 of rgexf (transitory) solves issues N 9 & 10. Looking forward for the next CRAN version. [2013-03-14] Version 0.13.03 of rgexf is on its way to CRAN. It now supports working with spells! [2013-01-04] Version 0.13.01 of rgexf is on its way to CRAN. Significant improvements and new features! [2012-06-19] Version 0.12.06 of rgexf is on CRAN! Now it can be directly download from R. [2012-03-29] Version 0.12.03.29 of rgexf has been released including many bug fixes. Please download the lastest version to check it out. Example 1: Static net # Creating a group of individuals and their relations > people <- data.frame(matrix(c(1:4, 'juan', 'pedro', 'matthew', 'carlos'),ncol=2)) > people      [,1] [,2]     [1,] ""1""  ""juan""   [2,] ""2""  ""pedro""  [3,] ""3""  ""matthew"" [4,] ""4""  ""carlos""  # Defining the relations structure > relations <- data.frame(matrix(c(1,4,1,2,1,3,2,3,3,4,4,2), ncol=2, byrow=T))      [,1] [,2] [1,]    1    4 [2,]    1    2 [3,]    1    3 [4,]    2    3 [5,]    3    4 [6,]    4    2  # Getting things done > write.gexf(people, relations)  <?xml version=""1.0"" encoding=""UTF-8""?> <gexf xmlns=""http://www.gexf.net/1.2draft"" xmlns:viz=""http://www.gexf.net/1.1draft/viz"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd"" version=""1.2"">   <meta lastmodifieddate=""2013-03-22"">     <creator>NodosChile</creator>     <description>A graph file writing in R using ""rgexf""</description>     <keywords>gexf graph, NodosChile, R, rgexf</keywords>   </meta>   <graph mode=""static"">     <nodes>       <node id=""1"" label=""2""/>       <node id=""2"" label=""4""/>       <node id=""3"" label=""3""/>       <node id=""4"" label=""1""/>     </nodes>     <edges>       <edge id=""0"" source=""1"" target=""4"" weight=""1.0""/>       <edge id=""1"" source=""1"" target=""2"" weight=""1.0""/>       <edge id=""2"" source=""1"" target=""3"" weight=""1.0""/>       <edge id=""3"" source=""2"" target=""3"" weight=""1.0""/>       <edge id=""4"" source=""3"" target=""4"" weight=""1.0""/>       <edge id=""5"" source=""4"" target=""2"" weight=""1.0""/>     </edges>   </graph> </gexf>  Example 2: Dynamic net # Defining the dynamic structure, note that there are some nodes that have NA at the end. > time<-matrix(c(10.0,13.0,2.0,2.0,12.0,rep(NA,3)), nrow=4, ncol=2) > time      [,1] [,2] [1,]   10   12 [2,]   13   NA [3,]    2   NA [4,]    2   NA  # Getting things done > write.gexf(people, relations, nodeDynamic=time)  <?xml version=""1.0"" encoding=""UTF-8""?> <gexf xmlns=""http://www.gexf.net/1.2draft"" xmlns:viz=""http://www.gexf.net/1.1draft/viz"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd"" version=""1.2"">   <graph mode=""dynamic"" start=""2"" end=""13"" timeformat=""double"" defaultedgetype=""undirected"">     <nodes>       <node id=""1"" label=""juan"" start=""10"" end=""12""/>       <node id=""2"" label=""pedro"" start=""13""/>       <node id=""3"" label=""matthew"" start=""2""/>       <node id=""4"" label=""carlos"" start=""2""/>     </nodes>     <edges>       <edge source=""1"" target=""4""/>       <edge source=""1"" target=""2""/>       <edge source=""1"" target=""3""/>       <edge source=""2"" target=""3""/>       <edge source=""3"" target=""4""/>       <edge source=""4"" target=""2""/>     </edges>   </graph> </gexf>  Example 3: More complex... Dynamic graph with attributes both for nodes and edges First we define dynamics > time.nodes<-matrix(c(10.0,13.0,2.0,2.0,12.0,rep(NA,3)), nrow=4, ncol=2) > time.nodes      [,1] [,2] [1,]   10   12 [2,]   13   NA [3,]    2   NA [4,]    2   NA  > time.edges<-matrix(c(10.0,13.0,2.0,2.0,12.0,1,5,rep(NA,5)), nrow=6, ncol=2) > time.edges      [,1] [,2] [1,]   10    5 [2,]   13   NA [3,]    2   NA [4,]    2   NA [5,]   12   NA [6,]    1   NA  Now we define the attribute values # Defining a data frame of attributes for nodes and edges  > node.att <- data.frame(letrafavorita=letters[1:4], numbers=1:4, stringsAsFactors=F) > node.att   letrafavorita numbers 1             a       1 2             b       2 3             c       3 4             d       4  > edge.att <- data.frame(letrafavorita=letters[1:6], numbers=1:6, stringsAsFactors=F) > edge.att   letrafavorita numbers 1             a       1 2             b       2 3             c       3 4             d       4 5             e       5 6             f       6  # Getting the things done > write.gexf(nodes=people, edges=relations, edgeDynamic=time.edges, edgesAtt=edge.att, +      nodeDynamic=time.nodes, nodesAtt=node.att)  <?xml version=""1.0"" encoding=""UTF-8""?> <gexf xmlns=""http://www.gexf.net/1.2draft"" xmlns:viz=""http://www.gexf.net/1.1draft/viz"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd"" version=""1.2"">   <graph mode=""dynamic"" start=""1"" end=""13"" timeformat=""double"" defaultedgetype=""undirected"">     <attributes class=""node"" mode=""static"">       <attribute id=""att1"" title=""letrafavorita"" type=""string""/>       <attribute id=""att2"" title=""numbers"" type=""integer""/>     </attributes>     <attributes class=""edge"" mode=""static"">       <attribute id=""att1"" title=""letrafavorita"" type=""string""/>       <attribute id=""att2"" title=""numbers"" type=""integer""/>     </attributes>     <nodes>       <node id=""1"" label=""juan"" start=""10"" end=""12"">         <attvalues>           <attvalue for=""att1"" value=""a""/>           <attvalue for=""att2"" value=""1""/>         </attvalues>       </node>       <node id=""2"" label=""pedro"" start=""13"">         <attvalues>           <attvalue for=""att1"" value=""b""/>           <attvalue for=""att2"" value=""2""/>         </attvalues>       </node>       <node id=""3"" label=""matthew"" start="" 2"">         <attvalues>           <attvalue for=""att1"" value=""c""/>           <attvalue for=""att2"" value=""3""/>         </attvalues>       </node>       <node id=""4"" label=""carlos"" start="" 2"">         <attvalues>           <attvalue for=""att1"" value=""d""/>           <attvalue for=""att2"" value=""4""/>         </attvalues>       </node>     </nodes>     <edges>       <edge source=""1"" target=""4"" start=""10"" end="" 5"">         <attvalues>           <attvalue for=""att1"" value=""a""/>           <attvalue for=""att2"" value=""1""/>         </attvalues>       </edge>       <edge source=""1"" target=""2"" start=""13"">         <attvalues>           <attvalue for=""att1"" value=""b""/>           <attvalue for=""att2"" value=""2""/>         </attvalues>       </edge>       <edge source=""1"" target=""3"" start="" 2"">         <attvalues>           <attvalue for=""att1"" value=""c""/>           <attvalue for=""att2"" value=""3""/>         </attvalues>       </edge>       <edge source=""2"" target=""3"" start="" 2"">         <attvalues>           <attvalue for=""att1"" value=""d""/>           <attvalue for=""att2"" value=""4""/>         </attvalues>       </edge>       <edge source=""3"" target=""4"" start=""12"">         <attvalues>           <attvalue for=""att1"" value=""e""/>           <attvalue for=""att2"" value=""5""/>         </attvalues>       </edge>       <edge source=""4"" target=""2"" start="" 1"">         <attvalues>           <attvalue for=""att1"" value=""f""/>           <attvalue for=""att2"" value=""6""/>         </attvalues>       </edge>     </edges>   </graph> </gexf>  More real-life examples at [[http://www.nodoschile.org/visualizaciones/]] Updated 2015-08-04 Blog Support Plans & pricing Documentation API Site status Version info Terms of service Privacy policy English Git 2.7.4.1.g5468f9e Mercurial 3.6.3 Django 1.7.11 Python 2.7.3 b7520e3d05e9 / b7520e3d05e9 @ app-104 JIRA Software Confluence Bamboo SourceTree HipChat Atlassian Help Online help Learn Git Keyboard shortcuts Latest features Bitbucket tutorials Site status Support"	"null"	"null"	"Export network objects from R to, for manipulation with network software like or."	"true"
"Network Analysis"	"GEXF"	"http://gexf.net/format/"	"Export network objects from R to, for manipulation with network software like or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Export network objects from R to, for manipulation with network software like or."	"false"
"Network Analysis"	"Gephi"	"https://gephi.org/"	"Export network objects from R to, for manipulation with network software like or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1530"	"158"	"965"	"GitHub - gephi/gephi: trunk Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 158 Star 1,530 Fork 965 gephi/gephi Code Issues 307 Pull requests 11 Wiki Pulse Graphs trunk 4,328 commits 9 branches 11 releases 42 contributors Java 99.3% Other 0.7% Java Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 0.8.1 0.8.2 0.9.0 0.9.1 datalab gh-pages master mvn-thirdparty-repo new-vizengine Nothing to show v0.9.1 v0.9.0 v0.8.2 v0.8.1 v0.8.0 v0.8.0-alpha v0.7.0 v0.7.0-alpha4 v0.7.0-alpha3 v0.7.0-alpha2 v0.7.0-alpha Nothing to show New pull request Latest commit 494bbaf Jun 24, 2016 eduramiba Enable tests in deployment profile Permalink Failed to load latest commit information. .tx Synchronize translations Feb 14, 2016 modules Merge branch '0.9.1' Jun 24, 2016 src Implement #1346 Feb 7, 2016 translations #1214 Synchronized new spanish translations with transifex Dec 14, 2015 .gitignore Debug Appearance UI Jul 28, 2013 .travis.yml Try to reduce noisy maven upload logs so travis log limit is not reached Apr 1, 2016 COPYING.txt Add licences Oct 9, 2012 README.md Update all versions to 0.9.2-SNAPSHOT and README Feb 15, 2016 cddl-1.0.txt Add licences Oct 10, 2012 gpl-3.0.txt Add licences Oct 10, 2012 pom.xml Enable tests in deployment profile Jun 24, 2016 README.md Gephi - The Open Graph Viz Platform Gephi is an award-winning open-source platform for visualizing and manipulating large graphs. It runs on Windows, Mac OS X and Linux. Localization is available in French, Spanish, Japanese, Russian, Brazilian Portuguese, Chinese and Czech. Fast Powered by a built-in OpenGL engine, Gephi is able to push the envelope with very large networks. Visualize networks up to a million elements. All actions (e.g. layout, filter, drag) run in real-time. Simple Easy to install and get started. An UI that is centered around the visualization. Like Photoshop™ for graphs. Modular Extend Gephi with plug-ins. The architecture is built on top of Netbeans Platform and can be extended or reused easily through well-written APIs. Download Gephi for Windows, Mac OS X and Linux and consult the release notes. Example datasets can be found on our wiki. Install and use Gephi Download and Install Gephi on your computer. Get started with the Quick Start and follow the Tutorials. Load a sample dataset and start to play with the data. If you run into any trouble or have questions consult our forum. Latest releases Stable Latest stable release on gephi.org. Nightly builds Current version is 0.9.2-SNAPSHOT gephi-0.9.2-SNAPSHOT-windows.exe (Windows) gephi-0.9.2-SNAPSHOT-macos.dmg (Mac OS X) gephi-0.9.2-SNAPSHOT-linux.tar.gz (Linux) gephi-0.9.2-SNAPSHOT-sources.tar.gz (Sources) Developer Introduction Gephi is developed in Java and uses OpenGL for its visualization engine. Built on the top of Netbeans Platform, it follows a loosely-coupled, modular architecture philosophy. Gephi is split into modules, which depend on other modules through well-written APIs. Plugins can reuse existing APIs, create new services and even replace a default implementation with a new one. Consult the Javadoc for an overview of the APIs. Requirements Java JDK 7 or 8 with preferably Oracle Java JDK. Apache Maven version 3.2.2 or later Checkout and Build the sources Fork the repository and clone git clone git@github.com:username/gephi.git  Run the following command or open the project in Netbeans mvn clean install  Once built, one can test running Gephi cd modules/application mvn nbm:cluster-app nbm:run-platform  Create Plug-ins Gephi is extensible and lets developers create plug-ins to add new features, or to modify existing features. For example, you can create a new layout algorithm, add a metric, create a filter or a tool, support a new file format or database, or modify the visualization. Plugins Portal Plugins Quick Start (5 minutes) Browse the plugins created by the community We've created a Plugins Bootcamp to learn by examples. Gephi Toolkit The Gephi Toolkit project packages essential Gephi modules (Graph, Layout, Filters, IO…) in a standard Java library which any Java project can use for getting things done. It can be used on a server or command-line tool to do the same things Gephi does but automatically. Download GitHub Project Toolkit Portal License Gephi main source code is distributed under the dual license CDDL 1.0 and GNU General Public License v3. Read the Legal FAQs to learn more. Copyright 2011 Gephi Consortium. All rights reserved. The contents of this file are subject to the terms of either the GNU General Public License Version 3 only (""GPL"") or the Common Development and Distribution License(""CDDL"") (collectively, the ""License""). You may not use this file except in compliance with the License. You can obtain a copy of the License at http://gephi.github.io/developers/license/ or /cddl-1.0.txt and /gpl-3.0.txt. See the License for the specific language governing permissions and limitations under the License. When distributing the software, include this License Header Notice in each file and include the License files at /cddl-1.0.txt and /gpl-3.0.txt. If applicable, add the following below the License Header, with the fields enclosed by brackets [] replaced by your own identifying information: ""Portions Copyrighted [year] [name of copyright owner]"" If you wish your version of this file to be governed by only the CDDL or only the GPL Version 3, indicate your decision by adding ""[Contributor] elects to include this software in this distribution under the [CDDL or GPL Version 3] license."" If you do not indicate a single choice of license, a recipient has the option to distribute your version of this file under either the CDDL, the GPL Version 3 or to extend the choice of license to its licensees as provided above. However, if you add GPL Version 3 code and therefore, elected the GPL Version 3 license, then the option applies only if the new code is made subject to such option by the copyright holder. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/gephi/gephi"	"Export network objects from R to, for manipulation with network software like or."	"true"
"Network Analysis"	"Sigma"	"http://sigmajs.org/"	"Export network objects from R to, for manipulation with network software like or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Sigma js sigmajs get started features use cases tutorial references sigmajs tutorial v1.1.0 download Sigma is a JavaScript library dedicated to graph drawing. It makes easy to publish networks on Web pages, and allows developers to integrate network exploration in rich Web applications. Get started with sigma The following example shows how simple it is to use sigma to display a JSON encoded graph file. Data {   ""nodes"": [     {       ""id"": ""n0"",       ""label"": ""A node"",       ""x"": 0,       ""y"": 0,       ""size"": 3     },     {       ""id"": ""n1"",       ""label"": ""Another node"",       ""x"": 3,       ""y"": 1,       ""size"": 2     },     {       ""id"": ""n2"",       ""label"": ""And a last one"",       ""x"": 1,       ""y"": 3,       ""size"": 1     }   ],   ""edges"": [     {       ""id"": ""e0"",       ""source"": ""n0"",       ""target"": ""n1""     },     {       ""id"": ""e1"",       ""source"": ""n1"",       ""target"": ""n2""     },     {       ""id"": ""e2"",       ""source"": ""n2"",       ""target"": ""n0""     }   ] }   HTML <html> <head> <style type=""text/css"">   #container {     max-width: 400px;     height: 400px;     margin: auto;   } </style> </head> <body> <div id=""container""></div> <script src=""sigma.min.js""></script> <script src=""sigma.parsers.json.min.js""></script> <script>   sigma.parsers.json('data.json', {     container: 'container',     settings: {       defaultNodeColor: '#ec5148'     }   }); </script> </body> </html>  Result Features Dedicated to graph drawing. Sigma provides a lot of built-in features, such as Canvas and WebGL renderers or mouse and touch support, to make networks manipulation on Web pages smooth and fast for the user. Plug and play! The default configuration of sigma deals with mouse and touch support, refreshing and rescaling when the container's size changes, rendering on WebGL if the browser supports it and Canvas else, recentering the graph and adapting the nodes and edges sizes to the screen... Custom rendering Sigma provides a lot of different settings to make it easy to customize how to draw and interact with networks. And you can also directly add your own functions to your scripts to render nodes and edges the exact way you want. Highly extensible Sigma is a rendering engine, and it is up to you to add all the interactivity you want. The public API makes it possible to modify the data, move the camera, refresh the rendering, listen to events... Use cases From beginners to advanced users. Sigma aims to help you display networks on the Web, from simple interactive publications of networks to rich Web applications featuring dynamic network exploration. Display a network You can just instanciate sigma by giving it the data and the DOM container, and it works. And for JSON or GEXF encoded graphs, the related plugin will deal with loading and parsing the file. Add some basic interaction Update the data and refresh the drawing when you want. Bind custom functions to sigma's events to adapt the interactions to the needs of your application. Develop and use plugins For more complex use cases, it is possible to develop and use plugins that add features to sigma. Some are already available on the repository, for animating the graph or apply a force-directed layout to your graph. Tutorial Let's assume we have a graph, exported in GEXF from Gephi, and we want to display it with sigma. In this tutorial, we will use the graph of character co-occurrences in Victor Hugo’s Les Misérables, available by default in Gephi. But we also want highlight a node's neighborhood when it is clicked, by drawing every other nodes as grey. 1. Load and display the graph Here, let's just assume that in our web page, we have an HTML element with the id sigma-container to display our graph. This element's width and height can be whatever we want, and sigma will adapt the elements it adds into it by itself. Also, we must import sigma and add a script tag that will contain the JavaScript code. Then, it's pretty easy: since sigma provides a plugin dedicated to load and parse GEXF graph files. So, all we have to do is to load the plugin and use it, as described in the plugin's documentation. At this point, the graph should already be displayed, and manipulated with the mouse or touch: <!-- [...] --> <div id=""sigma-container""></div> <script src=""path/to/sigma.js""></script> <script src=""path/to/sigma.parsers.gexf.min.js""></script> <script>   sigma.parsers.gexf(     'path/to/les-miserables.gexf',     { // Here is the ID of the DOM element that       // will contain the graph:       container: 'sigma-container'     },     function(s) {       // This function will be executed when the       // graph is displayed, with ""s"" the related       // sigma instance.     }   ); </script> <!-- [...] --> 2. Bind callbacks to events The first thing we need to do is to facilitate the way to retrieve the neighbors of a node. And the best way to do that is to add a method to the graph model. Basically, the graph model provides a public access to the nodes and edges arrays, but it also maintains some more indexes accessible only from its methods, including the index of every neighbors for each node. Then, we just need to bind functions to some events, that will first modify the colors of the nodes and edges, and then refresh the rendering. And it's done! <!-- [...] --> <div id=""sigma-container""></div> <script src=""path/to/sigma.js""></script> <script src=""path/to/sigma.parsers.min.gexf.js""></script> <script>   // Add a method to the graph model that returns an   // object with every neighbors of a node inside:   sigma.classes.graph.addMethod('neighbors', function(nodeId) {     var k,         neighbors = {},         index = this.allNeighborsIndex[nodeId] || {};      for (k in index)       neighbors[k] = this.nodesIndex[k];      return neighbors;   });    sigma.parsers.gexf(     'path/to/les-miserables.gexf',     {       container: 'sigma-container'     },     function(s) {       // We first need to save the original colors of our       // nodes and edges, like this:       s.graph.nodes().forEach(function(n) {         n.originalColor = n.color;       });       s.graph.edges().forEach(function(e) {         e.originalColor = e.color;       });        // When a node is clicked, we check for each node       // if it is a neighbor of the clicked one. If not,       // we set its color as grey, and else, it takes its       // original color.       // We do the same for the edges, and we only keep       // edges that have both extremities colored.       s.bind('clickNode', function(e) {         var nodeId = e.data.node.id,             toKeep = s.graph.neighbors(nodeId);         toKeep[nodeId] = e.data.node;          s.graph.nodes().forEach(function(n) {           if (toKeep[n.id])             n.color = n.originalColor;           else             n.color = '#eee';         });          s.graph.edges().forEach(function(e) {           if (toKeep[e.source] && toKeep[e.target])             e.color = e.originalColor;           else             e.color = '#eee';         });          // Since the data has been modified, we need to         // call the refresh method to make the colors         // update effective.         s.refresh();       });        // When the stage is clicked, we just color each       // node and edge with its original color.       s.bind('clickStage', function(e) {         s.graph.nodes().forEach(function(n) {           n.color = n.originalColor;         });          s.graph.edges().forEach(function(e) {           e.color = e.originalColor;         });          // Same as in the previous event:         s.refresh();       });     }   ); </script> <!-- [...] --> References Documentation Many different resources are available to help you, such as the Wiki, the examples and the plugins. And if your questions remain unsolved, you can post an issue on the Github repository. Source code The source code is tested, commented, and published on Github under the MIT License. And contributions are welcome! Please read the repository README.md file before sending pull requests. fork on github follow on twitter download v1.1.0 SciencesPo - médialab medialab Sigmajs is developed by Alexis Jacomy, with the help of Guillaume Plique. Design by Daniele Guido A special thanks to Sciences-Po | Médialab."	"null"	"null"	"Export network objects from R to, for manipulation with network software like or."	"true"
"Network Analysis"	"visNetwork"	"https://github.com/DataKnowledge/visNetwork"	"Using vis.js library for network visualization."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"0"	"6"	"1"	"GitHub - DataKnowledge/visNetwork Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 6 Star 0 Fork 1 DataKnowledge/visNetwork Code Issues 0 Pull requests 0 Pulse Graphs No description or website provided. 2 commits 1 branch 0 releases 1 contributor Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 645b1e4 Mar 23, 2016 bthieurmel update Permalink Failed to load latest commit information. README.md update Mar 23, 2016 README.md visNetwork has changed ownership (03-23-2016) This package has recently been transfered to the organization Datastorm-open (https://github.com/datastorm-open). New developments and bug fixes will be now updated at https://github.com/datastorm-open/visNetwork. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/DataKnowledge/visNetwork"	"Using vis.js library for network visualization."	"true"
"Lists"	"Package Development"	"https://github.com/ropensci/PackageDevelopment"	"R packages to improve package development."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"13"	"4"	"2"	"GitHub - ropensci/PackageDevelopment: Task View: PackageDevelopment Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 4 Star 13 Fork 2 ropensci/PackageDevelopment Code Issues 1 Pull requests 0 Pulse Graphs Task View: PackageDevelopment 167 commits 1 branch 0 releases 6 contributors R 77.4% Makefile 22.6% R Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 708fec1 Jul 14, 2016 leeper add after (closes #68) Permalink Failed to load latest commit information. .gitignore simply workflow and repo contents May 1, 2015 CONTRIBUTING.md add RStata (closes #41) Feb 5, 2016 Makefile cleanup urls Apr 28, 2016 PackageDevelopment.ctv add after (closes #68) Jul 14, 2016 README.md add after (closes #68) Jul 14, 2016 buildxml.R add Jeff Leek link (closes #58) Jun 14, 2016 checkurls.R cleanup urls Apr 28, 2016 pkgs.md add after (closes #68) Jul 14, 2016 README.md CRAN Task View: Package Development Do not edit this README by hand. See CONTRIBUTING.md. ----------------- -------------------------- Maintainer: Thomas J. Leeper Contact: thosjleeper at gmail.com Version: 2016-07-14 Packages provide a mechanism for loading optional code, data, and documentation as needed. At the very minimum only a text editor and an R installation are needed for package creation. Nonetheless many useful tools and R packages themselves have been provided to ease or improve package development. This Task View focuses on these tools/R packages, grouped by topics. The main reference for packages development is the ""Writing R Extension"" manual. For further documentation and tutorials, see the ""Related links"" section below. If you think that some packages or tools are missing from the list, feel free to e-mail (thosjleeper at gmail dot com) me or contribute directly to the Task View by submitting a pull request on GitHub. Many thanks to Christopher Gandrud, Cristophe Dutang, Darren Norris, Dirk Eddelbuettel, Gabor Grothendieck, Gregory Jefferis, John Maindonald, Luca Braglia, Spencer Graves, Tobias Verbeke, and the R-core team for contributions. First steps Searching for Existing Packages Before starting a new package it's worth searching for already available packages, both from a developer's standpoint (""do not reinvent the wheel"") and from a user's one (many packages implementing same/similar procedures can be confusing). If a package addressing the same functionality already exists, you may consider contributing at it instead of starting a new one. utils::RSiteSearch() allows to search for keywords/phrases in help pages (all the CRAN packages except those for Windows only and some from Bioconductor), vignettes or task views, using the search engine at http://search.r-project.org/. A convenient wrapper around RSiteSearch that adds hits ranking is findFn() function, from sos. RSeek allows to search for keywords/phrases in books, task views, support lists, function/packages, blogs etc. Rdocumentation allows to search for keywords/phrases in help pages for all CRAN and some Bioconductor/GitHub packages. Crantastic! maintains an up-to-date and tagged directory of packages on CRAN. The Managed R Archive Network from Revolution Analytics is a CRAN mirror that additionally provides visualizations of package dependency trees. http://www.r-pkg.org/ is an unofficial CRAN mirror that provides a relatively complete archive of package and read-only access to package sources on Github. CRANberries provides a feed of new, updated, and removed packages for CRAN. If you're looking to create a package, but want ideas for what sorts of packages are in demand, the rOpenSci maintains a wishlist for science-related packages and a TODO list of web services and data APIs in need of packaging. Initializing an R package utils::package.skeleton() automates some of the setup for a new source package. It creates directories, saves functions, data, and R code files provided to appropriate places, and creates skeleton help files and a Read-and-delete-me file describing further steps in packaging kitten() from pkgKitten allows one to specify the main DESCRIPTION entries and doesn't create source code and data files from global environment objects or sourced files. It's used to initialize a simple package that passes R CMD check cleanly. create() from devtools is similar to package.skeleton except it allows to specify DESCRIPTION entries and doesn't create source code and data files from global environment objects or sourced files. mason provides a fun, interactive tool for creating a package based on a variety of inputs. Rcpp.package.skeleton() from Rcpp adds to package.skeleton the C++ via Rcpp handling, by modifying eg. DESCRIPTION and NAMESPACE accordingly, creating examples if needed and allowing the user to specify (with a character vector of paths) which C++ files to include in src directory . Finally the user can decide main DESCRIPTION entries. mvbutils provides a variety of useful functions for development which include tools for managing and analyzing the development environment, auto-generating certain function types, and visualizing a function dependency graph. pagerank (not on CRAN) can calculate a package's PageRank from its dependency graph. When initializing a package, it is worth considering how it should be licensed. CRAN provides a list of the most commonly used software licences for R packages. osi (GitHub) provides a more comprehensive list in a standardized format. Programming Paradigms R is foremost a functional programming language with dynamic typing, but has three built-in forms of object-oriented programming as well as additional object-oriented paradigms available in add-on packages. The built-in S3 classes involve wherein a generic function (e.g., summary) employs a distinct method for an object of a given class (i.e., it is possible to implement class-specific methods for a given generic function). If a package implements new object classes, it is common to implement methods for commonly used generics such as print, summary, etc. These methods must be registered in the package's NAMESPACE file. R.methodsS3 aims to simplify the creation of S3 generic functions and S3 methods. S4 is a more formalized form of object orientation that is available through methods. S4 classes have formal definitions and can dispatch methods based on multiple arguments (not just the first argument, as in S3). S4 is notable for its use of the @ symbol to extract slots from S4 objects. John Chambers's ""How S4 Methods Work"" tutorial may serve as a useful introduction. Reference classes were introduced in R2.12.0 and are also part of methods. They offer a distinct paradigm from S3 and S4 due to the fact that reference class objects are mutable and that methods belong to objects, not generic functions. aoos and R.oo are other packages facilitating object-oriented programming. R6 (Github) provides an alternative to reference classes without a dependency on methods. proto provides a prototype-based object orientated programming paradigm. rtype provides a strong type system. argufy (Not on CRAN), provides a syntax for creating functions with strictly typed arguments, among other possible checks. lambda.r, lambdaR (not on CRAN), and purrr provide interfaces for creating lambda (anonymous) functions. functools (GitHub) provides higher-order functions (Map, Reduce, etc.) common in funcitonal programming. Another feature of R is the ability to rely on both standard and non-standard evaluation of function arguments. Non-standard evaluation is seen in commonly used functions like library and subset and can also be used in packages. substitute() provides the most straightforward interface to non-standard evaluation of function arguments. lazyeval (Github) aims to help developers design packages with parallel function implementations that follow both standard and non-standard evaluation. An increasingly popular form of non-standard evaluation involves chained expressions or ""pipelines"". magrittr provides the %>% chaining operator that passes the results of one expression evaluation to the next expression in the chain, as well as other similar piping operators. pipeR offers a larger set of pipe operators. assertr and ensurer provide (fairly similar) testing frameworks for pipelines. Dependency Management Packages that have dependencies on other packages need to be vigilant of changes to the functionality, behaviour, or API of those packages. packrat (Github) provides facilities for creating local package repositories to manage and check dependencies. checkpoint relies on the Revolution Analytics MRAN repository to access packages from specified dates. pacman (Github) can install, uninstall, load, and unload various versions of packages from CRAN and Github. GRANBase (GitHub) provides some sophisticated tools for managing dependencies and testing packages conditional on changes. Two packages currently provide alternative ways to import objects from packages in non-standard ways (e.g., to assign those objects different names from the names used in their host packages). import (Github) can import numerous objects from a namespace and assign arbitrary names. modules (not on CRAN) provides functionality for importing alternative non-package code from Python-like ""modules"". functionMap provides a visualization tool useful for understanding function dependencies within and across packages. atomize can quickly extract functions from within a package into their own package. Source Code Foreign Languages Interfaces inline eases adding code in C, C++, or Fortran to R. It takes care of the compilation, linking and loading of embedded code segments that are stored as R strings. Rcpp offers a number of C++ classes that makes transferring R objects to C++ functions (and back) easier. RInside provides C++ classes for embedding within C++ applications. rGroovy integrates with the Groovy scripting language. rJava provides a low-level interface to Java similar to the .Call interface for C and C++. helloJavaWorld provides an example rJava-based package. jvmr (archived on CRAN) provides a bi-directional interface to Java, Scala, and related languages, while rscala is designed specifically for Scala. rustr provides bindings to Rust. reach (not on CRAN) and matlabr provide rough interfaces to Matlab. rPython, rJython, PythonInR, rpy2 (not on CRAN), and SnakeCharmR (not on CRAN) provide interfaces to python. RJulia (not on CRAN) provides an interface with Julia. RCall embeds R within Julia. RStata is an interface with Stata. RCall embeds R in Stata. tcltk, which is a package built in to R, provides an general interface to Tcl, usefully especially for accessing Tcl/tk (for graphical interfaces). after (GitHub) uses tcltk to run R code in a separate event loop. V8 offers an embedded Javascript engine, useful for building packages around Javascript libraries. js provides additional tools for working with Javascript code. The knitr package, which supplies various foreign language engines, can also be used to generate documents that call python, awk, ruby, haskell, bash, perl, dot, tikz, sas, coffeescript, and polyglot. Writing packages that involve compiled code requires a developer toolchain. If developing on Windows, this requires Rtools, which is updated with each R minor release. Debugging log4r (Github) and logging provide logging functionality in the style of log4j. loggr (not on CRAN) aims to provide a simplified logging interface without the need for withCallingHandlers() expressions. rollbar reports messages and errors to Rollbar, a web service. The rchk tool provides tools for identifying memory-protection bugs in C code, including base R and packages. Code Analysis and Formatting codetools provides a number of low-level functions for identifying possible problems with source code. lint and lintr provide tools for checking source code compliance with a style guide. formatR and rfmt (not on CRAN) can be used to neatly format source code. FuncMap provides a graphical representation of function calls used in a package. Profiling Profiling data is provided by utils::Rprof() and can be summarized by utils::summaryRprof(). prof.tree (GitHub) provides an alternative output data structure to Rprof(). profr can visualize output from the Rprof interface for profiling. proftools and aprof can also be used to analyse profiling output. profvis (not on CRAN) provides an interactive, graphical interface for examining profile results. lineprof (not on CRAN) provides a visualization tool for examining profiling results. Rperform (not on CRAN) compares package performance across different git versions and branches. Benchmarking base::system.time() is a basic timing utility that calculates times based on one iteration of an expression. microbenchmark and rbenchmark provide timings based on multiple iterations of an expression and potentially provide more reliable timings than system.time() Unit Testing Packages should pass all basic code and documentation checks provided by the R CMD check quality assurance tools built in to R. rcmdcheck provides programmatic access to R CMD check from within R and callr (not on CRAN) provides a generic interface for calling R from within R. R documentation files can contain demonstrative examples of package functionality. Complete testing of correct package performance is better reserved for the test directory. Several packages provide testing functionality, including RUnit, svUnit, testit (Not on CRAN), testthat, testthatsomemore, and pkgmaker. runittotestthat provides utilities for converting exiting RUnit tests to testthat tests. assertive, assertr, checkmate ensurer, and assertthat provide test-like functions for use at run-time or in examples that will trigger messages, warnings, or errors if an R object differs from what is expected by the user or developer. covr and testCoverage (not on CRAN) offer utilities for monitoring how well tests cover a package's source code. These can be complemented by services such as Codecov or Coveralls that provide web interfaces for assessing code coverage. withr (GitHub) provides functions to evaluate code within a temporarily modified global state, which may be useful for unit testing, debugging, or package development. The devtools::use_revdep() and revdep_check() functions from devtools can be used to test reverse package dependencies to ensure code changes have not affected downstream package functionality. crandalf (not on CRAN) provides an alternative mechanism for testing reverse dependencies. Internationalization and Localization There is no standard mechanism for translation of package documentation into languages other than English. To create non-English documentation requires manual creation of supplemental .Rd files or package vignettes. Packages supplying non-English documentation should include a Language field in the DESCRIPTION file. R provides useful features for the localization of diagnostic messages, warnings, and errors from functions at both the C and R levels based on GNU gettext. ""Translating R Messages"" describes the process of creating and installing message translations. Creating Graphical Interfaces For simple interactive interfaces, readline() can be used to create a simple prompt. getPass provides cross-platform mechanisms for securely requesting user input without displaying the intput (e.g., for passwords). utils::menu(), utils::select.list() can provide graphical and console-based selection of items from a list, and utils::txtProgressBar() provides a simple text progress bar. tcltk is an R base package that provides a large set of tools for creating interfaces uses Tcl/tk (most functions are thin wrappers around corresponding Tcl and tk functions), though the documentation is sparse. tcltk2 provides additional widgets and functionality. qtbase provides bindings for Qt. RGtk (not on CRAN) provides bindings for Gtk and gnome. gWidgets2 offers a language-independent API for building graphical user interfaces in Gtk, Qt, or Tcl/tk. fgui can create a Tcl/tk interface for any arbitrary function. shiny provides a browser-based infrastructure for creating dashboards and interfaces for R functionality. htmlwidgets is a shiny enhancement that provides a framework for creating HTML widgets. progress (Github) offers progress bars for the terminal, including a C++ API. Command Line Argument Parsing Several packages provide functionality for parsing command line arguments: argparse, argparser, commandr, docopt, GetoptLong, and optigrab. Using Options in Packages pkgconfig (GitHu) allows developers to set package-specific options, which will not affect options set or used by other packages. Documentation Writing Package Documentation Package documentation is written in a TeX-like format as .Rd files that are stored in the man subdirectory of a package. These files are compiled to plain text, HTML, or PDF by R as needed. One can write .Rd files directly. A popular alternative is to rely on roxygen2, which uses special markup in R source files to generate documentation files before a package is built. This functionality is provided by roxygen2::roxygenise() and underlies devtools::document(). roxygen2 eliminates the need to learn some of the formatting requirements of an .Rd file at the cost of adding a step to the development process (the need to roxygenise before calling R CMD build). Rd2roxygen can convert existing .Rd files to roxygen source documentation, facilitating the conversion of existing documentation to an roxygen workflow. inlinedocs and documair provide further alternative documentation schemes based on source code commenting. tools::parse_Rd() can be used to manipulate the contents of an .Rd file. tools::checkRd() is useful for validating an .Rd file. Duncan Murdoch's ""Parsing Rd files"" tutorial is a useful reference for advanced use of R documentation. Rdpack provides additional tools for manipulating documentation files. Writing Vignettes Package vignettes provides additional documentation of package functionality that is not tied to a specific function (as in an .Rd file). Historically, vignettes were used to explain the statistical or computational approach taken by a package in an article-like format that would be rendered as a PDF document using Sweave. Since R 3.0.0, non-Sweave vignette engines have also been supported, including knitr, which can produce Sweave-like PDF vignettes but can also support HTML vignettes that are written in R-flavored markdown. To use a non-Sweave vignette engine, the vignette needs to start with a code block indicating the package and function to be used: %\VignetteEngine{knitr::knitr}     %\VignetteIndexEntry{}  Spell Checking utils provides multiple functions for spell-checking portions of packages, including .Rd files ( utils::aspell_package_Rd_files) and vignettes ( utils::aspell_package_vignettes) via the general purpose aspell function, which requires a system spell checking library, such as http://aspell.net/, http://hunspell.github.io/, or http://lasr.cs.ucla.edu/geoff/ispell.html. hunspell provides an interface to hunspell. Data in Packages lazyData offers the ability to use data contained within packages that have not been configured using LazyData. Tools and Services Text Editors and IDEs By far the most popular integrated development environment (IDE) for R is RStudio, which is an open-source product available with both commercial and AGPL licensing. It can be run both locally and on a remote server. rstudioapi facilitates interaction from RStudio from within R. StatET is an R plug-in for the Eclipse IDE. Emacs Speaks Statistics (ESS) is a feature-rich add-on package for editors like Emacs or XEmacs. Makefiles GNU Make is a tool that typically builds executable programs and libraries from source code by reading files called Makefile. It can be used to manage R package as well; maker is a Makefile completely devoted to R package development based on makeR. remake (not on CRAN) provides a yaml-based, Makefile-like format that can be used in Make-like workflows from within R. Version Control R itself is maintained under version control using Subversion. Many packages are maintained using git, particularly those hosted on GitHub. git2r (Github) provides bindings to libgit2 for programmatic use of git within R. Hosting and Package Building Services Many hosting services are available. Use of different hosts depends largely on what type of version control software is used to maintain a package. The most common sites are: R-Forge, which relies on Subversion. Rforge.net is another popular Subversion-based system. GitHub mainly supports Git and Mercurial. Packages hosted on Github can be installed directly using devtools::install_github() or ghit::install_github() from ghit. gh (not on CRAN) is a lightweight client for the GitHub API. Bitbucket is an alternative host that provides no-cost private repositories and GitLab is an open source alternative. gitlabr provides is an API client for managing Gitlab projects. Github supports continuous integration for R packages. Travis CI is a popular continuous integration tools that supports Linux and OS X build environments. Travis has native R support, and can easily provide code coverage information via covr to Codecov.io or Coveralls. travisci (not on CRAN) provides an API client for Travis. Use of other CI services, such as Circle CI may require additional code and examples are available from r-travis and/or r-builder. circleci (not on CRAN) provides an API client for Circle CI. badgecreatr (GitHub) provides a convenient way of creating standardized badges (or ""shields"") for package READMEs. WinBuilder is a service intended for useRs who do not have Windows available for checking and building Windows binary packages. The package sources (after an R CMD check) can be uploaded via html form or passive ftp in binary mode; after checking/building a mail will be sent to the Maintainer with links to the package zip file and logs for download/inspection. Appveyor is a continuous integration service that offers a Windows build environment. r-appveyor (not on CRAN) and appveyor (not on CRAN) provide API clients for Appveyor. Rocker provides containers for use with Docker. harbor can be used to control docker containers on remote and local hosts and dockertest provides facilities for running tests on docker. Some packages, especially some that are no longer under active development, remain hosted on Google Code. This service is closed to new projects, however, and will shut down in January 2016. drat can be used to distribute pre-built packages via Github or another server. CRAN does not provide package download statistics, but the RStudio CRAN mirror does. packagetrackr (Source) facilitates downloading and analyzing those logs. CRAN packages: after aoos aprof argparse argparser assertive assertr assertthat badgecreatr checkmate checkpoint codetools commandr covr devtools (core) docopt documair drat ensurer fgui formatR FuncMap functools GetoptLong getPass ghit git2r gitlabr GRANBase gWidgets2 helloJavaWorld htmlwidgets hunspell import inline inlinedocs js knitr (core) lambda.r lazyData lazyeval lint lintr log4r logging magrittr matlabr microbenchmark mvbutils optigrab osi packagetrackr packrat pacman pipeR pkgconfig pkgKitten pkgmaker prof.tree profr proftools progress proto purrr PythonInR qtbase R.methodsS3 R.oo R6 rbenchmark rcmdcheck Rcpp Rd2roxygen Rdpack rGroovy RInside rJava rJython rollbar roxygen2 (core) rPython rscala RStata rstudioapi rtype RUnit runittotestthat shiny sos svUnit tcltk2 testthat testthatsomemore V8 withr Related links: [Manual] ""Writing R Extension"" by R-core team [Tutorial] ""Creating R Packages: A Tutorial"" by Friedrich Leisch [Tutorial] ""Best practices for writing an API package"" by Hadley Wickham [Webpage] ""CRAN Repository Policy"" lists rules for hosting packages on CRAN [Webpage] Dirk Eddelbuettel provides a feed of CRAN policy changes [Webpage] ""Developing R packages"" by Jeff Leek [Book] ""Software for Data Analysis"" by John Chambers [Book] ""Advanced R"" by Hadley Wickham [Book] ""R packages"" by Hadley Wickham Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/PackageDevelopment"	"R packages to improve package development."	"true"
"R Development"	"devtools"	"https://github.com/hadley/devtools"	"Tools to make an R developer's life easier."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1287"	"132"	"420"	"GitHub - hadley/devtools: Tools to make an R developer's life easier Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 132 Star 1,287 Fork 420 hadley/devtools Code Issues 56 Pull requests 15 Wiki Pulse Graphs Tools to make an R developer's life easier 2,622 commits 11 branches 23 releases 83 contributors R 99.6% Other 0.4% R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 516e59fb clean-source cran-mirror examples feature/install-github-sha1 gh-pages install-refactor master more_repos system-file topic-index Nothing to show v1.12.0 v1.11.1 v1.11.0 v1.10.0 v1.9.1 v1.8.0 v1.7.0 v1.6.1 v1.6 v1.5 v1.4.1 v1.4 devtools-1.3 devtools-1.2 devtools-1.1 devtools-1.0 devtools-0.8 devtools-0.7 devtools-0.6 devtools-0.5 devtools-0.4 devtools-0.3 devtools-0.2 Nothing to show New pull request Latest commit e196a37 Jul 14, 2016 jimhester Use devel version of testthat Permalink Failed to load latest commit information. R Don't load test helpers twice in test() (#1256) Jul 8, 2016 inst/templates Update revdep examples and template Jun 16, 2016 man Prepare for release Jun 23, 2016 revdep Rer-run revdeps Jun 17, 2016 src Add function for accessing namespace registry Sep 13, 2012 tests Skip git tests that require user name on CRAN Jun 23, 2016 vignettes Fix bioc remote syntax Jun 3, 2016 .Rbuildignore Turn off codecov comments Jun 2, 2016 .gitattributes enable union merge for NEWS.md file Mar 11, 2014 .gitignore Rough draft of revdep_email to inform maintainers individually. Feb 9, 2016 .travis.yml Still test with all three versions Jun 3, 2016 CONDUCT.md Add forward slashes to Contributor Covenant URL Jun 8, 2015 CONTRIBUTING.md typo hand -> happy Apr 14, 2016 DESCRIPTION Use devel version of testthat Jul 14, 2016 NAMESPACE Merge pull request #1194 from jimhester/feature/install_bioc Jun 3, 2016 NEWS.md Don't load test helpers twice in test() (#1256) Jul 8, 2016 README.md Update README.md (#1213) Jun 7, 2016 appveyor.yml configure Git on AppVeyor May 10, 2016 codecov.yml Turn off codecov comments Jun 2, 2016 cran-comments.md Prepare for release Jun 23, 2016 devtools.Rproj cosmetic: remove executable bit Aug 22, 2014 README.md devtools The aim of devtools is to make package development easier by providing R functions that simplify common tasks. An R package is actually quite simple. A package is a template or set of conventions that structures your code. This not only makes sharing code easy, it reduces the time and effort required to complete you project: following a template removes the need to have to think about how to organize things and paves the way for the creation of standardised tools that can further accelerate your progress. While package development in R can feel intimidating, devtools does every thing it can to make it less so. In fact, devtools comes with a small guarantee: if you get an angry e-mail from an R-core member because of a bug in devtools, forward me the email and your address and I'll mail you a card with a handwritten apology. devtools is opinionated about package development. It requires that you use roxygen2 for documentation and testthat for testing. Not everyone would agree with this approach, and they are by no means perfect. But they have evolved out of the experience of writing over 30 R packages. I'm always happy to hear about what doesn't work for you and where devtools gets in your way. Either send an email to the rdevtools mailing list or file an issue at the GitHub repository. Updating to the latest version of devtools You can track (and contribute to) the development of devtools at https://github.com/hadley/devtools. To install it: Install the release version of devtools from CRAN with install.packages(""devtools""). Make sure you have a working development environment. Windows: Install Rtools. Mac: Install Xcode from the Mac App Store. Linux: Install a compiler and various development libraries (details vary across different flavors of Linux). Follow the instructions below depending on platform. Mac and Linux: devtools::install_github(""hadley/devtools"") Windows: library(devtools) build_github_devtools()  #### Restart R before continuing #### install.packages(""devtools.zip"", repos = NULL, type = ""source"")  # Remove the package after installation unlink(""devtools.zip"") Package development tools All devtools functions accept a path as an argument, e.g. load_all(""path/to/path/mypkg""). If you don't specify a path, devtools will look in the current working directory - this is recommended practice. Frequent development tasks: load_all() simulates installing and reloading your package, loading R code in R/, compiled shared objects in src/ and data files in data/. During development you usually want to access all functions so load_all() ignores the package NAMESPACE. load_all() will automatically create a DESCRIPTION if needed. document() updates documentation, file collation and NAMESPACE. test() reloads your code, then runs all testthat tests. Building and installing: install() reinstalls the package, detaches the currently loaded version then reloads the new version with library(). Reloading a package is not guaranteed to work: see the documentation to unload() for caveats. build() builds a package file from package sources. You can use it to build a binary version of your package. install_* functions install an R package: install_github() from github, install_bitbucket() from bitbucket, install_url() from an arbitrary url and install_local() from a local file on disk. install_version() installs a specified version from cran. Check and release: check() updates the documentation, then builds and checks the package. build_win() builds a package using win-builder, allowing you to easily check your package on windows. run_examples() will run all examples to make sure they work. This is useful because example checking is the last step of R CMD check. check_man() runs most of the documentation checking components of R CMD check release() makes sure everything is ok with your package (including asking you a number of questions), then builds and uploads to CRAN. It also drafts an email to let the CRAN maintainers know that you've uploaded a new package. Other tips I recommend adding the following code to your .Rprofile: .First <- function() {   options(     repos = c(CRAN = ""https://cran.rstudio.com/""),     browserNLdisabled = TRUE,     deparse.max.lines = 2) }  if (interactive()) {   suppressMessages(require(devtools)) } See the complete list in ?devtools This will set up R to: always install packages from the RStudio CRAN mirror ignore newlines when browse()ing give minimal output from traceback() automatically load devtools in interactive sessions There are also a number of options you might want to set (in .Rprofile) to customise the default behaviour when creating packages and drafting emails: devtools.name: your name, used to sign emails devtools.desc.author: your R author string, in the form of ""Hadley Wickham <h.wickham@gmail.com> [aut, cre]"". Used when creating default DESCRIPTION files. devtools.desc.license: a default license used when creating new packages Code of conduct Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/devtools"	"Tools to make an R developer's life easier."	"true"
"R Development"	"testthat"	"https://github.com/hadley/testthat"	"An R package to make testing fun."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"331"	"30"	"147"	"GitHub - hadley/testthat: An R package to make testing fun Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 30 Star 331 Fork 147 hadley/testthat Code Issues 21 Pull requests 7 Pulse Graphs An R package to make testing fun 1,208 commits 10 branches 14 releases 52 contributors R 94.8% C++ 4.3% C 0.9% R C++ C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 0.9.1 bugfix/avoid-reporter-copy f-#486-parallel f-dot-performance feature/catch-disable-on-solaris feature/expectation-reporting feature/reporter-signals master revert-469-feature/expectation-cleanup testthat-0.2 Nothing to show v1.0.2 v1.0.1 v1.0.0 v0.11.0 v0.10.1 v0.10.0 v0.9.1 v0.9 v0.8.1 v0.8 testthat-0.6 testthat-0.4 testthat-0.1 testhat-0.3 Nothing to show New pull request Latest commit 46d15da Jul 8, 2016 krlmlr committed on GitHub New load_helpers arg to test_dir() (#505) … * new load_helpers arg to test_dir() for devtools  * NEWS Permalink Failed to load latest commit information. R New load_helpers arg to test_dir() (#505) Jul 8, 2016 inst Revert ""disable 'testthat' tests when compiler w/older gcc"" May 27, 2016 man New load_helpers arg to test_dir() (#505) Jul 8, 2016 revdep Re-run revdep checks Apr 18, 2016 src missing header Apr 22, 2016 tests New DebugReporter (#470) Jul 5, 2016 .Rbuildignore Suppress codecov comments Jul 3, 2016 .gitattributes update .gitattributes Nov 10, 2015 .gitignore Rerun checks and set release date Mar 4, 2016 .travis.yml Explicitly set default packages May 19, 2016 DESCRIPTION New DebugReporter (#470) Jul 5, 2016 LICENSE Final release prep Apr 7, 2016 NAMESPACE New DebugReporter (#470) Jul 5, 2016 NEWS.md New load_helpers arg to test_dir() (#505) Jul 8, 2016 README.md Drop download count Apr 7, 2016 appveyor.yml use r-appveyor for testing Sep 22, 2014 codecov.yml Suppress codecov comments Jul 3, 2016 cran-comments.md Update cran comments Apr 22, 2016 testthat.Rproj Enable devtools mode Jan 22, 2014 README.md testthat Testing your code is normally painful and boring. testthat tries to make testing as fun as possible, so that you get a visceral satisfaction from writing tests. Testing should be fun, not a drag, so you do it all the time. To make that happen, testthat: Provides functions that make it easy to describe what you expect a function to do, including catching errors, warnings and messages. Easily integrates in your existing workflow, whether it's informal testing on the command line, building test suites or using R CMD check. Can re-run tests automatically as you change your code or tests. Displays test progress visually, showing a pass, fail or error for every expectation. If you're using the terminal, it'll even colour the output. testthat draws inspiration from the xUnit family of testing packages, as well from many of the innovative ruby testing libraries, like rspec, testy, bacon and cucumber. I have used what I think works for R, and abandoned what doesn't, creating a testing environment that is philosophically centred in R. Instructions for using this package can be found in the Testing chapter of R packages. Integration with R CMD check If you're using testthat in a package, you should put your tests in tests/testthat. Each test file should start with test and end in .R or .r. To ensure R CMD check runs your tests, place the following code in tests/testthat.R: library(testthat) library(yourpackage)  test_check(""yourpackage"") Also make sure to add Suggests: testthat to your DESCRIPTION. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/testthat"	"An R package to make testing fun."	"true"
"R Development"	"R6"	"https://github.com/wch/R6"	"simpler, faster, lighter-weight alternative to R's built-in classes."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"116"	"22"	"19"	"GitHub - wch/R6: R objects with reference semantics Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 22 Star 116 Fork 19 wch/R6 Code Issues 9 Pull requests 2 Pulse Graphs R objects with reference semantics 362 commits 3 branches 6 releases 7 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags clone generator-completion master Nothing to show v2.1.2 v2.1.1 v2.1.0 v2.0.1 v2.0 v1.0.1 Nothing to show New pull request Latest commit a567e86 Jun 30, 2016 wch Fix printing of members that are R6 objects. Closes #88 Permalink Failed to load latest commit information. R Fix printing of members that are R6 objects. Closes #88 Jul 1, 2016 doc_extra Revamp diagrams Aug 18, 2014 man Add plot.R6 method, which calls $plot on object. Closes #77 Jan 25, 2016 tests Remove deprecated not() function from tests Jul 1, 2016 vignettes Fix typo May 12, 2016 .Rbuildignore Add environment diagrams Jul 16, 2014 .gitattributes Enable union merge for NEWS.md Aug 4, 2014 .gitignore Ignore binary objects Jul 23, 2014 .travis.yml Fix typo in travis config Mar 3, 2016 DESCRIPTION Add plot.R6 method, which calls $plot on object. Closes #77 Jan 25, 2016 LICENSE Update license year Jul 3, 2015 NAMESPACE Add plot.R6 method, which calls $plot on object. Closes #77 Jan 25, 2016 NEWS Add plot.R6 method, which calls $plot on object. Closes #77 Jan 25, 2016 R6.Rproj Rename RefClass to R6Class Jul 2, 2014 README.md Update documentation links Jul 23, 2015 README.md R6 classes This package contains an implemention of classes with reference semantics, and it is a simpler, faster, lighter-weight alternative to R's built-in reference classes. Additionally, these classes are not built on S4 classes, so they do not require the methods package. They allow public and private members, and they support inheritance. Unlike reference classes, R6 classes can be cleanly inherited across different packages, when used in portable mode (enabled by default). Why the name R6? When R's reference classes were introduced, some users, following the names of R's existing class systems S3 and S4, called the new class system R5 in jest. Although reference classes are not actually called R5, the name of this package and its classes takes inspiration from that name. The name R5 was also a code-name used for a different object system started by Simon Urbanek, meant to solve some issues with S4 relating to syntax and performance. However, the R5 branch was shelved after a little development, and it was never released. Installation To install R6 from CRAN: install.packages('R6') To install the development version (requires the devtools package): devtools::install_github('wch/R6', build_vignettes = FALSE) Documentation Introduction to R6 Portable R6 classes - Inheritance across different packages. Performance tests - Speed and memory comparisons of R6 classes and reference classes. Debugging methods in R6 objects Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/wch/R6"	"simpler, faster, lighter-weight alternative to R's built-in classes."	"true"
"R Development"	"pryr"	"https://github.com/hadley/pryr"	"Make it easier to understand what's going on in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"90"	"13"	"30"	"GitHub - hadley/pryr: Pry open the covers of R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 13 Star 90 Fork 30 hadley/pryr Code Issues 14 Pull requests 2 Pulse Graphs Pry open the covers of R 182 commits 1 branch 3 releases 9 contributors R 67.9% C++ 32.1% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.1.2 v0.1 0.1.1 Nothing to show New pull request Latest commit 2711d95 Nov 9, 2015 hadley Merge pull request #42 from jimhester/primitive_name_deparse … Use deparse() rather than capturing the output for primitive_name Permalink Failed to load latest commit information. R Use deparse() rather than capturing the output for primitive_name Nov 9, 2015 benchmark First version of pryr Jan 7, 2013 man Re-document Jun 19, 2015 revdep Prepare for release Jun 19, 2015 src Update roxygen and Rcpp May 26, 2015 tests Use deparse() rather than capturing the output for primitive_name Nov 9, 2015 .Rbuildignore Revdep checks May 26, 2015 .gitignore Make Rstudio project Jul 24, 2013 .travis.yml Turn on code coverage Jun 19, 2015 DESCRIPTION Version bump Jun 22, 2015 NAMESPACE Merge pull request #33 from richfitz/is_active_binding Jun 19, 2015 NEWS.md Version bump Jun 22, 2015 README.md Turn on code coverage Jun 19, 2015 cran-comments.md Prepare for release Jun 19, 2015 pryr.Rproj Std pkg opts Feb 20, 2014 README.md pryr (rhymes with pry bar) pryr provides tools to pry back the surface of R and dig into the details. It has been developed in conjunction with ""Advanced R programming"" to make it easier to understand what's going on in R. Install it from CRAN with install.packages(""pryr""). Tools pryr includes tools to: Make it easier to understand the internal implementation of: promises: uneval(), is_promise(), promise_info() scoping and environments: where(), rls(), parenv() closures: unenclose() calls and expressions: call_tree() primitive types: typenames() copy-on-modify: address(), track_copy() Inspect and understand R's OO systems: Determine which OO system an object belongs to: otype() Determine which OO system a function belongs to: ftype() Make it easier to compute on the language: Alternative ways to create functions: make_function(), f() A version of substitute that uses regular evaluation, substitute_q(), and one that will substitute objects in the global environment, subs() Tools to modify language objects: modify_lang() dots() and named_dots() to get unevaluated ... Partial function evaluation: partial() Find all functions matching some criteria: find_funs() To use existing R tools more easily: %<d-% and %<a-% for creating delayed or active bindings %<c-% for creating constants (locked bindings) rebind as a more user friendly version of <<- Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/pryr"	"Make it easier to understand what's going on in R."	"true"
"R Development"	"roxygen"	"https://github.com/klutometis/roxygen"	"Describe your functions in comments next to their definitions."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"177"	"16"	"90"	"GitHub - klutometis/roxygen Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 16 Star 177 Fork 90 klutometis/roxygen Code Issues 54 Pull requests 15 Wiki Pulse Graphs No description or website provided. 1,687 commits 8 branches 14 releases 25 contributors R 93.6% C++ 6.4% R C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 2.0 builddep gh-pages master partitum-classes revert-330-authors_description roxypkg s4 Nothing to show v5.0.1 v5.0.0 v4.1.1 v4.1.0 v4.0.2 v4.0.1 v4.0.0 v3.1.0 v3.0.0 2.2.2 2.2 2.1 2.0 1.0 Nothing to show New pull request Latest commit 7133fd6 Nov 13, 2015 hadley Version bump Permalink Failed to load latest commit information. R inline variable to avoid mocking Nov 9, 2015 man-roxygen Make template vars actually work. Dec 4, 2013 man More carefully trim whitespace. Oct 27, 2015 revdep Prepare for release Nov 10, 2015 src More tweaks to rdComplete. Fixes #407 Oct 27, 2015 tests inline variable to avoid mocking Nov 9, 2015 vignettes Update vignettes Oct 28, 2015 .Rbuildignore Add revdep checks Dec 9, 2014 .gitattributes .gitattributes to set merge strategy to ""union"" for NEWS.md Jun 20, 2014 .gitignore Update to modern vignette style Oct 28, 2015 .travis.yml Add code coverage Oct 5, 2015 DESCRIPTION Version bump Nov 13, 2015 NAMESPACE Better display of rexported docs. Oct 27, 2015 NEWS.md Version bump Nov 13, 2015 README.md fix vignette builder Oct 6, 2015 cran-comments.md Prepare for release Nov 10, 2015 roxygen.Rproj Check in .R and .html so vignettes work when installed from github Jan 26, 2015 README.md roxygen2 all' hileth', Hephaiste; didou d'areten te kai olbon.* --Homer, 7th century BCE Why use roxygen2? The premise of roxygen2 is simple: describe your functions in comments next to their definitions and roxygen2 will process your source code and comments to produce Rd files in the man/ directory. Here's a simple example from the stringr package: #' The length of a string (in characters). #' #' @param string input character vector #' @return numeric vector giving number of characters in each element of the #'   character vector.  Missing strings have missing length. #' @seealso \code{\link{nchar}} which this function wraps #' @export #' @examples #' str_length(letters) #' str_length(c(""i"", ""like"", ""programming"", NA)) str_length <- function(string) {   string <- check_string(string)    nc <- nchar(string, allowNA = TRUE)   is.na(nc) <- is.na(string)   nc } When you roxygenise your package these comments will be automatically transformed to the Rd file you need to pass R CMD check: \name{str_length} \alias{str_length} \title{The length of a string (in characters).} \usage{str_length(string)} \arguments{   \item{string}{input character vector} } \description{ The length of a string (in characters). } \seealso{\code{\link{nchar}} which this function wraps} \value{   numeric vector giving number of characters in each element of the   character vector.  Missings string have missing length. } \examples{ str_length(letters) str_length(c(""i"", ""like"", ""programming"", NA)) }  Installation To get the current released version from CRAN: install.packages(""roxygen2"") To get the current development version from github: # install.packages(""devtools"") devtools::install_github(""klutometis/roxygen"") Running Roxygen does a live analysis of your source code: it loads all the code in your package, so it can create documentation using values in an R environment, not just source code. However, simulating package loading is rather tricky to do in general, so there are two ways to do it with roxygen: roxygen2::roxygenise() just sources all files in the R/ directory devtools::document() sources all files in the R/ directory, compiles source code in the src/ directory, loads data in the data/ directory and generally does an accurate job of simulating package loading. If you have a simple package, you can use roxygenise(), but for anything more complicated, I recommend that you use document(). Roclets roxygen2 comes with four roclets, tools for parsing your source code and producing files useful for documenting your package: collate_roclet: allows you to add @include directives to ensure that files are loaded in the order they are needed namespace_roclet: creates your NAMESPACE automatically. 95% of the time all you need to do is label functions, methods and classes that you want to export with the @export tag rd_roclet: produces Rd files by inspecting both function definitions and roxygen2 comments in the source code vignette_roclet: builds vignettes using tools::buildVignette(). By default, roxygenise will run the first three, but you can choose which ones to run using the roclet parameter, or field Roxygen in your DESCRIPTION: Roxygen: list(roclets = c(""rd"", ""collate""))  Hail, Hephaistos! Grant skill and weal. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/klutometis/roxygen"	"Describe your functions in comments next to their definitions."	"true"
"R Development"	"lineprof"	"https://github.com/hadley/lineprof"	"Visualise line profiling results in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"89"	"7"	"25"	"GitHub - hadley/lineprof: Visualise line profiling results in R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 7 Star 89 Fork 25 hadley/lineprof Code Pull requests 0 Pulse Graphs Visualise line profiling results in R 91 commits 1 branch 0 releases Fetching contributors JavaScript 57.7% R 30.0% CSS 8.4% C++ 3.9% JavaScript R CSS C++ Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 972e71d Nov 13, 2015 hadley Merge branch 'master' of github.com:hadley/lineprof Permalink Failed to load latest commit information. R Filter out tryCatch entries Sep 1, 2015 inst add test for stack and improve test for navigate Jan 12, 2015 man Disable lineprof in examples Jan 8, 2015 src Rebuild RcppExports Sep 1, 2015 tests Update navigate test profile data Sep 2, 2015 vignettes Correct vignette directory name Jan 8, 2015 .Rbuildignore Add travis Jan 8, 2015 .gitignore Initial commit Sep 25, 2013 .travis.yml Add travis Jan 8, 2015 DESCRIPTION Bump version to 0.1.9001 Sep 1, 2015 NAMESPACE Upgrade roxygen Jan 8, 2015 NEWS Bump version to 0.1.9001 Sep 1, 2015 README.md Deprecate Nov 13, 2015 lineprof.Rproj Set std pkg options Feb 19, 2014 README.md lineprof lineprof is now deprecated in favour of profvis. Please use that instead. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/lineprof"	"Visualise line profiling results in R."	"true"
"R Development"	"packrat"	"https://github.com/rstudio/packrat"	"Make your R projects more isolated, portable, and reproducible."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"163"	"21"	"41"	"GitHub - rstudio/packrat: Packrat is a dependency management system for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 163 Fork 41 rstudio/packrat Code Issues 93 Pull requests 2 Pulse Graphs Packrat is a dependency management system for R http://rstudio.github.io/packrat/ 1,131 commits 54 branches 8 releases 18 contributors R 98.6% Shell 1.4% R Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bugfix/dont-symlink-recommended-packages bugfix/dont-warn-on-failed-symlink bugfix/download-method-respect-error-codes bugfix/error-on-http-error-code bugfix/package-dcf bugfix/source-newer-than-binary exprdep feature/cache-available-packages feature/cache-object-file feature/cache-packages feature/clean-new-interface feature/custom-cran-repos feature/detect-rmd-output-format feature/devtools-download feature/env-vars feature/external-packages-lib feature/external-packages feature/force-unload feature/github-api-urls feature/headless-actions feature/hooks feature/improved-symlink-behavior feature/infer-shiny-app feature/init-cleanup-on-fail feature/install-github feature/knitr-rnw-fallback feature/local-repos feature/manifest feature/new-status feature/package-name-in-cache feature/packrat-external-resources feature/packrat-mode feature/pretty-libdir feature/recommended-packages-as-dependencies feature/remove-install-github feature/repository-lockfile-format feature/restart-on-restore feature/restore-restart feature/show-library-contents feature/snapshot-simplification feature/source-repos feature/symlink-system-libraries feature/unload-user-packrat feature/windows-junction-point-detection feature/windows-junction-system-packages feature/with-build-tools fix-implicit-packrat-dependency gh-pages master packrat-tests useR2014 v0.4.1 v0.98.1000 v0.99-700 Nothing to show v0.4.7 v0.4.7-1 v0.4.6 v0.4.5 v0.4.3 v0.4.2 v0.4.1 0.4.1 Nothing to show New pull request Latest commit 4c6d94f Jul 8, 2016 kevinushey bump version Permalink Failed to load latest commit information. R use 'copyInstalledPackageToCache' routine Jul 8, 2016 announce Release 0.3.0 Jun 24, 2014 inst bump version Jul 8, 2016 internal Include a library for external packages (symlinked from user library) Jul 30, 2014 man expose 'persist' parameter for 'set_opts()' Jun 17, 2016 scenarios Bootstrap when no packrat tarball available locally (#96) Jun 17, 2014 tests update tests May 31, 2016 .Rbuildignore make it possible to set options without persisting Oct 30, 2015 .gitignore Add 'local.repos' as packrat option; obviate and remove 'source.packa… Jul 9, 2014 .travis.yml covr available through the image May 13, 2016 DESCRIPTION bump version Jul 8, 2016 NAMESPACE remove install_github shim Mar 14, 2016 NEWS.md fix attempts to form junction points on Windows (@raubreywhite) Apr 6, 2016 README.md update install instructions to CRAN May 13, 2016 configure.R prepare for CRAN release Oct 21, 2015 packrat.Rproj normalize 'repos_*' function naming; refactor a bit Jun 15, 2015 README.md packrat Packrat is a dependency management system for R. Use packrat to make your R projects more: Isolated: Installing a new or updated package for one project won't break your other projects, and vice versa. That's because packrat gives each project its own private package library. Portable: Easily transport your projects from one computer to another, even across different platforms. Packrat makes it easy to install the packages your project depends on. Reproducible: Packrat records the exact package versions you depend on, and ensures those exact versions are the ones that get installed wherever you go. See the project page for more information, or join the discussion at packrat-discuss. Read the release notes to learn what's new in Packrat. Quick-start Guide Start by installing Packrat: install.packages(""packrat"")  Then, start a new R session at the base directory of your project and type: packrat::init()  This will install Packrat, set up a private library to be used for this project, and then place you in packrat mode. While in packrat mode, calls to functions like install.packages and remove.packages will modify the private project library, rather than the user library. When you want to manage the state of your private library, you can use the Packrat functions: packrat::snapshot(): Save the current state of your library. packrat::restore(): Restore the library state saved in the most recent snapshot. packrat::clean(): Remove unused packages from your library. Share a Packrat project with bundle and unbundle: packrat::bundle(): Bundle a packrat project, for easy sharing. packrat::unbundle(): Unbundle a packrat project, generating a project directory with libraries restored. Navigate projects and set/get options with: packrat::on(), packrat::off(): Toggle packrat mode on and off, for navigating between projects within a single R session. packrat::get_opts, packrat::set_opts: Get/set project-specific settings. Manage ad-hoc local repositories (note that these are a separate entity from CRAN-like repositories): packrat::set_opts(local.repos = ...) can be used to specify local repositories; that is, directories containing (unzipped) package sources. packrat::install_local() installs packages available in a local repository. For example, suppose I have the (unzipped) package sources for digest located within the folder~/git/R/digest/. To install this package, you can use: packrat::set_opts(local.repos = ""~/git/R"") packrat::install_local(""digest"")  There are also utility functions for using and managing packages in the external / user library, and can be useful for leveraging packages in the user library that you might not want as project-specific dependencies, e.g. devtools, knitr, roxygen2: packrat::extlib(): Load an external package. packrat::with_extlib(): With an external package, evaluate an expression. The external package is loaded only for the duration of the evaluated expression, but note that there may be other side effects associated with the package's .onLoad, .onAttach and .onUnload calls that we may not be able to fully control. Workflows Packrat supports a set of common analytic workflows: As-you-go: use packrat::init() to initialize packrat with your project, and use it to manage your project library while you develop your analysis. As you install and remove packages, you can use packrat::snapshot() and packrat::restore() to maintain the R packages in your project. For collaboration, you can either use your favourite version control system, or use packrat::bundle() to generate a bundled version of your project that collaborators can use with packrat::unbundle(). When-you're-done: take an existing or complete analysis (preferably collected within one directory), and call packrat::init() to immediately obtain R package sources for all packages used in your project, and snapshot that state so it can hence be preserved across time. Setting up your own custom, CRAN-like repositories Please view the set-up guide here for a simple walkthrough in how you might set up your own, local, custom CRAN repository. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/packrat"	"Make your R projects more isolated, portable, and reproducible."	"true"
"R Development"	"installr"	"https://github.com/talgalili/installr/"	"Functions for installing softwares from within R (for Windows)."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"76"	"9"	"34"	"GitHub - talgalili/installr: Functions for installing softwares from within R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 9 Star 76 Fork 34 talgalili/installr Code Issues 4 Pull requests 0 Pulse Graphs Functions for installing softwares from within R 297 commits 1 branch 48 releases 13 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show v0.10.0 v0.9.3 v0.9 v0.7 v0.6 v0.5 v0.2 v0.1 V0.10.1 0.17.4 0.17.3 0.17.2 0.17.1 0.17.0 0.16.0 0.15.17 0.15.16 0.15.14 0.15.13 0.15.12 0.15.9 0.15.8 0.15.7 0.15.6 0.15.5 0.15.3 0.15.2 0.15.1 0.14.5 0.14.4 0.14.3 0.14.2 0.14.1 0.14.0 0.13.8 0.13.7 0.13.6 0.13.5 0.13.4 0.13.3 0.13.2 0.13.1 0.13.0 0.12.0 0.11.0 0.10.1 0.10.0 0.9 Nothing to show New pull request Latest commit 838fc14 Jul 3, 2016 talgalili install.URL now gives warning if there is suspicion that the user is … … …not connected to the internet. Suggested by Jonathan Godfrey. Permalink Failed to load latest commit information. R install.URL now gives warning if there is suspicion that the user is … Jul 3, 2016 data Worldmap of one's package downloads function added Aug 21, 2013 man fixed typos in Roxygen tagged elements for the Rd files and re-built … Jun 15, 2016 .Rbuildignore allow NEWS.md to rebuild Jun 15, 2016 .gitignore rename .r to .b Jul 10, 2014 .travis.yml add travis Dec 10, 2014 CONDUCT.md Added code of conduct May 22, 2015 ChangeLog Bump to 0.18.0 + added A. Jonathan R. Godfrey as contributor Jun 5, 2016 DESCRIPTION install.URL now gives warning if there is suspicion that the user is … Jul 3, 2016 NAMESPACE added install.python and re-built Jun 5, 2016 NEWS install.URL now gives warning if there is suspicion that the user is … Jul 3, 2016 NEWS.md Bump to 0.18.0 + added A. Jonathan R. Godfrey as contributor Jun 5, 2016 README.md fix typo Oct 26, 2015 TODO roxygen update Feb 12, 2016 README.md installr Introduction The installr package offers a set of R functions for the installation and updating of software (currently, only on Windows OS), with a special focus on R itself. This package has two main goals: To make updating R (on windows) as easy as running a function. To make it as easy as possible to install all of the needed software for R development (such as git, RTools, etc), as well as for reproducible research using R (such as MikTeX, pandoc, etc). Motivation While for Linux users, the installation process of new software may be just running a short line of code, for the regular Windows user it often includes browsing online, finding the latest version, downloading it, running the installer, and deleting the installation file. All of these steps are automatically done using functions in this package. Installation To install the stable version on CRAN: install.packages('installr') To install the latest installr version from GitHub use: if (!require('devtools')) install.packages('devtools'); # make sure you have Rtools installed first! if not, then run: #install.packages('installr') #install.Rtools() devtools::install_github('talgalili/installr') Usage If you are using the Rgui, you will see a new menu added on your top right (just by ""help""), giving you the option to update R, or install new software. For command line use you can update R by running: if(!require(""installr"")) install.packages('installr') library(""installr"") updateR() # this will open dialog boxes to take you through the steps. # OR use: # updateR(TRUE) # this will use common defaults and will be the safest/fastest option Or install a new software simply by running: library(""installr"") installr() #  user can easily select (via a GUI interface) a software to install. Troubleshooting If you one of the followiong errors from some commands: Error in download.file(URL, destfile = ...) :    unsupported URL scheme Or: install.RStudio() Error in file(con, ""r"") : cannot open the connection updateR() Error in file(con, ""r"") : cannot open the connection Try running: setInternet2(TRUE) Sources: http://stackoverflow.com/questions/21857264/error-in-download-file-unsupported-url-scheme http://stackoverflow.com/questions/19890633/r-produces-unsupported-url-scheme-error-when-getting-data-from-https-sites Contact You are welcome to: submit suggestions and bug-reports at: https://github.com/talgalili/installr/issues send a pull request on: https://github.com/talgalili/installr/ compose a friendly e-mail to: tal.galili@gmail.com Available functions are: You can see the most recent changes to the package in the NEWS.md file: https://github.com/talgalili/installr/blob/master/NEWS.md R install/update/uninstall related functions: updateR() - serves as a ""check for updates"" function of R itself. Running the function will check for a newer version of R than the one currently used. If one exists, the function will download the most updated R version and run its installer. Once done, the function will offer to copy (or move) all of the packages from the old R library to the new R library. It will then offer to update the moved packages, offer to open the new Rgui, and lastely, it will quit the old R. uninstall.R require2 - just like ""require"", only makes sure to download and install the package in case it is not present on the system (useful for examples...) restart_RGui - a function to restart Rgui from Rgui check.for.updates.R install.R install.Rdevel - usefull for when developing R packages (as this version contains the latest checks.) Installing software from withing R: install.RStudio() - download and runs the installer for RStudio. install.Rtools() - download and runs the installer for Rtools (allowing the user to choose which version to download) install.pandoc() - download and runs the installer for pandoc. install.MikTeX() - download and runs the installer for MikTeX. install.git() - download and runs the installer for git-gui. install.packages.zip() - for installing package from a url of a ZIP file. Currently, it is the only option I know of for downloading+installing a direct ZIP of an R package. install.URL() - gets a URL of a zipped file, and makes sure to download and run it. install.LyX() install.LaTeX2RTF() install.GitHub() install.ImageMagick() install.GraphicsMagick() install.SWFTools() install.FFmpeg() install.7zip() install.notepadpp() install.npptor() install.Cygwin() Operation system managing functions manage.os() - for shutdown/sleep of a Windows computer (useful for running at the end of a simulation). Controls all the following functions. os.hibernate() os.lock() os.restart() os.shutdown() os.sleep() is.Rgui() is.RStudio() is.windows() CRAN and network related functions: cranometer - Estimates the speed of each CRAN mirror by measuring the time it takes to download the NEWS file. myip - return your ip address. freegeoip - Geolocate IP addresses in R (contributed by Heuristic Andrew) download_RStudio_CRAN_data read_RStudio_CRAN_data barplot_package_users_per_day lineplot_package_downloads format_RStudio_CRAN_data most_downloaded_packages Misc functions: is.empty - function added for checking if an object is empty (e.g: of zero length) There are a few more functions that you could see in the help files... Code of conduct Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/talgalili/installr/"	"Functions for installing softwares from within R (for Windows)."	"true"
"R Development"	"import"	"https://github.com/smbache/import/"	"An import mechanism for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"47"	"4"	"4"	"GitHub - smbache/import: An Import Mechanism For R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 4 Star 47 Fork 4 smbache/import Code Issues 4 Pull requests 0 Pulse Graphs An Import Mechanism For R 38 commits 1 branch 1 release Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show 1.0.2 Nothing to show New pull request Latest commit 4f761bc Jun 11, 2016 smbache added .character_only argument, ala library. Permalink Failed to load latest commit information. R man added .character_only argument, ala library. Jun 11, 2016 vignettes First attempt at allowing package version requirements. Jun 24, 2015 .Rbuildignore Added argument checks. Changed inherits to TRUE. Apr 2, 2015 .gitignore DESCRIPTION LICENSE Initial commit Mar 6, 2015 NAMESPACE added .character_only argument, ala library. Jun 11, 2016 NEWS README Minor changes Apr 9, 2015 README.md cran-comments.md Beginning a vignette Jun 15, 2015 import.Rproj import.png logo added Mar 15, 2015 import.svg logo added Mar 15, 2015 README.md An Import Mechanism For R Motivation The typical way of using functionality exposed by a package in R scripts is to load (and attach) the entire package with library (or require). This can have the undesirable effect of masking objects in the user's search path and can also make it difficult and confusing to identify what functionality comes from which package when using several library statements. An alternative is to import a single object from a package, say object <- package::object. The downside of this approach is that the object is placed in the user's global work space, rather than being encapsulated somewhere else in the search path (when using library to load pkg, a namespace package:pkg will be attached in the search path which will contain the exported functions from pkg). Another minor point is that one can only import one object at a time using this approach. The import package provides a simple alternative to importing and is inspired in part by Python's from some_module import some_function syntax, and will solve the two issues raised above. It is also similar to roxygen2s @importFrom package function1 function2 for packages. While import will also work for package development, it is meant for R scripts. In addition to being able to import objects from packages, import also allows you to import objects in scripts (i.e. a kind of module). This allows a simple way to distribute and use functionality without the need to write a full package. One example is a Shiny app, where one can place definitions in a script and import only the needed objects where they are used. This avoids workspace clutter and name clashes. For more details see below. Installation and usage To install import from CRAN: install.packages(""import"") You can also install import from GitHub using devtools: devtools::install_github(""smbache/import"") The import package is named to make usage expressive without having to load the package using library. A basic example, which imports a few functions from the dplyr package is: import::from(dplyr, select, arrange, keep_when = filter) This does pretty much what it says: three functions are imported from dplyr, two of which will keep their original name, and one which is renamed, e.g. to avoid name clash with stats::filter. The imported objects are placed in a separate entity in the search path (@lionel- suggests naming them ""pied-à-terres"", meaning living units some distance away from primary residence), which by default is named ""imports"". It is therefore also easy to get rid of them again with detach(""imports""). The main point is that it is clear which functions will be used and where they come from. It's noteworthy that there is nothing special going on: the import::from function is only a convenient wrapper around getExportedValue (as is :: itself) and assign. To import non-exported objects one must use triple-colon syntax: import:::from(pkg, obj). If any of the import functions are called regularly, i.e. without preceding import:: or import:::, an error is raised. If import is attached, a startup message will inform that import should not be attached. One can also specify which names to use in the search path and use several to group imports: import::from(magrittr, ""%>%"", ""%$%"", .into = ""operators"")  import::from(dplyr, arrange, .into = ""datatools"") If using pied-à-terres actively, one might prefer the alternative syntax (which does the same but reverses the argument order): import::into(""operators"", ""%>%"", ""%$%"", .from = magrittr) import::into(""datatools"", arrange, .from = dplyr) If it is desired to place imported objects in the current environment, then import::here is a short-hand function that sets .into = """". In the examples above most arguments are provided unquoted. A more unambiguous alternative is to quote the inputs, e.g. import::from(""ggplot2"", ""qplot"") Specifying a library The import package will by default only use the latest specified library (i.e. the result of .libPaths()[1L]). It is possible to specify a different library using the .library argument in any of the import functions. One import call can only use one library so there will not be ambiguity as to where imports come from. Using .R scripts as ""modules"" (currently only in GitHub version) The import package allows for importing objects defined in script files, which we will here refer to as ""modules"". The module will be fully evaluated by import when an import is requested, after which objects such as functions or data can be imported. Such modules should be side-effect free, but this is not enforced. Attachments are detached (e.g. packages attached by library) but loaded namespaces remain loaded. This means that values created by functions in an attached namespace will work with import, but functions to be exported should not rely on such functions (use function importing in the modules instead). If a module is modified, import will realize this and reload the script if further imports are executed or re-executed; otherwise additional imports will not cause the script to be reloaded for efficiency. As the script is loaded in its own environment (maintained by import) dependencies are kept (except those exposed through attachment), as the following small example shows. Contents of ""some_module.R"": ## Possible library(ggplot2)  ## But would be better: #import::here(qplot, .from = ggplot2)  ## Note this operator overload is not something you want to `source`! `+` <- function(e1, e2)   paste(e1, e2)  ## Some function relying on the above overload: a <- function(s1, s2)   s1 + rep(s2, 3)  ## Another value. b <- head(iris, 10)  ## A value created using a function exposed by attachment  p <- qplot(Sepal.Length, Sepal.Width, data = iris, color = Species)  ## A function relying on a function exposed through attachment: plot_it <- function()   qplot(Sepal.Length, Sepal.Width, data = iris, color = Species)  Usage: import::from(some_module.R, a, b, p, plot_it)  ## Works: a(""cool"", ""import"")  ## The `+` is not affecting anything here, so this won't work: # ""cool"" + ""import""  # Works: b p  ## Does not work, as ggplot2 is no longer attached ## (would work with the import statement!): #plot_it() Notes: When the arguments are unquoted they will be treated as they are written! If used in a package import will use the package's own namespace. See also: For an interesting but slightly different idea of Python-like modules for R, see the modules package package by @klmr. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/smbache/import/"	"An import mechanism for R."	"true"
"R Development"	"Rocker"	"https://github.com/rocker-org"	"R configurations for."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"rocker-org · GitHub Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This organization rocker-org Repositories People 1 Filters Sources Forks 42 18 hadleyverse Docker image providing RStudio + rmarkdown/pandoc/latex + R package ecosystem from Hadley Wickham Updated Jul 12, 2016 Shell 0 491 official-images forked from docker-library/official-images Updated Jun 29, 2016 Shell 387 102 rocker R configurations for Docker Updated Jun 28, 2016 Shell 5 6 r-devel-san-clang R devel with ASAN / UBSAN sanitizers using clang/clang++ Updated Jun 17, 2016 Shell 1 4 r-devel-san R devel with ASAN / UBSAN sanitizers Updated Jun 17, 2016 Shell 2 1 drd Docker R-devel Daily Builds Updated Jun 17, 2016 12 4 ropensci Dockerfile providing RStudio + Hadleyverse + rOpenSci packages Updated Apr 27, 2016 Shell 36 31 shiny Updated Apr 14, 2016 Shell 2 1 rstudio-daily Daily builds of pre-release RStudio, built on daily builds of pre-release R. Live on the bleeding edge. Updated Mar 9, 2016 Shell 3 3 rocker-versioned Run earlier versions of R using docker Updated Mar 24, 2015 TeX 3 1 rocker-paper Updated Feb 1, 2015 Shell 0 419 docs forked from docker-library/docs Documentation for Docker Official Images in docker-library Updated Dec 2, 2014 1 People eddelbuettel Dirk Eddelbuettel Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rocker-org"	"R configurations for."	"true"
"R Development"	"Docker"	"https://www.docker.com/"	"R configurations for."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"33040"	"2765"	"9566"	"GitHub - docker/docker: Docker - the open-source application container engine Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 2,765 Star 33,040 Fork 9,566 docker/docker Code Issues 1,849 Pull requests 132 Wiki Pulse Graphs Docker - the open-source application container engine http://www.docker.com 25,770 commits 6 branches 150 releases 1,443 contributors Go 92.8% Shell 6.9% Other 0.3% Go Shell Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags bump_v1.12.0 docs master swarm-backend swarm-stack swarm Nothing to show xdocs-v1.10-28-mar-2016 xdocs-v1.10-09-05-2016 v1.12.0-rc4 v1.12.0-rc3 v1.12.0-rc2 v1.12.0-rc1 v1.11.2 v1.11.2-rc1 v1.11.1 v1.11.1-rc1 v1.11.0 v1.11.0-rc5 v1.11.0-rc4 v1.11.0-rc3 v1.11.0-rc2 v1.11.0-rc1 v1.10.3 v1.10.3-rc2 v1.10.3-rc1 v1.10.2 v1.10.2-rc1 v1.10.1 v1.10.1-rc1 v1.10.0 v1.10.0-rc4 v1.10.0-rc3 v1.10.0-rc2 v1.10.0-rc1 v1.9.1 v1.9.1-rc1 v1.9.0 v1.9.0-rc5 v1.9.0-rc4 v1.9.0-rc3 v1.9.0-rc2 v1.9.0-rc1 v1.8.3 v1.8.2 v1.8.2-rc1 v1.8.1 v1.8.0 v1.8.0-rc3 v1.8.0-rc2 v1.8.0-rc1 v1.7.1 v1.7.1-rc3 v1.7.1-rc2 v1.7.1-rc1 v1.7.0 v1.7.0-rc5 v1.7.0-rc4 v1.7.0-rc3 v1.7.0-rc2 v1.7.0-rc1 v1.6.2 v1.6.1 v1.6.0 v1.6.0-rc7 v1.6.0-rc6 v1.6.0-rc5 v1.6.0-rc4 v1.6.0-rc3 v1.6.0-rc2 v1.6.0-rc1 v1.5.0 v1.5.0-rc4 v1.5.0-rc3 v1.5.0-rc2 v1.5.0-rc1 v1.4.1 v1.4.0 v1.3.3 v1.3.2 v1.3.1 v1.3.0 v1.2.0 v1.1.2 v1.1.1 v1.1.0 v1.0.1 v1.0.0 v0.12.0 v0.11.1 v0.11.0 v0.10.0 v0.9.1 v0.9.0 v0.8.1 v0.8.0 v0.7.6 v0.7.5 v0.7.4 v0.7.3 v0.7.2 v0.7.1 v0.7.0 v0.7.0-rc7 v0.7.0-rc6 v0.7.0-rc5 v0.7.0-rc4 Nothing to show New pull request Latest commit 80965a3 Jul 15, 2016 thaJeztah committed on GitHub Merge pull request #24702 from londoncalling/fix-toolbox-description-… … …docs  fixed cut-and-paste error on description of Docker Toolbox Permalink Failed to load latest commit information. .github pull-request template: ask for changelog description Apr 26, 2016 api Merge pull request #23773 from dnephin/allow-remove-during-update Jul 14, 2016 builder Merge pull request #22868 from Microsoft/jjh/dockerfilecmd Jul 7, 2016 cli fix typos Jul 5, 2016 cliconfig Use docker-credential-helpers client to talk with native creds stores. Jun 4, 2016 cmd Add --oom-score-adjust to daemon Jul 12, 2016 container fix typos Jul 5, 2016 contrib Merge pull request #24668 from sdurrheimer/zsh-completion-service-end… Jul 15, 2016 daemon Fix daemon panic use wrong graphdriver with --live-restore flag Jul 15, 2016 distribution Merge pull request #24568 from dmcgowan/search-v2-auth Jul 14, 2016 dockerversion Pass upstream client's user agent through to registry on operations b… Mar 21, 2016 docs fixed cut-and-paste error on description of Docker Toolbox Jul 15, 2016 errors Fix authorization issue - when request is denied return forbbiden exi… May 2, 2016 experimental Fix typo - stacks being managed, not tasks? Jul 4, 2016 hack Merge pull request #24568 from dmcgowan/search-v2-auth Jul 14, 2016 image image spec: Correct set of acceptable characters in tags Jul 5, 2016 integration-cli Fix panic in stats test Jul 14, 2016 layer fix some typos Jun 21, 2016 libcontainerd Wait for the reader fifo opening to block Jul 14, 2016 man Rename `--net` to `--network` Jul 12, 2016 migrate/v1 Safer file io for configuration files Apr 21, 2016 oci Get the Docker Engine to build clean on Solaris May 23, 2016 opts Fix opts tests after default port fix Jun 21, 2016 pkg return err when stack name does not exist Jul 12, 2016 plugin Merge pull request #24229 from anusha-ragunathan/shutdown-plugins Jul 11, 2016 profiles Move mlock back into the default ungated seccomp profile Jun 15, 2016 project Update Golang requirements in PACKAGERS.md Jun 11, 2016 reference reference: Do not drop the underlying error message Jul 1, 2016 registry Allow v1 search to use v2 auth with identity token Jul 13, 2016 restartmanager fix some typos Jun 21, 2016 runconfig Rename `--net` to `--network` Jul 12, 2016 utils Replace execdrivers with containerd implementation Mar 18, 2016 vendor/src Merge pull request #24568 from dmcgowan/search-v2-auth Jul 14, 2016 volume Remove code duplication in VolumeStore Create CreateWithRef Jul 6, 2016 .dockerignore Add vendor/pkg to .dockerignore Dec 4, 2015 .gitignore Make dockerd debuggable Apr 26, 2016 .mailmap Fix double entry in authors Jun 3, 2016 AUTHORS Fix double entry in authors Jun 3, 2016 CHANGELOG.md Fix spelling in comments, strings and documentation Jul 3, 2016 CONTRIBUTING.md fix typos Jun 2, 2016 Dockerfile Vendor containerd 1b3a81545ca79456086dc2aa424357be98b962ee Jul 1, 2016 Dockerfile.aarch64 Add ltdl dependencies for aarch64 Jul 7, 2016 Dockerfile.armhf Vendor containerd 1b3a81545ca79456086dc2aa424357be98b962ee Jul 1, 2016 Dockerfile.gccgo Vendor containerd 1b3a81545ca79456086dc2aa424357be98b962ee Jul 1, 2016 Dockerfile.ppc64le ppc64le: remove go SHA check Jul 5, 2016 Dockerfile.s390x Vendor containerd 1b3a81545ca79456086dc2aa424357be98b962ee Jul 1, 2016 Dockerfile.simple Vendor containerd 1b3a81545ca79456086dc2aa424357be98b962ee Jul 1, 2016 Dockerfile.windows Removed exec permissions from Dockerfile.windows Jun 1, 2016 LICENSE Update LICENSE date Dec 31, 2015 MAINTAINERS Add new maintainers Jul 15, 2016 Makefile Add target for `make run` Jul 8, 2016 NOTICE Update LICENSE date Dec 31, 2015 README.md fix some nits and typo Jul 3, 2016 ROADMAP.md Update ROADMAP.md Feb 18, 2016 VENDORING.md Create standard vendor policies. Jan 7, 2016 VERSION Bump version to v1.12.0-dev Apr 14, 2016 README.md Docker: the container engine Docker is an open source project to pack, ship and run any application as a lightweight container. Docker containers are both hardware-agnostic and platform-agnostic. This means they can run anywhere, from your laptop to the largest cloud compute instance and everything in between - and they don't require you to use a particular language, framework or packaging system. That makes them great building blocks for deploying and scaling web apps, databases, and backend services without depending on a particular stack or provider. Docker began as an open-source implementation of the deployment engine which powered dotCloud, a popular Platform-as-a-Service. It benefits directly from the experience accumulated over several years of large-scale operation and support of hundreds of thousands of applications and databases. Security Disclosure Security is very important to us. If you have any issue regarding security, please disclose the information responsibly by sending an email to security@docker.com and not by creating a GitHub issue. Better than VMs A common method for distributing applications and sandboxing their execution is to use virtual machines, or VMs. Typical VM formats are VMware's vmdk, Oracle VirtualBox's vdi, and Amazon EC2's ami. In theory these formats should allow every developer to automatically package their application into a ""machine"" for easy distribution and deployment. In practice, that almost never happens, for a few reasons: Size: VMs are very large which makes them impractical to store and transfer. Performance: running VMs consumes significant CPU and memory, which makes them impractical in many scenarios, for example local development of multi-tier applications, and large-scale deployment of cpu and memory-intensive applications on large numbers of machines. Portability: competing VM environments don't play well with each other. Although conversion tools do exist, they are limited and add even more overhead. Hardware-centric: VMs were designed with machine operators in mind, not software developers. As a result, they offer very limited tooling for what developers need most: building, testing and running their software. For example, VMs offer no facilities for application versioning, monitoring, configuration, logging or service discovery. By contrast, Docker relies on a different sandboxing method known as containerization. Unlike traditional virtualization, containerization takes place at the kernel level. Most modern operating system kernels now support the primitives necessary for containerization, including Linux with openvz, vserver and more recently lxc, Solaris with zones, and FreeBSD with Jails. Docker builds on top of these low-level primitives to offer developers a portable format and runtime environment that solves all four problems. Docker containers are small (and their transfer can be optimized with layers), they have basically zero memory and cpu overhead, they are completely portable, and are designed from the ground up with an application-centric design. Perhaps best of all, because Docker operates at the OS level, it can still be run inside a VM! Plays well with others Docker does not require you to buy into a particular programming language, framework, packaging system, or configuration language. Is your application a Unix process? Does it use files, tcp connections, environment variables, standard Unix streams and command-line arguments as inputs and outputs? Then Docker can run it. Can your application's build be expressed as a sequence of such commands? Then Docker can build it. Escape dependency hell A common problem for developers is the difficulty of managing all their application's dependencies in a simple and automated way. This is usually difficult for several reasons: Cross-platform dependencies. Modern applications often depend on a combination of system libraries and binaries, language-specific packages, framework-specific modules, internal components developed for another project, etc. These dependencies live in different ""worlds"" and require different tools - these tools typically don't work well with each other, requiring awkward custom integrations. Conflicting dependencies. Different applications may depend on different versions of the same dependency. Packaging tools handle these situations with various degrees of ease - but they all handle them in different and incompatible ways, which again forces the developer to do extra work. Custom dependencies. A developer may need to prepare a custom version of their application's dependency. Some packaging systems can handle custom versions of a dependency, others can't - and all of them handle it differently. Docker solves the problem of dependency hell by giving the developer a simple way to express all their application's dependencies in one place, while streamlining the process of assembling them. If this makes you think of XKCD 927, don't worry. Docker doesn't replace your favorite packaging systems. It simply orchestrates their use in a simple and repeatable way. How does it do that? With layers. Docker defines a build as running a sequence of Unix commands, one after the other, in the same container. Build commands modify the contents of the container (usually by installing new files on the filesystem), the next command modifies it some more, etc. Since each build command inherits the result of the previous commands, the order in which the commands are executed expresses dependencies. Here's a typical Docker build process: FROM ubuntu:12.04 RUN apt-get update && apt-get install -y python python-pip curl RUN curl -sSL https://github.com/shykes/helloflask/archive/master.tar.gz | tar -xzv RUN cd helloflask-master && pip install -r requirements.txt Note that Docker doesn't care how dependencies are built - as long as they can be built by running a Unix command in a container. Getting started Docker can be installed either on your computer for building applications or on servers for running them. To get started, check out the installation instructions in the documentation. Usage examples Docker can be used to run short-lived commands, long-running daemons (app servers, databases, etc.), interactive shell sessions, etc. You can find a list of real-world examples in the documentation. Under the hood Under the hood, Docker is built on the following components: The cgroups and namespaces capabilities of the Linux kernel The Go programming language The Docker Image Specification The Libcontainer Specification Contributing to Docker Master (Linux) Experimental (Linux) Windows FreeBSD Want to hack on Docker? Awesome! We have instructions to help you get started contributing code or documentation. These instructions are probably not perfect, please let us know if anything feels wrong or incomplete. Better yet, submit a PR and improve them yourself. Getting the development builds Want to run Docker from a master build? You can download master builds at master.dockerproject.org. They are updated with each commit merged into the master branch. Don't know how to use that super cool new feature in the master build? Check out the master docs at docs.master.dockerproject.org. How the project is run Docker is a very, very active project. If you want to learn more about how it is run, or want to get more involved, the best place to start is the project directory. We are always open to suggestions on process improvements, and are always looking for more maintainers. Talking to other Docker users and contributors Internet Relay Chat (IRC) IRC is a direct line to our most knowledgeable Docker users; we have both the #docker and #docker-dev group on irc.freenode.net. IRC is a rich chat protocol but it can overwhelm new users. You can search our chat archives. Read our IRC quickstart guide for an easy way to get started. Docker Community Forums The Docker Engine group is for users of the Docker Engine project. Google Groups The docker-dev group is for contributors and other people contributing to the Docker project. You can join this group without a Google account by sending an email to docker-dev+subscribe@googlegroups.com. You'll receive a join-request message; simply reply to the message to confirm your subscription. Twitter You can follow Docker's Twitter feed to get updates on our products. You can also tweet us questions or just share blogs or stories. Stack Overflow Stack Overflow has over 7000 Docker questions listed. We regularly monitor Docker questions and so do many other knowledgeable Docker users. Legal Brought to you courtesy of our legal counsel. For more context, please see the NOTICE document in this repo. Use and transfer of Docker may be subject to certain restrictions by the United States and other governments. It is your responsibility to ensure that your use and/or transfer does not violate applicable laws. For more information, please see https://www.bis.doc.gov Licensing Docker is licensed under the Apache License, Version 2.0. See LICENSE for the full license text. Other Docker Related Projects There are a number of projects under development that are based on Docker's core technology. These projects expand the tooling built around the Docker platform to broaden its application and utility. Docker Registry: Registry server for Docker (hosting/delivery of repositories and images) Docker Machine: Machine management for a container-centric world Docker Swarm: A Docker-native clustering system Docker Compose (formerly Fig): Define and run multi-container apps Kitematic: The easiest way to use Docker on Mac and Windows If you know of another project underway that should be listed here, please help us keep this list up-to-date by submitting a PR. Awesome-Docker You can find more projects, tools and articles related to Docker on the awesome-docker list. Add your project there. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/docker/docker"	"R configurations for."	"true"
"R Development"	"RStudio Addins"	"https://github.com/daattali/rstudio-addins"	"List of RStudio addins."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"172"	"39"	"42"	"GitHub - daattali/addinslist: Discover and install useful RStudio addins Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 39 Star 172 Fork 42 daattali/addinslist Code Issues 1 Pull requests 0 Pulse Graphs Discover and install useful RStudio addins 107 commits 1 branch 0 releases 22 contributors R 82.9% JavaScript 10.4% CSS 6.7% R JavaScript CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 12475cc Jun 30, 2016 daattali committed on GitHub Merge pull request #36 from vnijs/master … add radiant.data and radiant to the list Permalink Failed to load latest commit information. R small fixes for CRAN May 4, 2016 inst add addin images May 5, 2016 man small fixes for CRAN May 4, 2016 .Rbuildignore initial ""package"" commit Apr 7, 2016 .gitignore initial ""package"" commit Apr 7, 2016 .travis.yml add travis config file May 2, 2016 DESCRIPTION remove knitr since there are no vignettes May 3, 2016 LICENSE initial ""package"" commit Apr 7, 2016 NAMESPACE restructure code to be more logical and maintainable May 3, 2016 README.md add radiant.data and radiant to the list Jun 30, 2016 README.md Discover and install useful RStudio addins RStudio addins were released in early 2016 to provide anyone with the ability to add ""extensions"" to RStudio. This feature has quickly become popular, but discoverability was a problem: there's just no easy way to know what addins exist. This package solves that problem in two ways. First, it provides a continuously updated list of RStudio addins that you can browse through (below). Also, if you install this package (install.packages('addinslist')), your RStudio will get populated with a new addin called ""Browse RStudio addins"". This addin allows you to interactively browse through the list of addins, see which ones you already have installed, and let you install/uninstall the corresponding package of each addin. The following image shows how to access this ""addin of addins"" in RStudio. List of addins If you made a useful RStudio addin, feel free to make a pull request on GitHub to add it to the list. Name Description Package On CRAN? Author More links Notes Browse RStudio addins Browse and install RStudio addins addinslist ✅ Dean Attali Screenshot Colour picker Lets you easily select colours shinyjs ✅ Dean Attali Screenshot, Demo video ggplot2 Marginal Plots Add marginal plots to ggplot2 ggExtra ✅ Dean Attali Screenshot ggplot Theme Assist Customize your ggplot theme ggThemeAssist ✅ Calli Gross Demo GIF Schedule R scripts on Windows Use Windows task scheduler to schedule your R scripts (Windows) taskscheduleR ❌ jwijffels Screenshot Schedule R scripts on Linux/Unix Use cron to schedule your R scripts (Linux/Unix) cronR ❌ jwijffels Screenshot Assign default values Set function arguments in selection to their default values jadd ❌ Jenny Bryan Demo GIF Wrap Rmd Wrap selected R Markdown text but don't insert lines breaks into inline R code WrapRmd ❌ TJ Mahr Tidy Data Interactively build tidyr function call (gather) tidyshiny ❌ Mango Solutions Lattice Plotting Interactively build plots using the lattice system addinplots ❌ Homer White Copy Frame to Clipboard Copy a data.frame to the clipboard copydat ❌ Bay Area Air Quality Management District Doesn't work on Windows Render Rmd in Console Render an R Markdown document in the global environment RStudioConsoleRender ❌ Jeff Johnston Blog post Document This Auto-generate Roxygen skeletons for functions and data docthis ❌ Matthew Lincoln Hist Add-In Interactively create histograms with ggplot2 and obtain the R Code limoaddin ❌ Stanislaus Stadlmann rpivotGadget Add-in wrapper around the rpivotTable HTML widget rpivotGadget ❌ Dean Kilfoyle Addin Manager Install and remove addins addinmanager ❌ Colin Gillespie Blog post Levels recoding Interactively generate code to edit factor levels questionr ✅ Julien Barnier Demo video Levels ordering Interactively generate code to reorder factor levels questionr ✅ Julien Barnier Demo video Variable cutting Interactively generate cut() code questionr ✅ Julien Barnier Demo video ARIMA Picker Interactively pick ARIMA parameters arimaUI ❌ Yves crutain Blog post Input LaTeX Math Input math expressions via the MathQuill library bookdown ❌ RStudio Preview R-markdown Book Run bookdown's serve_book() to live preview a book bookdown ❌ RStudio Google API Auth Authenticate with Google APIs googleAuthR ✅ Mark Edmondson Screenshot Word count add-in Count non-code words in Rmd documents wordcountaddin ❌ Ben Marwick Screenshot Copy value Copy data to clipboard (arrays, data frames, matrices, tables, vectors) snippetsaddin ❌ Juraj Sofranko Windows only Convert slash Reverse slashes (eg in file paths) snippetsaddin ❌ Juraj Sofranko Clipboard is Windows only Insert %>% Insert pipe + reformat surrounding snippetsaddin ❌ Juraj Sofranko Gotta Read 'Em All RStudio Add-In to interactively read ALL the data into R GREA ❌ Stanislaus Stadlmann Quick View Data Frame Quickly render a data frame, or the code which generates it, in the RStudio View window RStudioAddIns ❌ digital-dharma littleboxes Easily add a boxed title in R scripts littleboxes ❌ thinkr Insert citations Search a BibTeX-file and insert formatted Markdown citations citr ❌ Frederik Aust Demo gif QRAGadget A Shiny Gadget for Interactive QRA Visualizations QRAGadget ❌ Paul Govan Screenshot assignparams Evaluate function parameter in global environment assignparams ❌ Peter Meissner DemoVideo radiant.data A Shiny interface to visualize, summarize, transform, and combine data radiant.data ❌ Vincent Nijs Documentation radiant A Shiny interface for business analytics in R radiant ❌ Vincent Nijs Documentation Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/daattali/rstudio-addins"	"List of RStudio addins."	"true"
"R Development"	"drat"	"https://github.com/eddelbuettel/drat"	"Creation and use of R repositories on GitHub or other repos."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"48"	"7"	"36"	"GitHub - eddelbuettel/drat: Drat R Archive Template Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 7 Star 48 Fork 36 eddelbuettel/drat Code Issues 4 Pull requests 0 Pulse Graphs Drat R Archive Template 206 commits 2 branches 0 releases 13 contributors R 94.1% Shell 5.9% R Shell Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gh-pages master Nothing to show Nothing to show New pull request Latest commit 0cb0026 Jun 3, 2016 eddelbuettel Merge pull request #50 from csgillespie/patch-1 … Point to secure github repo. Permalink Failed to load latest commit information. R Point to secure github repo. Jun 2, 2016 inst add helper script Aug 8, 2015 man Added option to pull from remote repo befor inserting package Sep 9, 2015 tests small correction to local paths Feb 1, 2015 vignettes correct two file:// URLs Feb 28, 2016 .Rbuildignore accomodate local test directory Aug 2, 2015 .gitignore accomodate local test directory Aug 2, 2015 .travis.yml adding --no-build-vignettes Feb 4, 2016 ChangeLog changelog entry for PR #48 Mar 11, 2016 DESCRIPTION versioned Depends on R (>= 3.2.0) because of dir.exists() Feb 27, 2016 NAMESPACE adding explicit importFrom() statements Aug 2, 2015 README.md manual merge Feb 4, 2016 drat.Rproj updated vignette and .Rproj file Apr 9, 2015 README.md drat Drat R Archive Template Background The R package ecosystem is one of the cornerstones of the success seen by R. As of early 2016, almost 8000 packages are on CRAN, with about one thousand more at BioConductor and probably another hundred at OmegaHat. Support for multiple repositories is built deeply into R; mostly via the (default) package utils. The update.packages function (along with several others from the utils package) can be used with ease for these three default repositories as well as many others. But it seemed that support for simple creation and use of local repositories was missing. Drat tries to help here and supports two principal modes: GitHub by leveraging gh-pages Other repos by using other storage where you can write and provide html access See the next section about to get started, the package documentation, the drat package page or the blog section on drat for more. Installation You can install the package from CRAN via the standard install.packages(""drat""). Alternatively, you can also do install.packages(""drat"", repos=""http://eddelbuettel.github.io/drat"") to install directly from the drat repository. Getting Started See the vignettes Drat FAQ, Drat for Package Authors, Drat for Package Users Why Drat? Drat Lightning Talk at useR!2015 for the FAQ, two principal uses cases, basic motivation and an overview / introduction. The package documentation provides more details. The drat package page has a longer tutorial, and the blog section on drat has even more. Status The package has been available from CRAN since the Spring of 2015 and starting to get some use. Possible improvements, additions and next steps are listed in the TODO.md file. A few drat repositories are starting to appear (besides this one). An incomplete list (looking at the direct forks as well as GitHub search): hrbrmstr yutannihilation gschofl csgillespie homerhanumat cboettig shabbychef RcppCore arilamstein piccolbo ghrr cloudyr dmlc The rOpenSci project uses drat to distribute their code and has written a nice blog post about it. Travis Integration Colin Gillespie has started to integrate Travis CI with drat, see his dratTravis repository for more details, and the contributed vignette Combining Drat and Travis Author Dirk Eddelbuettel, with contributions by Carl Boettiger, Sebastian Gibb, Colin Gillespie, Matt Jones, Thomas Leeper, Steven Pav and Jan Schulz. License GPL (>= 2) Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/eddelbuettel/drat"	"Creation and use of R repositories on GitHub or other repos."	"true"
"R Development"	"covr"	"https://github.com/jimhester/covr"	"Test coverage for your R package and (optionally) upload the results to or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"129"	"9"	"42"	"GitHub - jimhester/covr: Test coverage reports for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 9 Star 129 Fork 42 jimhester/covr Code Issues 14 Pull requests 0 Pulse Graphs Test coverage reports for R 741 commits 11 branches 12 releases 23 contributors R 85.5% HTML 11.5% C 1.3% Other 1.7% R HTML C Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags HenrikBengtsson-coveralls_output R6 appveyor child_expressions libpaths master simplify_environments static_reports temp_lib v2 wligtenberg-master Nothing to show 1.2.0 1.1.2 1.1.1 1.0.1 1.0.0 0.5.0.9001 0.5.0.9000 0.4.0.9000 0.2.0.9002 0.2.0.9001 0.2.0.9000 0.0.0.9000 Nothing to show New pull request Latest commit 29b664a Jul 14, 2016 jimhester Merge branch 'child_expressions' Permalink Failed to load latest commit information. R Merge branch 'child_expressions' Jul 14, 2016 docker_checker switched to rocker/hadleyverse to use preinstalled packages Jun 20, 2016 inst/www Fix css for new layout Jun 2, 2016 man Use xml2 rather than XML to generate the cobertura XML Jul 7, 2016 revdep Update revdep checks Jul 5, 2016 src Names changed to protect the innocent. May 7, 2015 tests Merge branch 'child_expressions' Jul 14, 2016 vignettes Update vignette with recent changes in implementation Mar 30, 2016 .Rbuildignore Bump version Jul 5, 2016 .gitignore Bump version Jul 5, 2016 .lintr Fix all lints and add lint checks Feb 20, 2015 .travis.yml Only calc coverage on the release version Jun 20, 2016 DESCRIPTION Use xml2 rather than XML to generate the cobertura XML Jul 7, 2016 LICENSE Update license Apr 5, 2016 Makefile updated make test and check to first install the covr package, and al… Jun 20, 2016 NAMESPACE Added cobertura support Jun 24, 2016 NEWS.md Bump version for development Jul 5, 2016 README.md Updated README.md to include mention of GitLab-CI. Jun 13, 2016 appveyor.yml Use my branch until it is merged Mar 22, 2016 cran-comments.md Update revdep checks Jul 5, 2016 shim_package.sh Modify shim scripts Mar 18, 2016 unshim_package.sh Modify shim scripts Mar 18, 2016 README.md Covr Track test coverage for your R package and (optionally) upload the results to coveralls or codecov. Installation Codecov If you are already using Travis-CI or Appveyor CI add the following to your project's .travis.yml to track your coverage results over time with Codecov. r_github_packages:   - jimhester/covr  after_success:   - Rscript -e 'covr::codecov()' To use a different CI service or call codecov() locally you can set the environment variable CODECOV_TOKEN to the token generated on codecov.io. Codecov currently has support for the following CI systems (* denotes support without needing CODECOV_TOKEN). Jenkins Travis CI* Codeship Circleci* Semaphore drone.io AppVeyor* Wercker GitLab-CI You will also need to enable the repository on Codecov. Coveralls Alternatively you can upload your results to Coveralls using coveralls(). r_github_packages:   - jimhester/covr  after_success:   - Rscript -e 'covr::coveralls()' For CI systems not supported by coveralls you need to set the COVERALLS_TOKEN environment variable. It is wise to use a Secure Variable so that it is not revealed publicly. Also you will need to turn on coveralls for your project at https://coveralls.io/repos/new. Interactive Usage Shiny Application A shiny Application can be used to view coverage per line. cov <- package_coverage()  shine(cov) If used with type = ""all"", combine_types = FALSE the Shiny Application will allow you to interactively toggle between Test, Vignette and Example coverage. cov <- package_coverage(type = ""all"", combine_types = FALSE)  shine(cov) R Command Line # if your working directory is in the packages base directory package_coverage()  # or a package in another directory cov <- package_coverage(""lintr"")  # view results as a data.frame as.data.frame(cov)  # zero_coverage() can be used to filter only uncovered lines. zero_coverage(cov) Exclusions covr supports a couple of different ways of excluding some or all of a file. Function Exclusions The function_exclusions argument to package_coverage() can be used to exclude functions by name. This argument takes a vector of regular expressions matching functions to exclude. # exclude print functions package_coverage(function_exclusions = ""print\\."")  # exclude `.onLoad` function package_coverage(function_exclusions = ""\\.onLoad"") Line Exclusions The line_exclusions argument to package_coverage() can be used to exclude some or all of a file. This argument takes a list of filenames or named ranges to exclude. # exclude whole file of R/test.R package_coverage(line_exclusions = ""R/test.R"")  # exclude lines 1 to 10 and 15 from R/test.R package_coverage(line_exclusions = list(""R/test.R"" = c(1:10, 15)))  # exclude lines 1 to 10 from R/test.R, all of R/test2.R package_coverage(line_exclusions = list(""R/test.R"" = c(1, 10), ""R/test2.R"")) Exclusion Comments In addition you can exclude lines from the coverage by putting special comments in your source code. This can be done per line. f1 <- function(x) {   x + 1 # nocov } Or by specifying a range with a start and end. f2 <- function(x) { # nocov start   x + 2 } # nocov end The patterns used can be specified by setting the global options covr.exclude_pattern, covr.exclude_start, covr.exclude_end. FAQ Will covr work with testthat, RUnit, etc... Covr should be compatible with any testing package, it uses tools::testInstalledPackage() to run your packages tests. Will covr work with alternative compilers such as ICC Covr will not work with icc, Intel's compiler as it does not have Gcov compatible output. Covr is known to work with clang versions 3.5+ and gcc version 4.2+. If the appropriate gcov version is not on your path you can set the appropriate location with the covr.gcov options. If you set this path to """" it will turn off coverage of compiled code. options(covr.gcov = ""path/to/gcov"") How does covr work? covr tracks test coverage by modifying a package's code to add tracking calls to each call. The vignette vignettes/how_it_works.Rmd contains a detailed explanation of the technique and the rational behind it. You can view the vignette from within R using vignette(""how_it_works"", package = ""covr"") Why can't covr run during R CMD check Because covr modifies the package code it is possible there are unknown edge cases where that modification affects the output. In addition when tracking coverage for compiled code covr compiles the package without optimization, which can modify behavior (usually due to package bugs which are masked with higher optimization levels). Alternative Coverage Tools https://github.com/MangoTheCat/testCoverage http://r2d2.quartzbio.com/posts/r-coverage-docker.html Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jimhester/covr"	"Test coverage for your R package and (optionally) upload the results to or."	"true"
"R Development"	"coveralls"	"https://coveralls.io/"	"Test coverage for your R package and (optionally) upload the results to or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"53"	"6"	"4"	"GitHub - lemurheavy/coveralls-public: The public issue tracker for coveralls.io Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 6 Star 53 Fork 4 lemurheavy/coveralls-public Code Issues 362 Pull requests 0 Pulse Graphs The public issue tracker for coveralls.io http://coveralls.io 3 commits 1 branch 0 releases 1 contributor Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit fbad102 Nov 27, 2012 wilg Update README.md Permalink Failed to load latest commit information. README.md Update README.md Nov 27, 2012 README.md Click here to go to the issue tracker → This repo is for issues with the coveralls.io service only. For issues with our Ruby gem, please click here. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/lemurheavy/coveralls-public"	"Test coverage for your R package and (optionally) upload the results to or."	"true"
"R Development"	"codecov"	"https://codecov.io/"	"Test coverage for your R package and (optionally) upload the results to or."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"6"	"3"	"8"	"GitHub - codecov/example-c: Upload reports to Codecov using C/C++ Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 3 Star 6 Fork 8 codecov/example-c Code Issues 2 Pull requests 0 Pulse Graphs Upload reports to Codecov using C/C++ 5 commits 2 branches 0 releases 1 contributor C 100.0% C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags future master Nothing to show Nothing to show New pull request Latest commit bf67ed7 Jun 26, 2015 stevepeak Update readme.md Permalink Failed to load latest commit information. .travis.yml ft May 4, 2015 hello.c added tests May 4, 2015 readme.md Update readme.md Jun 26, 2015 readme.md Codecov C/C++ Example https://codecov.io @codecov hello@codecov.io This repository serves as an example on how to use Codecov Global for C/C++. Usage C/C++ output gcov reports for all your files covered. To create these files all you need to do is to add the -coverage flag to gcc or clang when building. clang -coverage -O0 hello.c -o hello ./hello gcov hello.c  Travis CI Add to your .travis.yml file. after_success:   - bash <(curl -s https://codecov.io/bash) All other CI you can simply run bash <(curl -s https://codecov.io/bash). Private Repos Add to your .travis.yml file. env:   global:     - CODECOV_TOKEN=:uuid-repo-token  after_success:   - bash <(curl -s https://codecov.io/bash) View source and learn more about Codecov Global Uploader Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/codecov/example-c"	"Test coverage for your R package and (optionally) upload the results to or."	"true"
"R Development"	"lintr"	"https://github.com/jimhester/lintr"	"Static code analysis for R to enforce code style."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"189"	"14"	"29"	"GitHub - jimhester/lintr: Static Code Analysis for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 14 Star 189 Fork 29 jimhester/lintr Code Issues 50 Pull requests 3 Pulse Graphs Static Code Analysis for R 340 commits 8 branches 10 releases 16 contributors R 87.8% HTML 10.3% VimL 1.9% R HTML VimL Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags atom chunk_parsing comment joshkgold-checkstyle-xml-output linter_names master single_line testthat_new Nothing to show v0.2.0 0.3.1 0.3.0.9002 0.3.0.9001 0.3.0.9000 0.2.1.9000 0.2.0.9000 0.2.0 0.1.0 0.1 Nothing to show New pull request Latest commit e6245de Jun 6, 2016 jimhester Merge pull request #157 from gaborcsardi/seq_linter_bugs … seq_linter fixes: 1L:length(...) and length(...):1 Permalink Failed to load latest commit information. R Seq linter fixes: 1L:length(...) and length(...):1 May 24, 2016 inst Suppress startup messages Dec 4, 2015 man Merge branch 'seq_linter' of https://github.com/gaborcsardi/lintr int… May 24, 2016 revdep Add revdep and cran-comments Apr 15, 2016 tests Seq linter fixes: 1L:length(...) and length(...):1 May 24, 2016 vignettes Split get_source_file into it's own function Nov 27, 2014 .Rbuildignore Do not ignore NEWS.md May 4, 2016 .lintr Get config exclusions working for lint_package and fix all existing l… Feb 11, 2015 .travis.yml Test using libicu-dev Apr 15, 2016 DESCRIPTION Fixup DESCRIPTION May 24, 2016 LICENSE Update license to 2016 Apr 15, 2016 NAMESPACE Merge branch 'seq_linter' of https://github.com/gaborcsardi/lintr int… May 24, 2016 NEWS.md Merge branch 'seq_linter' of https://github.com/gaborcsardi/lintr int… May 24, 2016 README.md Fix NOTES from R CMD check and re-oxygenate Apr 15, 2016 cran-comments.md Add comment about testthat Apr 15, 2016 README.md lintr Static code analysis for R RStudio lintr lints are automatically displayed in the RStudio Marker pane, Rstudio versions (> v0.99.206). Emacs lintr has built-in integration with flycheck versions greater than 0.23. Installation lintr is fully integrated into flycheck when using ESS. See the installalation documentation for those packages for more information. Configuration You can also configure what linters are used. e.g. using a different line length cutoff. M-x customize-option -> flycheck-lintr-linters -> with_defaults(line_length_linter(120)) Vim lintr can be integrated with syntastic for on the fly linting. Installation Put the file syntastic/lintr.vim in syntastic/syntax_checkers/r. If you are using pathogen this directory is ~/.vim/bundles/syntastic/syntax_checkers/r. You will also need to add the following lines to your .vimrc. let g:syntastic_enable_r_lintr_checker = 1 let g:syntastic_r_checkers = 1 Configuration You can also configure what linters are used. e.g. using a different line length cutoff. let g:syntastic_r_lintr_linters = ""with_defaults(line_length_linter(120))"" Sublime Text 3 lintr can be integrated with Sublime Linter for on the fly linting. Installation Simply install sublimeLinter-contrib-lintr using Package Control. For more information see Sublime Linter Docs Configuration You can also configure what linters are used. e.g. using a different line length cutoff. In the SublimeLinter User Settings {   ""user"": {     ""linters"": {       ""r"": {         ""linters"": ""with_defaults(line_length_linter(120))""       }     }   } }  Atom lintr can be integrated with Linter for on the fly linting. Installation Simply install linter-lintr from within Atom or on the command line with: apm install linter-lintr For more information and bug reports see Atom linter-lintr. Available linters Syntax errors: reported by parse. object_usage_linter: checks that closures have the proper usage using codetools::checkUsage(). Note this runs base::eval() on the code, so do not use with untrusted code. absolute_paths_linter: checks that no absolute paths are used. assignment_linter: checks that <- is always used for assignment closed_curly_linter: check that closed curly braces should always be on their own line unless they follow an else. commas_linter: check that all commas are followed by spaces, but do not have spaces before them. infix_spaces_linter: check that all infix operators have spaces around them. line_length_linter: check the line length of both comments and code is less than length. no_tab_linter: check that only spaces are used, never tabs. camel_case_linter: check that function and variable names are not camelCase. snake_case_linter: check that function and variable names are not snake_case. multiple_dots_linter: check that function and variable names are separated by _ rather than .. object_length_linter: check that function and variable names are not more than length characters. open_curly_linter: check that opening curly braces are never on their own line and are always followed by a newline. single_quotes_linter: checks that only single quotes are used to delimit string contestants. spaces_inside_linter: check that parentheses and square brackets do not have spaces directly inside them. spaces_left_parentheses_linter: check that all left parentheses have a space before them unless they are in a function call. trailing_blank_lines_linter: check there are no trailing blank lines. trailing_whitespace_linter: check there are no trailing whitespace characters. Project Configuration Lintr supports per-project configuration of the following fields. The config file (default file name: .lintr) is in Debian Control Field Format. linters - see ?with_defaults for example of specifying only a few non-default linters. exclusions - a list of filenames to exclude from linting. You can use a named item to exclude only certain lines from a file. exclude - a regex pattern for lines to exclude from linting. Default is ""# nolint"" exclude_start - a regex pattern to start exclusion range. Default is ""# nolint start"" exclude_end - a regex pattern to end exclusion range. Default is ""# nolint end"" An example file that uses 120 character line lengths, excludes a couple of files and sets different default exclude regexs follows. linters: with_defaults(line_length_linter(120)) exclusions: list(""inst/doc/creating_linters.R"" = 1, ""inst/example/bad.R"", ""tests/testthat/exclusions-test"") exclude: ""# Exclude Linting"" exclude_start: ""# Begin Exclude Linting"" exclude_end: ""# End Exclude Linting""  With the following command, you can create a configuration file for lintr that ignores all linters that show at least one error: library(magrittr) library(dplyr) lintr::lint_package() %>%   as.data.frame %>%   group_by(linter) %>%   tally(sort = TRUE) %$%   sprintf(""linters: with_defaults(\n    %s\n    NULL\n  )\n"",           paste0(linter, "" = NULL, # "", n, collapse=""\n    "")) %>%   cat(file = "".lintr"") The resulting configuration will contain each currently failing linter and the corresponding number of hits as a comment. Proceed by successively enabling linters, starting with those with the least number of hits. Note that this requires lintr 0.3.0.9001 or later. Travis-CI If you want to run lintr on Travis-CI you will need to have travis install the package first. This can be done by adding the following line to your .travis.yml r_github_packages:   - jimhester/lintr Testthat If you are already using testthat for testing simply add the following to your tests to fail if there are any lints in your project. You will have to add Suggests: lintr to your package DESCRIPTION as well. if (requireNamespace(""lintr"", quietly = TRUE)) {   context(""lints"")   test_that(""Package Style"", {     lintr::expect_lint_free()   }) } Non-failing Lints If you do not want to fail the travis build on lints or do not use testthat you can simply add the following to your .travis.yml after_success:   - Rscript -e 'lintr::lint_package()' In both cases the lintr-bot will add comments to the commit or pull request with the lints found and they will also be printed on Travis-CI or Wercker. If you want to disable the commenting you can set the environment variable LINTR_COMMENT_BOT=false. Installation of development version To install the latest development version of lintr from GitHub devtools::install_github(""jimhester/lintr"") References Most of the default linters are based on Hadley Wickham's R Style Guide. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jimhester/lintr"	"Static code analysis for R to enforce code style."	"true"
"R Development"	"staticdocs"	"https://github.com/hadley/staticdocs"	"Generate static html documentation for an R package."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"113"	"8"	"47"	"GitHub - hadley/staticdocs: Generate static html documentation for an R package Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 8 Star 113 Fork 47 hadley/staticdocs Code Issues 30 Pull requests 13 Pulse Graphs Generate static html documentation for an R package 243 commits 3 branches 0 releases Fetching contributors R 91.1% HTML 8.9% R HTML Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags debugging gh-pages master Nothing to show Nothing to show New pull request Latest commit 25c049f Jan 6, 2016 hadley Merge pull request #94 from agrueneberg/bootstrap-url … Fix broken Bootstrap redirect in template footer Permalink Failed to load latest commit information. R Ensure message/warnings/errors are a single string Jan 4, 2016 demo Fix demo index Feb 20, 2014 inst Update Bootstrap URL. Jan 6, 2016 man Upgrade documentation Jan 4, 2016 vignettes Tweaking spacing Feb 24, 2014 .Rbuildignore Add travis Feb 20, 2014 .gitignore Add rstudio project Feb 20, 2014 .travis.yml Add some binary installs Feb 20, 2014 DESCRIPTION Upgrade documentation Jan 4, 2016 LICENSE Remove extra devtools and add LICENSE Feb 20, 2014 NAMESPACE Upgrade documentation Jan 4, 2016 README.md Update Bootstrap URL. Jan 6, 2016 staticdocs.Rproj Add rstudio project Feb 20, 2014 README.md staticdocs staticdocs provides a way to conveniently render R package documentation into html pages suitable for stand-alone viewing, such as on a package webpage. You can see staticdocs in action at http://staticdocs.had.co.nz/dev/: this is the output of staticdocs applied to the latest version of staticdocs. staticdocs is not currently available from CRAN, but you can install the development version from github with: # install.packages(""devtools"") devtools::install_github(""hadley/staticdocs"") Features Attractive defaults: staticdocs uses bootstrap to provide an attractive website. Customisable: you can override the default templates to provide alternative rendering Flexible ways to specify the index page so you can group related functions together. Compared to Rd2html, staticdocs: Makes it easier to customise the output. Runs examples, so users see both input and output. Assumes only one package is being rendered - links to documentation in other packages are forwarded to inside-R. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/hadley/staticdocs"	"Generate static html documentation for an R package."	"true"
"Logging"	"futile.logger"	"https://github.com/zatonovo/futile.logger"	"A logging package in R similar to log4j"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"52"	"8"	"11"	"GitHub - zatonovo/futile.logger: A logging package in R similar to log4j Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 8 Star 52 Fork 11 zatonovo/futile.logger Code Issues 4 Pull requests 0 Pulse Graphs A logging package in R similar to log4j 163 commits 5 branches 13 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags b1.3.4 b1.3.9 master v1.3.0 v1.3.3 Nothing to show v1.4.3 v1.4.2 v1.4.1 v1.4 v1.3.8 v1.3.6 v1.3.5 v1.3.4 v1.3.3 v1.3.1 v1.3.0 v1.2.1 v1.2.0 Nothing to show New pull request Latest commit 1190b6d Jul 10, 2016 muxspace committed on GitHub Merge pull request #35 from fnoorian/master … Function name and namepsace detection Permalink Failed to load latest commit information. R Merge pull request #35 from fnoorian/master Jul 10, 2016 man Bump version to 1.4.3 Jul 10, 2016 tests Merge pull request #35 from fnoorian/master Jul 10, 2016 .Rbuildignore Updated ignore file May 5, 2014 .gitignore Update test May 10, 2016 .travis.yml Update test harness Jul 10, 2016 DESCRIPTION Bump version to 1.4.3 Jul 10, 2016 NAMESPACE Update documentation May 10, 2016 README.md STYLE: use code formatting for code; FIX: fix typo. Feb 5, 2016 README.md Overview futile.logger is a logging utility for R. Originally built based on log4j, the latest version introduces a new API that is more consistent with R idioms. In practice this means an interface that works equally well in the shell for interactive use and also in scripts for system use. The underlying concepts of log4j still exist, e.g. loggers, appenders, and formatters. There continues to be a hierarchical system for logger. In addition, there is now automatic package scoping, which means that packages are given their own logger namespace so you can interactively turn on and off logging for specific packages. Also included is formatting logic to log list objects (which includes data.frames) in a smart way. Usage Out of the box, the default ROOT logger logs to the console with threshold set to INFO. flog.info(""Hello, %s"", ""world"")  # This won't print by default flog.debug(""Goodbye, %s"", ""world"")  # Change the log level to debug and try again flog.threshold(DEBUG) flog.debug(""Goodbye, %s"", ""world"")  # Keep an alternate logger at WARN flog.threshold(WARN, name='quiet')  # This won't print since it's using the logger named 'quiet'! flog.debug(""Goodbye, %s"", ""world"", name='quiet')  Loggers A logger is simply a namespace bound to a threshold, an appender, and a formatter. Loggers are configured automatically whenever they are referenced (for example when changing the threshold) inheriting the settings of the root logger. To explicitly create a logger call log.logger(). flog.logger(""tawny"", WARN, appender=appender.file('tawny.log')) To remove a logger, use log.remove(). If no such logger exists, the command is safely ignored. flog.remove(""tawny"") Thresholds The logger threshold determines what will be logged for a given logger. Use this function to retrieve and also change this threshold. # Get the logging threshold for the ROOT logger flog.threshold() The default logger is ROOT. To change the threshold of a different logger, specify the logger argument with a string that represents the logger. Note that a log.(debug|info|warn|error) command running from a package will automatically be associated with a logger with the name of the package. This structure means you can change the log level for a specific package as necessary. # Set root logger to DEBUG level to see all log messages flog.threshold(DEBUG) # Suppress log messages below WARN for logger 'quiet' flog.threshold(WARN, name=""quiet"") Appenders An appender defines where output is directed. Typically only one appender is used per logger, but multiple can be assigned. The package provides the following appenders: appender.console appender.file appender.tee To change the appenders assigned to a logger, use flog.appender(): # Change the 'quiet' logger to write to a file flog.appender(appender.file('quiet.log'), 'quiet') flog.warn(""Goodbye, %s"", ""world"", name='quiet') You can create your own appender by defining a function that accepts a single character argument. It is up to you to define the behavior. For example, an appender that logs to a URL might look like the following. url_appender.gen <- function(url) {   conn <- url(url)   function(line) {     file.write()   } } flog.format(""futile.matrix"", fn) Layouts A layout defines how a log message is printed. The default layout.simple prints log messages using the following format: LEVEL [datetime] Message The layouts included in the package are: layout.simple - Use a default format layout.format - Provide a customizable format string layout.tracearg - Dump a variable with its name What's New Function to wrap a try/catch with logging (ftry) Capture output for print statements (for more complex objects) New layout.tracearg Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/zatonovo/futile.logger"	"A logging package in R similar to log4j"	"true"
"Logging"	"log4r"	"https://github.com/johnmyleswhite/log4r"	"A log4j derivative for R"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"32"	"6"	"9"	"GitHub - johnmyleswhite/log4r: A log4j derivative for R. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 6 Star 32 Fork 9 johnmyleswhite/log4r Code Issues 1 Pull requests 0 Pulse Graphs A log4j derivative for R. http://www.johnmyleswhite.com 89 commits 2 branches 9 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags full-test master Nothing to show v0.2 v0.1-5 v0.1-4.3 v0.1-4.2 v0.1-4.1 v0.1-4 v0.1-3 v0.1-2 v0.1-1 Nothing to show New pull request Latest commit fba084f Oct 6, 2014 krlmlr add more ignores Permalink Failed to load latest commit information. R Bump version to 0.2 Sep 29, 2014 inst Update NEWS.Rd Sep 29, 2014 man Bump version to 0.2 Sep 29, 2014 tests new function available.loglevels() Sep 27, 2014 .Rbuildignore add more ignores Oct 6, 2014 .gitignore use RStudio Sep 25, 2014 .travis.yml use parts of configuration for ProjectTemplate Sep 28, 2014 DESCRIPTION Bump version to 0.2 Sep 29, 2014 Makefile remove gh-pages target Sep 25, 2014 NAMESPACE new function available.loglevels() Sep 27, 2014 NEWS.md Bump version to 0.2 Sep 29, 2014 NEWS.md.tmpl add NEWS Sep 25, 2014 README.markdown remove ::: notation from README Sep 26, 2014 TODO Added verbosity tool for jcborras Jun 23, 2011 appveyor.yml use AppVeyor Sep 25, 2014 cran-comments.md CRAN comments Sep 29, 2014 log4r.Rproj auto-update project settings Sep 25, 2014 README.markdown log4r Introduction The log4r package is meant to provide a clean, lightweight object-oriented approach to logging in R based roughly on the widely emulated log4j API. The example code below shows how the logger is used in practice to print output to a simple plaintext log file. Installation Stable CRAN version: install.packages(""log4r"") Development version on GitHub: devtools::install_github(""johnmyleswhite/log4r"") Example Code # Import the log4r package. library('log4r')  # Create a new logger object with create.logger(). logger <- create.logger()  # Set the logger's file output: currently only allows flat files. logfile(logger) <- file.path('base.log')  # Set the current level of the logger. level(logger) <- ""INFO""  # Try logging messages at different priority levels. debug(logger, 'A Debugging Message') # Won't print anything info(logger, 'An Info Message') warn(logger, 'A Warning Message') error(logger, 'An Error Message') fatal(logger, 'A Fatal Error Message') The log4r Priority Levels log4r supports five priority levels. In order from lowest to highest priority, they are: ""DEBUG"" ""INFO"" ""WARN"" ""ERROR"" ""FATAL"" Keep in Mind Calling logfile(logger) <- file.path('logs', 'my.log') will fail if the logs directory does not already exist. In general, no effort is made to create non-existent directories. Only messages at or above the current priority level are logged. Messages below this level are simply ignored. Using the internal priority level constants using the ::: notation is deprecated, but no warning is given. It is safer to simply use strings or numeric constants. Future Changes create.logger() will become a singleton method to insure log integrity. Future versions of log4r will respect the format attribute of logger objects. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/johnmyleswhite/log4r"	"A log4j derivative for R"	"true"
"Logging"	"logging"	"https://cran.r-project.org/web/packages/logging/index.html"	"A logging package emulating the python logging package."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CRAN - Package logging logging: R logging package logging is a pure R package that implements the ubiquitous log4j package. Version: 0.7-103 Depends: R (≥ 2.12.0), methods Suggests: svUnit, XML Published: 2013-04-12 Author: Mario Frasca Maintainer: Mario Frasca <mariotomo at gmail.com> BugReports: NA License: GPL-2 | GPL-3 [expanded from: GPL (≥ 2)] URL: NA NeedsCompilation: no CRAN checks: logging results Downloads: Reference manual: logging.pdf Package source: logging_0.7-103.tar.gz Windows binaries: r-devel: logging_0.7-103.zip, r-release: logging_0.7-103.zip, r-oldrel: logging_0.7-103.zip OS X Mavericks binaries: r-release: logging_0.7-103.tgz, r-oldrel: logging_0.7-103.tgz Old sources: logging archive Reverse dependencies: Reverse imports: gitter, mbest, wrswoR"	"null"	"null"	"A logging package emulating the python logging package."	"true"
"Other Tools"	"git2r"	"https://github.com/ropensci/git2r"	"Gives you programmatic access to Git repositories from R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"84"	"11"	"23"	"GitHub - ropensci/git2r: R bindings to the libgit2 library Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 11 Star 84 Fork 23 ropensci/git2r Code Issues 24 Pull requests 1 Wiki Pulse Graphs R bindings to the libgit2 library 1,794 commits 4 branches 8 releases Fetching contributors C 89.6% R 9.8% M4 0.3% Makefile 0.1% C++ 0.1% Objective-C 0.1% C R M4 Makefile C++ Objective-C Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags add_gitstamp_method fr_commits master respect_http_sslverify_false Nothing to show v0.15.0 v0.14.0 v0.13.1 v0.12.1 v0.11.0 v0.10.1 v0.7 v0.6 Nothing to show New pull request Latest commit 7b0f435 Jul 2, 2016 stewid Revert to use the libgit2 source code at 'e4218450' … The tests in ‘tests/repository.R’ failed with the libgit2 source code at 'd824346'  Signed-off-by: Stefan Widgren <stefan.widgren@gmail.com> Permalink Failed to load latest commit information. R Revert to use the libgit2 source code at 'e4218450' Jul 2, 2016 figure Plot functionality moved to ggit package Sep 19, 2014 inst Add CITATION file. Closes #229 Mar 18, 2016 man Add the option 'all_untracked' to the 'status' method May 19, 2016 patches Update patch Jul 2, 2016 scripts Update build Makevars.in script for parallel make Apr 20, 2016 src Revert to use the libgit2 source code at 'e4218450' Jul 2, 2016 tests Add test for 'is_commit' Mar 27, 2016 tools Fix typo Mar 9, 2016 .Rbuildignore Refactor windows build setup Mar 1, 2016 .gitignore Refactor windows build setup Mar 1, 2016 .travis.yml Exclude libgit2 source code from coverage testing Jul 1, 2016 CONTRIBUTING.md copy edits to CONTRIBUTING.md Sep 7, 2015 DESCRIPTION Bump version to 0.15.0.9000 for development May 11, 2016 LICENSE Added GPLv2 LICENSE file Dec 30, 2013 Makefile Update 'sync_libgit2' target in root Makefile Jul 2, 2016 NAMESPACE Add 'is_branch' method Mar 27, 2016 NEWS Bump version to 0.15.0.9000 for development May 11, 2016 README.md Add test coverage Mar 5, 2016 appveyor.yml Use new configuration for Windows in appveyor.yml Aug 2, 2015 cleanup Fix 'clenaup' Mar 9, 2016 configure Update configure script Jul 2, 2016 configure.ac Update configure script Jul 2, 2016 README.md Introduction The git2r package gives you programmatic access to Git repositories from R. Internally the package uses the libgit2 library which is a pure C implementation of the Git core methods. For more information about libgit2, check out libgit2's website (http://libgit2.github.com). Suggestions, bugs, forks and pull requests are appreciated. Get in touch. Installation To install the version available on CRAN: install.packages(""git2r"") To install the development version of git2r, it's easiest to use the devtools package: # install.packages(""devtools"") library(devtools) install_github(""ropensci/git2r"") Another alternative is to use git and make $ git clone https://github.com/ropensci/git2r.git $ cd git2r $ make install Usage Repository The central object in the git2r package is the S4 class git_repository. The following three methods can instantiate a repository; init, repository and clone. Create a new repository Create a new repository in a temporary directory using init library(git2r) #> Loading required package: methods  ## Create a temporary directory to hold the repository path <- tempfile(pattern=""git2r-"") dir.create(path)  ## Initialize the repository repo <- init(path)  ## Display a brief summary of the new repository repo #> Local:    /tmp/Rtmp7CXPlx/git2r-1ae2305c0e8d/ #> Head:     nothing commited (yet)  ## Check if repository is bare is_bare(repo) #> [1] FALSE  ## Check if repository is empty is_empty(repo) #> [1] TRUE  Create a new bare repository ## Create a temporary directory to hold the repository path <- tempfile(pattern=""git2r-"") dir.create(path)  ## Initialize the repository repo <- init(path, bare=TRUE)  ## Check if repository is bare is_bare(repo) #> [1] TRUE  Clone a repository ## Create a temporary directory to hold the repository path <- file.path(tempfile(pattern=""git2r-""), ""git2r"") dir.create(path, recursive=TRUE)  ## Clone the git2r repository repo <- clone(""https://github.com/ropensci/git2r"", path) #> cloning into '/tmp/Rtmp7CXPlx/git2r-1ae27d811539/git2r'... #> Receiving objects:   1% (24/2329),   12 kb #> Receiving objects:  11% (257/2329),   60 kb #> Receiving objects:  21% (490/2329),  100 kb #> Receiving objects:  31% (722/2329),  125 kb #> Receiving objects:  41% (955/2329),  237 kb #> Receiving objects:  51% (1188/2329),  574 kb #> Receiving objects:  61% (1421/2329), 1014 kb #> Receiving objects:  71% (1654/2329), 1350 kb #> Receiving objects:  81% (1887/2329), 1733 kb #> Receiving objects:  91% (2120/2329), 2614 kb #> Receiving objects: 100% (2329/2329), 2641 kb, done.  ## Summary of repository summary(repo) #> Remote:   @ origin (https://github.com/ropensci/git2r) #> Local:    master /tmp/Rtmp7CXPlx/git2r-1ae27d811539/git2r/ #> #> Branches:          1 #> Tags:              0 #> Commits:         320 #> Contributors:      3 #> Ignored files:     0 #> Untracked files:   0 #> Unstaged files:    0 #> Staged files:      0  ## List all references in repository references(repo) #> $`refs/heads/master` #> [6fb440] master #> #> $`refs/remotes/origin/master` #> [6fb440] origin/master  ## List all branches in repository branches(repo) #> [[1]] #> [6fb440] (Local) (HEAD) master #> #> [[2]] #> [6fb440] (origin @ https://github.com/ropensci/git2r) master  Open an existing repository ## Open an existing repository repo <- repository(path)  ## Workdir of repository workdir(repo) #> [1] ""/tmp/Rtmp7CXPlx/git2r-1ae27d811539/git2r/""  ## List all commits in repository commits(repo)[[1]] # Truncated here for readability #> Commit:  6fb440133765e80649de8d714eaea17b114bd0a7 #> Author:  Stefan Widgren <stefan.widgren@gmail.com> #> When:    2014-04-22 21:43:19 #> Summary: Fixed clone progress to end line with newline  ## Get HEAD of repository head(repo) #> [6fb440] (Local) (HEAD) master  ## Check if HEAD is head is_head(head(repo)) #> [1] TRUE  ## Check if HEAD is local is_local(head(repo)) #> [1] TRUE  ## List all tags in repository tags(repo) #> list()  Configuration config(repo, user.name=""Git2r Readme"", user.email=""git2r.readme@example.org"")  ## Display configuration config(repo) #> global: #>         core.autocrlf=input #> local: #>         branch.master.merge=refs/heads/master #>         branch.master.remote=origin #>         core.bare=false #>         core.filemode=true #>         core.logallrefupdates=true #>         core.repositoryformatversion=0 #>         remote.origin.fetch=+refs/heads/*:refs/remotes/origin/* #>         remote.origin.url=https://github.com/ropensci/git2r #>         user.email=git2r.readme@example.org #>         user.name=Git2r Readme  Commit ## Create a new file writeLines(""Hello world!"", file.path(path, ""test.txt""))  ## Add file and commit add(repo, ""test.txt"") commit(repo, ""Commit message"") #> Commit:  0a6af48cedf43208bde34230662280514e0956eb #> Author:  Git2r Readme <git2r.readme@example.org> #> When:    2014-04-22 21:44:57 #> Summary: Commit message  Included software The C library libgit2. See inst/AUTHORS for the authors of libgit2. The libgit2 library has been modified, e.g. to use the R printing and error routines, and to use runif instead of rand. License The git2r package is licensed under the GPLv2. See these files for additional details: LICENSE - git2r package license (GPLv2) inst/COPYING - Copyright notices for additional included software Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/git2r"	"Gives you programmatic access to Git repositories from R."	"true"
"Other Interpreters"	"CXXR"	"https://www.cs.kent.ac.uk/projects/cxxr/"	"Refactorising R into C++."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"CXXR: Refactorising R into C++ - Introduction CXXR: Refactorising R into C++ News Download and Installation Porting Roadmap FAQ Bug reporting Refactorisation history API documentation (doxygen) Full documentation (doxygen) Links Introduction The aim of the CXXR project is gradually to refactor (reengineer) the interpreter of the R language, currently written for the most part in C, into C++, whilst as far as possible retaining full functionality. CXXR is being carried out independently of the main R development and maintenance effort. Note: the CXXR documentation often uses the acronym CR to refer to the standard R interpreter, in contradistinction to CXXR. Why do this? It is hoped that by reorganising the code along object-oriented lines, by deploying the tighter code encapsulation that is possible in C++, and by improving the internal documentation, the project will make it easier for researchers to develop experimental versions of the R interpreter. An important subsidiary objective is to create a variant of R with built-in facilities for provenance tracking, so that for any R data object it will be possible to determine exactly which original data files it was derived from, and exactly which sequence of operations was used to produce it: if you remember the old S AUDIT facility, you will probably know how useful this can be. Why C++? C++, though perhaps somewhat unfashionable, is a strongly-typed language with a powerful range of facilities for object-oriented programming. In its design, constant attention has been paid to providing a smooth conversion pathway from C. Compilers, including free compilers, are readily available, and the language is well standardised. The current standard is ISO14882:2003, but the objective in CXXR is to require only that the compiler be able to cope with code conforming to the earlier standard, ISO14882:1998. And last but not least, it is a language that I have had years of experience with (though always learning more!). Wouldn't it be better to use Java, Objective C, Concurrent Haskell, VB.NET... ? Maybe you're right: if you have the time and the expertise, go right ahead! What has been done so far? Memory allocation and garbage collection have now been decoupled from each other and from R-specific functionality, and encapsulated within C++ classes. Classes CellPool, MemoryBank and Allocator look after memory allocation; GCManager, GCNode, GCRoot and WeakRef look after garbage collection. (All CXXR classes are within the namespace CXXR.) Garbage collection is now based primarily on reference counting, with a (non-generational) mark-sweep algorithm as a backstop. The SEXPREC union of CR has been converted into an extensible hierarchy of classes rooted at a class RObject (which inherits from GCNode). The functionality of duplicate1() (in CR's file duplicate.c) has been reimplemented using class copy constructors and a virtual function RObject::clone(). Code associated with a particular R data type is progressively being shifted into the relevant class, and C++'s public/protected/private access controls used to defend class invariants. Any class in the RObject hierarchy can apply its own checks on how attributes are set, and override the default way in which attribute values are stored internally. All environments, including the base environment and the base namespace, are now implemented in essentially the same way, using the abstract C++ class Frame as the fundamental building block. Facilities such as those provided by the package RObjectTables can now be implemented more simply by inheriting from Frame. Hooks have been provided for monitoring the reading or writing of symbol bindings within environments. Refactoring of the evaluation logic into C++ is well advanced. The various functions associated with CR contexts (RCNTXT) have been separated and refactored using a variety of mechanisms. In particular, indirect flows of control are now much more in line with C++ idioms, in particular in relying on object destructors to restore necessary state as the stack is unwound. An increasing amount of internal functionality is being refactored using C++ generics, and made available to C++ package code via the $(R_HOME)/include/CXXR API. For example R's subscripting operations (subsetting and subassignment) are now carried out by algorithms implemented as C++ templates, so that they are applicable to generalised vectors of arbitrary element types, not just the R built-in vector types. See the refactoring history for more information. Can I help? Certainly, most readily by trying out CXXR and reporting any bugs you find. Beware however that if you come across program faults, CXXR is likely to abort gracelessly without saving your work! (Control-C will also abort the interpreter at present.) Testing in a non-English locale would be particularly welcome. If you want to contribute to coding, experience specifically of C++ would be a definite advantage: unfortunately, good C programmers tend to make bad C++ programmers (and vice versa); Java likewise. I would particularly welcome help in porting CXXR to platforms other than Linux, particularly Microsoft Windows (using mingw etc.). My contact email is at the foot of this page. Acknowledgements CXXR would obviously not have been feasible without the work of the R core team in developing and maintaining R itself. The overwhelming majority of the code in CXXR is lifted directly from R (under the terms of the GNU General Public Licence). But equally important is the excellent test suite that the R team has developed, and to which I hope CXXR will in due course be able to contribute. Particular thanks are owed to the following (in alphabetical order): Douglas Bates Jochen Laubrock Uwe Ligges Martin Maechler Sam Nicholls Jens Oehlschlägel Chris Silles Copyright © Andrew Runnalls 2008-13 $Id: index.html 1409 2013-10-01 13:57:22Z arr $"	"null"	"null"	"Refactorising R into C++."	"true"
"Other Interpreters"	"fastR"	"https://bitbucket.org/allr/fastr/wiki/Home"	"FastR is an implementation of the R Language in Java atop Truffle and Graal."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"allr / FastR / wiki / Home — Bitbucket  Bitbucket Features Pricing owner/repository English English 日本語 Sign up Log in FastR Actions Clone Compare Fork Navigation Overview Source Commits Branches Pull requests Wiki Downloads Settings HTTPS HTTPS SSH Need help cloning? Learn how to clone a repository. Clone in SourceTree Atlassian SourceTree is a free Git and Mercurial client for Windows. Atlassian SourceTree is a free Git and Mercurial client for Mac. allr Untitled project FastR Wiki Clone wiki HTTPS HTTPS SSH Need help cloning? Learn how to clone a repository. Clone in SourceTree Atlassian SourceTree is a free Git and Mercurial client for Windows. Atlassian SourceTree is a free Git and Mercurial client for Mac. FastR / Home View History Introduction FastR is an implementation of the R Language in Java atop Truffle and Graal. Truffle is a framework for building self-optimizing AST interpreters. Graal is a dynamic compiler that is used to generate efficient machine code from partially evaluated Truffle ASTs. FastR is an open-source effort of Purdue University, Johannes Kepler University Linz, and Oracle Labs. Quick Start System Requirements FastR is developed and tested on Oracle Enterprise Linux 6.3 and Mac OS X Yosemite. It should work on other Linux variants. Building on Windows is currently not supported. To build and run FastR, you need both JDK 1.8 and JDK 1.7 and a C/C++/Fortran compiler tool chain. You also need to use the mx build tool, which is used in all projects built around Graal. mx requires Python 2.7. Getting FastR Clone mx: hg clone https://username@bitbucket.org/allr/mx Append the mx directory to your PATH. FastR requires Graal. Both projects are hosted in different repositories. To obtain both, use the multiple-repository support in mx, create a directory, e.g., r, that serves as the project root. We will refer to this as $FASTR_HOME in what follows. $ cd $FASTR_HOME $ mx sclone https://username@bitbucket.org/allr/fastr  After this, you should find three directories called fastr, jvmci and graal in the project root. Note that mx first downloaded fastr and then, using the information in the mx.fastr/imports file, downloaded a specific revision of Graal, which comes in two parts, jvmci and graal. In addition to setting the JAVA_HOME environment variable to the location of your JDK 1.8 installation, you must also set the EXTRA_JAVA_HOMES environment variable to the location of your JDK 1.7 installation, as some sub-projects require Java 7 to build. Building FastR mx manages software in suites, which are normally one-to-one with a Mercurial repository. One suite is always designated as the primary suite, which in this case is fastr. To build a suite and the suites it depends on, the mx build command is used: $ cd fastr $ mx build  FastR shares some code with GnuR, for example, the default packages and the Blas library. Therefore, a version of GnuR (currently R-3.1.3), is downloaded and built as part of the first build. When building for the first time, the build script will prompt you for a VM configuration to build. In general, choosing the server configuration is advised. For details, see README_GRAAL.txt in the graal subdirectory of the project root. The first build will also download various required libraries, so there must be a network connection. After building, running the FastR console is done with mx r or mx R. FastR supports the same command line arguments as R, so running an R script is done with mx R -f <file>. However, many of the command line options are not yet implemented. IDE Usage For IDE usage instructions, see the corresponding page on the Graal wiki. N.B. You should substitute $FASTR_HOME for $GRAAL when reading the instructions. I.e., $FASTR_HOME should be the workspace root. Completeness FastR is a work in progress: please expect many rough edges and non-working language features. The tests in the com.oracle.truffle.r.test project can give you an idea of what is currently supported. Contributing We would like to grow the FastR open-source community to provide a free R implementation atop the Truffle/Graal stack. We encourage contributions, and invite interested developers to join in. Prospective contributors need to sign the Oracle Contributor Agreement (OCA). Contact Please direct questions and comments to the FastR mailing list. Authors Purdue University: Tomas Kalibera, Petr Maj, Jan Vitek, Prahlad Joshi Johannes Kepler University Linz: Andreas Woess Oracle Labs: Michael Haupt, Christian Humer, Mick Jordan, Lukas Stadler, Adam Welc, Christian Wirth, Thomas Wuerthinger Interns/Postdocs: Gero Leinemann, Roman Katerinenko Updated 2015-10-02 Blog Support Plans & pricing Documentation API Site status Version info Terms of service Privacy policy English Git 2.7.4.1.g5468f9e Mercurial 3.6.3 Django 1.7.11 Python 2.7.3 b7520e3d05e9 / b7520e3d05e9 @ app-104 JIRA Software Confluence Bamboo SourceTree HipChat Atlassian Help Online help Learn Git Keyboard shortcuts Latest features Bitbucket tutorials Site status Support"	"null"	"null"	"FastR is an implementation of the R Language in Java atop Truffle and Graal."	"true"
"Other Interpreters"	"incanter"	"https://github.com/incanter/incanter"	"Clojure-based, R-like statistical computing and graphics environment for the JVM with Lisp spirit."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"1760"	"128"	"254"	"GitHub - incanter/incanter: Clojure-based, R-like statistical computing and graphics environment for the JVM Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 128 Star 1,760 Fork 254 incanter/incanter Code Issues 55 Pull requests 8 Wiki Pulse Graphs Clojure-based, R-like statistical computing and graphics environment for the JVM http://incanter.org 1,282 commits 8 branches 15 releases 84 contributors Clojure 95.4% Java 2.5% HTML 1.8% Other 0.3% Clojure Java HTML Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags 1.0.x 1.2.1 1.2.2 chrono clojure-1.3 develop gh-pages master Nothing to show 1.9.0 1.5.7 1.5.6 1.5.5 1.5.4 1.5.2 1.5.1 1.5.0 1.4.1 1.4.0 1.2.4 1.2.2 1.2.1 1.2.0 1.0 Nothing to show New pull request Latest commit dabbbb8 May 30, 2016 mikera Merge pull request #335 from zenhao/patch-1 … Using https to avoid redirect Permalink Failed to load latest commit information. data Merge remote-tracking branch 'upstream/master' Oct 29, 2013 docs add sample chapter from ""Clojure Data Analysis Cookbook"" Jun 9, 2013 examples Update bayes.clj May 18, 2014 modules bump version to 1.5.8-SNAPSHOT Feb 1, 2016 script adapt script/push to changes in the script/run-cmd Apr 27, 2014 src rewrite the repl script Apr 18, 2014 .gitignore Release Incanter 1.5.5 Apr 27, 2014 .travis.yml should fix build error on travis-ci Feb 11, 2013 Changes.md 1.5.7 release Feb 1, 2016 README.textile Using https to avoid redirect Apr 21, 2016 epl-v10.html Extra files Aug 6, 2013 project.clj bump version to 1.5.8-SNAPSHOT Feb 1, 2016 README.textile Overview Getting started with Clojure Getting started with Incanter Include in Clojure project Use standalone app Usage Documentation and examples Building Incanter Dependencies Overview and motivation Incanter is a Clojure-based, R-like statistical computing and graphics environment for the JVM. At the core of Incanter are the Parallel Colt numerics library, a multithreaded version of Colt, and the JFreeChart charting library, as well as several other Java and Clojure libraries. The motivation for creating Incanter is to provide a JVM-based statistical computing and graphics platform with R-like semantics and interactive-programming environment. Running on the JVM provides access to the large number of existing Java libraries for data access, data processing, and presentation. Clojure’s seamless integration with Java makes leveraging these libraries much simpler than is possible in R, and Incanter’s R-like semantics makes statistical programming much simpler than is possible in pure Java. Motivation for a Lisp-based R-like statistical environment can be found in the paper Back to the Future: Lisp as a Base for a Statistical Computing System by Ihaka and Lang (2008). Incanter is also inspired by the now dormant Lisp-Stat (see the special volume in the Journal of Statistical Software on Lisp-Stat: Past, Present, and Future from 2005). Motivation for a JVM-based Lisp can be found at the Clojure website, and screencasts of several excellent Clojure talks by the language’s creator, Rich Hickey, can be found at Clojure TV. Getting started with Clojure For a great introduction to programming in Clojure, read Clojure – Functional Programming for the JVM. by R. Mark Volkmann. For an even more extensive introduction, get one of the books on Clojure Programming Clojure, 2ed by Stuart Halloway and Aaron Bedra, “The Joy of Clojure” by Michael Fogus and Chris Houser, “Clojure in Action” by Amit Rathore, “Practical Clojure” by Luke VanderHart and Stuart Sierra. Other Clojure resources Clojure website Getting Started with Clojure Clojure Google group clojure Disclojure blog Full Disclojure screencasts Getting started with Incanter Include in Clojure project Include all incanter modules at once in your project.clj: :dependencies [[org.clojure/clojure ""1.6.0""]                [incanter ""1.5.7""]] Or only the modules you need: :dependencies [[org.clojure/clojure ""1.6.0""]                [incanter/incanter-core ""1.5.7""]                [incanter/incanter-charts ""1.5.7""]] Start repl: lein repl Use standalone app Start by visiting the Incanter website for an overview, checkout the documentation page for a listing of HOW-TOs and examples, and then download either an Incanter executable or a pre-built version of the latest build of Incanter, which includes all the necessary dependencies, and unpack the file (if you would like to build it from source, read Building Incanter). You also might need to install libgfortran3 library that is required for jblas that is powering matrix operations (see jblas wiki for more details). Start the Clojure REPL (aka the shell) by double-clicking on the downloaded executable or, if you downloaded the pre-built distribution, running one of the scripts in the Incanter directory: script/repl or script\repl.bat on Windows. Usage From the Clojure REPL, load the Incanter libraries: user=> (use '(incanter core stats charts io)) Try an example: sample 1,000 values from a standard-normal distribution and view a histogram: user=> (view (histogram (sample-normal 1000))) Try another simple example, a plot of the sine function over the range -4 to 4: user=> (def my-plot (function-plot sin -10 10)) user=> (view my-plot) You can save plots into a png file: user=> (save my-plot ""plot.png"") Incanter can save charts into pdf or svg files. Check incanter.pdf/save-pdf and incanter.svg/save-svg functions. Let’s play with some data now. We’ll look at London weather for 2012: ; function that returns dataset containing weather in London for given month in 2012 (defn weather-for-month [month]   (-> (format ""https://www.wunderground.com/history/airport/EGLL/2012/%d/10/MonthlyHistory.html?format=1"" month)       (read-dataset :header true)))  ; get weather data for each month in 2012 and build single dataset (def data (->> (range 1 13) (map weather-for-month) (apply conj-rows)))  ; view dataset in a table and view histogram of mean temperature (view data) ; wunderground.com formats temperature depending on locale/location/whatever  ; so you might need to use ""Mean TemperatureF"" otherwise you'll get NullPointerException. (view (histogram ""Mean TemperatureC"" :nbins 100 :data data))  ; function that given month ""2012-9-20"" extracts month and returns 9 (defn month [date] (Integer/parseInt (second (.split date ""-""))))  ; dataset that contains 2 columns: month and mean temperature for that month ; don't forget to change to ""Mean TemperatureF"" if you did so few steps back. (def grouped-by-month   (->> (map (fn [date temp] {:month (month date) :temp temp})             ($ ""GMT"" data) ($ ""Mean TemperatureC"" data))        to-dataset        ($rollup :mean :temp :month)        ($order :month :asc)))  ; view line chart that shows that August was the warmest month (view (line-chart :month :temp :data grouped-by-month)) The online documentation for most Incanter functions contain usage examples. The documentation can be viewed using Clojure’s doc function. For example, to view the documentation and usage examples for the linear-model function, call (doc linear-model) from the Clojure shell. Use (find-doc ""search term"") to search the online documentation from the Clojure shell. The API documentation can also be found at http://incanter.github.io/incanter/. The Clojure Data Analysis Cookbook (published by Packt Publishing) contains several chapters dedicated to Incanter, including work with datasets, charting, etc. You can read the sample chapter that describes Incanter’s datasets. There is dedicated mailing list for discussions about Incater. It’s hosted on Google Groups. More Incanter examples See the Data-Sorcery blog See the Documentation table of contents Documentation The following documentation covers the Incanter and Clojure APIs and the APIs of the underlying java libraries. Incanter documentation Doc Index API Related API documentation Clojure API Parallel Colt Java API JFreeChart Java API Processing API Building Incanter To build and test Incanter, you will need to have Leiningen and git installed: 1. Clone the repository with git: git clone git://github.com/incanter/incanter.git 2. Install Leiningen (version 2.x) a. Download the lein script: wget https://github.com/technomancy/leiningen/raw/preview/bin/lein (use lein.bat on Windows) b. Place it on your path and chmod it to be executable: chmod +x lein c. Run: lein self-install 3. Execute script/install staying in the incanter directory – this will download all necessary dependencies, compile & install all Incanter’s modules into local Maven repository. The use of separate script is required because Incanter consists of several modules, and development versions are usually not available in official repositories. 4. Start a REPL: lein repl (it also starts nRepl server), or start a Swank server: lein ritz 4005 Other tasks: If you want to run the tests for each of Incanter’s modules, use script/test Each of Incanter’s modules are independent Leiningen projects. Just cd into modules/incanter-* and use Leiningen to build each one as a stand-alone library. script/install uses Leiningen to build all the modules and install them in your local ~/.m2 repository. Incanter dependencies Clojure Parallel Colt Netlib-Java (included with Parallel Colt) Clatrix jblas JFreeChart JCommon (included with JFreeChart) GnuJaxp (included with JFreeChart) OpenCSV iText Congomongo JLaTeXMath Apache POI JLine ClojureQL Batik SVG Toolkit Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/incanter/incanter"	"Clojure-based, R-like statistical computing and graphics environment for the JVM with Lisp spirit."	"true"
"Other Interpreters"	"pqR"	"http://www.pqr-project.org/"	"a ""pretty quick"" implementation of R"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"162"	"21"	"17"	"GitHub - radfordneal/pqR: pqR - a ""pretty quick"" version of R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 21 Star 162 Fork 17 radfordneal/pqR Code Issues 3 Pull requests 0 Wiki Pulse Graphs pqR - a ""pretty quick"" version of R 5,132 commits 331 branches 64 releases Fetching contributors C 52.1% R 23.4% FORTRAN 22.0% Tcl 0.8% TeX 0.7% C++ 0.6% Other 0.4% C R FORTRAN Tcl TeX C++ Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: Release-2016-0… Switch branches/tags Branches Tags 00-admin 00-copyright 00-future 00-news 00-version 00 01-Rprofmem 01-cleanup 01-inspect 01-omp 01-pnamedcnt 01-testing 01 02-cons-with-tag 02-copy-elements 02-epmatch 02-evalv-prim 02-promiseWith 02 03-ISNAN 03-contexts 03-def-COPY 03-fast-base 03-fast-const-eval 03-fast-spec 03-getAttrib 03-inlined 03-install 03-matchArgs 03-parens 03-promise-named 03-promiseArgs 03-protect 03-save-alloc 03-scalars 03-seq-varop 03-sexprec 03-stringops 03-translate 03-vstack 03-zap-isMissing 03 04-coerce-bind 04-dollar 04-ifloop-debug 04-relop-logic 04-subscript 04-vec-enlarge 04-vec-subset 04 05-BLAS 05-RNG 05-anyall 05-data-frame 05-matprod 05-pow 05-rowcolSums 05-sum-prod 05-transpose 05 06-applydefine 06-attrib 06-contexts2 06-def-nmcnt-macros 06-fast-prim 06-gc-mods 06-gram 06-objects 06-rm-named 06-varop-for 06-varop-sub 06 07-apply 07-coerce-bind2 07-math-cleanup 07-scalar-arith 07-use-nmcnt-macros 07 08-DispatchOrEval-change 08-fix-nmcnt-bugs 08-helpers-framework 08-matrix 08 09-arith-tasks 09-matprod-tasks 09-rowcolsums-tasks 09-set-pend-cmplx 09-subset-fix 09-subset-par 09-transpose-task 09-writetable 09 10-future 10-hash 10-no-SETLENGTH 10-pretty-news 10 11-newer-news 11-sxpinfo-chng 11 12-contributed 12-fixes-from-R-Core 12-gc-helpers 12-misc-cleanup 12-namedcnt-cleanup 12-subassign 12-variant-enhance 12-windows-fixes 12 13-helpers-help 13-newer-news 13-subassign2 13-subset 13 14-blas-opt 14-html 14-misc-cleanup 14-names-reorg 14-new-helpers 14-new-matprod 14-pqR-logo 14 15-crossprod 15-extra-news 15-matprod-test 15-task-merging 15 16-t-varop-mm 16-tune 16 17-fixes 17-mods 17-year-2014 17 18-new-news 18 19-doc 19-fixes-from-R-core 19-fixes 19-mods 19-new-pkgs 19 20-new-news 20 21-apply-dots 21-debug 21-dotcode 21-int-overflow 21-lookup 21-manual 21-misc-cleanup 21-new-variant 21-scalars 21 22-gc-old-to-new 22-more-scalars 22-remove-stuff 22-subset-revision 22-var-dotcode 22 23-applydefine 23-extra-sub 23-more-constants 23-more-dotcode 23-more-gc-mods 23-objects 23-prim-formals 23-seq-rep 23 24-copyright 24-misc 24-new-news 24-scalars-gc 24 25-char-sym-gc 25-direct-return 25-eval-overhead 25-from-2.15.1 25 26-arith 26-debug 26-misc 26-new-var 26-noreturn 26-sym-binding 26 27-copyright 27-eval-overhead 27-more-news 27-var-loc-assign 27 28-applydefine 28-const-optional 28-dupF-fix 28-matmult-na 28-new-lapack 28-not-lvalue-macro 28-stackcheck-fix 28-undo-context-chng 28 29-cleanup 29-diag-from-3.0.0 29-rel-news 29-speed-tweaks 29 30-bison 30-news-doc 30 31-apply-fix 31-cleanup 31-gc-mods 31-helpers 31-kalibera 31-speed-tweaks 31 32-no-fast-binary 32-no-parens 32 33-kalibera-fixes 33-kalibera-opt 33-misc 33-new-ISNAN 33-static-boxes 33 34-class-opt 34-cleanup 34-eval 34-kalibera-fixes 34 35-more-opt 35 36-dates 36-news 36 37-cleanup 37-new-news 37-pkg-checks 37-tests 37 38-nls-port-fix 38 39-new-news 39-parse-symbols 39-readBin-fix 39 40-cleanup 40-deparse 40-fgetc 40-new-news 40-new-parse 40-no-replDLL 40-windows-fixes 40 41-parse-deparse 41 42-helpers 42-new-po 42 43-from-later-R-Core 43-parse-data 43-startup 43 44-cleanup 44-copyright 44-news-rel 44-xlen 44 45-update-po 45 46-along 46-dotdot 46-drop-dim 46-fixes 46-version-doc 46 47-missing-under 47-new-matprod 47 48-copyright 48-dataframe 48 49-news 49-no-byte-compile 49-update-po 49-windows 49 50-fixes 50-from-2.15.1 50-new-protect 50 51-news 51 Release-2013-05-31 Release-2013-06-07 Release-2013-06-18 Release-2013-06-20 Release-2013-06-28 Release-2013-07-19 Release-2013-07-22 Release-2013-11-28 Release-2013-12-29 Release-2014-02-23 Release-2014-06-10 Release-2014-06-19 Release-2014-09-05 Release-2014-09-06 Release-2014-09-08 Release-2014-09-09 Release-2014-09-20 Release-2014-09-21 Release-2014-09-28 Release-2014-09-30 Release-2014-10-18 Release-2014-10-21 Release-2014-10-23 Release-2014-11-10 Release-2014-11-12 Release-2014-11-16 Release-2015-06-21 Release-2015-06-24 Release-2015-07-03 Release-2015-07-06 Release-2015-07-08 Release-2015-07-11 Release-2015-09-04 Release-2015-09-07 Release-2015-09-14 Release-2016-06-24 bug-tst1 gh-pages master Nothing to show pqR-2016-06-24 pqR-2015-09-14 pqR-2015-09-07 pqR-2015-09-04 pqR-2015-07-11 pqR-2015-07-08 pqR-2015-07-06 pqR-2015-07-03 pqR-2015-06-24 pqR-2015-06-21 pqR-2014-11-16 pqR-2014-11-12 pqR-2014-11-10 pqR-2014-10-23 pqR-2014-10-18 pqR-2014-09-30 pqR-2014-09-28 pqR-2014-09-21 pqR-2014-09-20 pqR-2014-09-09 pqR-2014-09-08 pqR-2014-09-06 pqR-2014-09-05 pqR-2014-06-19 pqR-2014-06-10 pqR-2014-02-23 pqR-2013-12-29 pqR-2013-11-28 pqR-2013-07-22 pqR-2013-07-19 pqR-2013-06-28 pqR-2013-06-20 pqR-2013-06-18 pqR-2013-06-07 R-3.3.1 R-3.3.0 R-3.2.5 R-3.2.4 R-3.2.3 R-3.2.2 R-3.2.1 R-3.2.0 R-3.1.3 R-3.1.2 R-3.1.1 R-3.1.0 R-3.0.3 R-3.0.2 R-3.0.1 R-3.0.0 R-2.15.3 R-2.15.2 R-2.15.1 R-2.15.0 R-2.14.2 R-2.14.1 R-2.14.0 R-2.13.2 R-2.13.1 R-2.13.0 R-2.12.2 R-2.12.1 R-2.12.0 R-2.11.1 Nothing to show New pull request Latest commit b843780 Jun 24, 2016 radfordneal Changes for release of 2016-06-24 Permalink Failed to load latest commit information. doc Changes for release of 2016-06-24 Jun 24, 2016 etc slight change from 2.15.1 Aug 1, 2014 m4 fix problem identifying makeinfo version Jun 5, 2016 po ran make update-po Jun 23, 2016 share better doc, mentioning Rgui, and revised R_BASE_COMPILE Aug 13, 2015 src Merge branch '49-windows' into 50 Jun 24, 2016 tests improve tests in simple-true.R Jun 14, 2016 tools update config.guess and config.sub to match 3.1.1 Aug 1, 2014 COPYING Files from R-2.11.1. May 18, 2013 ChangeLog Files from R-2.11.1. May 18, 2013 INSTALL revised install instructions Aug 20, 2015 MODS Changes for release of 2016-06-24 Jun 25, 2016 Makeconf.in Files from R-2.15.0. May 18, 2013 Makefile.fw introduce R_BIT_BUCKET for stuff previously going to /dev/null Jul 4, 2014 Makefile.in change to Makefile.in following 2.15.2 Aug 1, 2014 NEWS Changes for release of 2016-06-24 Jun 25, 2016 NEWS.pdf Changes for release of 2016-06-24 Jun 25, 2016 ONEWS First version released on github May 31, 2013 OONEWS First version released on github Jun 1, 2013 OOONEWS First version released on github Jun 1, 2013 README update to README Sep 9, 2014 SVN-REVISION Changes for release of 2016-06-24 Jun 25, 2016 VERSION Files from R-2.15.0. May 18, 2013 config.site Files from R-2.13.0. May 18, 2013 configure Changes for release of 2016-06-24 Jun 25, 2016 configure.ac mods for Accelerate in OS X 10.10, as in Oct. 22 R Core patch Oct 22, 2014 create-configure added create-configure Feb 17, 2014 pqR-BASE-DATE First version released on github May 31, 2013 pqR-BASE-VERSION First version released on github Jun 1, 2013 README pqR - a ""pretty quick"" implementation of the R programming language  This directory contains the source code (plus documentation) for an implementation of the R programming language, including some R packages.  This implementation is a modification of R-2.15.0, distributed by the R Core Team, and found at www.r-project.org.   Some modules are taken from R-2.15.1 and later R Core Team releases.  The modifications in pqR substantially improve the speed of R.  Some extensions to R are also implemented.  These modifications were written by Radford M. Neal, radfordneal@gmail.com.  For information on pqR, see project web page at pqR-project.org, and the git repository for the source code at github.com/radfordneal/pqR, which includes modification history.  This implementation of R is distributed under the GNU General Public Licence, version 2 or version 3.  See the file COPYING for a copy of version 2 of the GNU General Public Licence, and the files in share/licenses for copies of other licenses.  See doc/COPYRIGHTS for futher details on copyright of this software.  See the files INSTALL, NEWS, and MODS (or the directory ""mods"" if you are looking at a development version) for more information.  The ""doc"" directory contains much additional documentation.  -----------------------------------------------------------------------------                       THE BASIC R README             (from R-2.15.0, distributed 2012-03-30)   	   (See ""doc/FAQ"" and ""doc/RESOURCES"" for more detailed information 				      - these files are only in the tarballs) 	   (See ""INSTALL""             for help on installation)  1. INTRODUCTION  This directory contains the source code tree for R, which is a language which is not entirely unlike (versions 3 and 4 of) the S language developed at AT&T Bell Laboratories by Rick Becker, John Chambers and Allan Wilks.  R is free software distributed under a GNU-style copyleft.  The core of R is an interpreted computer language with a syntax superficially similar to C, but which is actually a ""functional programming language"" with capabilities similar to Scheme.  The language allows branching and looping as well as modular programming using functions.  Most of the user-visible functions in R are written in R, calling upon a smaller set of internal primitives.  It is possible for the user to interface to procedures written in C or Fortran languages for efficiency, and also to write additional primitives.  The R distribution contains functionality for a large number of statistical procedures.  Among these are: linear and generalized linear models, nonlinear regression models, time series analysis, classical parametric and nonparametric tests, clustering and smoothing.  There is also a large set of functions which provide a flexible graphical environment for creating various kinds of data presentations.  A package specification allows the production of loadable modules for specific purposes, and several hundred contributed packages are made available through the CRAN sites (see http://CRAN.R-project.org/mirrors.html for the current members).   2. HISTORY  R was initially written by Robert Gentleman and Ross Ihaka of the Statistics Department of the University of Auckland.  In addition, a large group of individuals has contributed to R by sending code and bug reports.  Since mid-1997 there has been a core group who can modify the R source code archive, listed in file doc/AUTHORS.  R 1.0.0 was released on 29 February 2000 and 2.0.0 on 4 October 2004.   3. PRESENT STATUS  The present version implements most of the functionality in the 1988 book ""The New S Language"" (the ""Blue Book"") and many of the applications.  In addition, we have implemented a large part of the functionality from the 1992 book ""Statistical Models in S"" (the ""White Book"") and the 1998 book ""Programming with Data"" (the ""Green Book"").  All the R functions have been documented in the form of help pages in an ""output independent"" form which can be used to create versions for HTML, LaTeX, text etc.  A 1800+ page Reference Index (a collection of all the help pages) can be obtained in a variety of formats.  The manual `An Introduction to R' provides a more user-friendly starting point, and there is an `R Language Definition' manual and more specialized manuals on data import/export and extending R.  See INSTALL for instructions on how to generate these documents.   4. GOALS  Our aim at the start of this project was to demonstrate that it was possible to produce an S-like environment which did not suffer from the memory-demands and performance problems which S has.  Somewhat later, we started to turn R into a ""real"" system, but unfortunately we lost a large part of the efficiency advantage in the process, so have revised the memory management mechanism and implemented delayed loading of R objects.  A lot of performance tuning has been done, including the ability to use tuned linear-algebra libraries.  Longer-term goals include to explore new ideas: e.g. virtual objects and component-based programming, and expanding the scope of existing ones like formula-based interfaces.  Further, we wish to get a handle on a general approach to graphical user interfaces (preferably with cross-platform portability), and to develop better 3-D and dynamic graphics.   Sincerely, The R Core Team.  Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/radfordneal/pqR"	"a ""pretty quick"" implementation of R"	"true"
"Other Interpreters"	"renjin"	"http://www.renjin.org/"	"a JVM-based interpreter for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"226"	"32"	"47"	"GitHub - bedatadriven/renjin: JVM-based interpreter for the R language for the statistical analysis. Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 32 Star 226 Fork 47 bedatadriven/renjin Code Issues 48 Pull requests 3 Wiki Pulse Graphs JVM-based interpreter for the R language for the statistical analysis. 2,059 commits 15 branches 7 releases Fetching contributors R 46.2% Java 45.2% FORTRAN 6.4% C 0.8% Yacc 0.6% Lex 0.3% Other 0.5% R Java FORTRAN C Yacc Lex Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags deferred-colsum feature-opencl feature-studio master optimize-read-table osgi refactor-invoke refactor-tests script-exception wip-compiler wip-fortran-arrays wip-graphics wip-guava wip-ifutools wip-s4-refactor Nothing to show relational-optimizations parent-0.7.0-RC7 parent-0.7.0-RC6 parent-0.7.0-RC5 parent-0.7.0-RC4 parent-0.7.0-RC3 parent-0.7.0-RC2 Nothing to show New pull request Fetching latest commit… Cannot retrieve the latest commit at this time. Permalink Failed to load latest commit information. appengine Harmonized test source format and enable checkstyle for tests Apr 22, 2016 cli Rationalized BLAS dependencies Jul 15, 2016 core Ignore materialization of memoized computations which are already cal… Jul 16, 2016 dist Fixed debian package dependencies Jul 15, 2016 math Upgraded to latest version of netlib-java Jul 15, 2016 packages Merge pull request #196 from bedatadriven/wip-compiler Jul 2, 2016 repl Fixed JLineRepl compilation problem Jul 15, 2016 script-engine Rationalized BLAS dependencies Jul 15, 2016 studio Automated code cleanup: Ensure that all control flow statements use b… Apr 16, 2016 test-packages Fixes #202. Lookup unqualified methods for .Fortran() and .C() calls Jul 4, 2016 tests Added R unit tests for base::sign() Jul 6, 2016 tools Move doxygen/code generation code to stay with headers Jul 4, 2016 .gitignore Fixes deparsing of formulas and symbols that require backticks Nov 25, 2014 BUILDING.md #168 Added make to list of build requirements May 31, 2016 EclipseCodeStyle.xml Added code style formatting rules for Eclipse Sep 1, 2011 LICENSE.txt Added a LICENSE.txt file and updated README Jul 3, 2013 README.md Updated build badge May 27, 2016 Vagrantfile #148: Ensured that the vagrant virtual box has sufficient memory to b… Mar 14, 2016 pom.xml Moved to repackaged asm dependency to avoid version conflicts Jul 2, 2016 testconvert.sed Moved additional tests out of core and into stats Jan 6, 2013 README.md Introduction Renjin is a new interpreter for the R Language for Statistical Computing, built on the Java Virtual Machine. The primary goals of the project are to provide a modern interpreter that serves as a drop-in replacement for GNU-R, but is easier to integrate with other systems, offers better performance, and is more extensible. For more information, please visit http://www.renjin.org. Maven Artifacts You can add Renjin to your Maven/Ivy/etc build by adding the following dependency and repository: <dependencies>   <dependency>     <groupId>org.renjin</groupId>     <artifactId>renjin-script-engine</artifactId>     <version>RELEASE</version>   </dependency> </dependencies> <repositories>   <repository>     <id>bedatadriven</id>     <name>bedatadriven public repo</name>     <url>https://nexus.bedatadriven.com/content/groups/public/</url>   </repository> </repositories>  Downloads Standalone distributions of Renjin are available for ad-hoc analysis. Downloads are available at Renjin.org. Artifacts from the latest successful build are available from the build server at https://nexus.bedatadriven.com/content/groups/public/org/renjin/. Compiling from Source At this time, building Renjin completely is only supported on Linux and OS X systems with gcc-4.6 installed. The resulting Java builds are fully platform-independent. See BUILDING for more information. License Renjin is available under the GPLv3 license, see LICENSE for the full text of the license. Renjin also includes code from R which is redistributed here. R uses many different licenses so check the file sources to see which license applies. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/bedatadriven/renjin"	"a JVM-based interpreter for R."	"true"
"Other Interpreters"	"rho"	"https://github.com/rho-devel/rho"	"Refactor the interpreter of the R language into a fully-compatible, efficient, VM for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"84"	"13"	"17"	"GitHub - rho-devel/rho Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 13 Star 84 Fork 17 rho-devel/rho Code Issues 6 Pull requests 2 Wiki Pulse Graphs No description or website provided. 51,392 commits 1 branch 0 releases Fetching contributors R 35.8% C 20.9% C++ 18.6% FORTRAN 18.3% M4 1.1% Makefile 1.0% Other 4.3% R C C++ FORTRAN M4 Makefile Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit bb9422b Jul 13, 2016 kmillar committed on GitHub Merge pull request #105 from kmillar/init Permalink Failed to load latest commit information. bench Add README for benchmark scripts (#103) Jul 12, 2016 doc Re-add the png version of the rho logo. May 19, 2016 etc Merge r-source until the R 3.3 branchpoint. Apr 5, 2016 m4 Merge wch/r-source/trunk into CXXR Feb 23, 2016 po Remove the bytecode compiler and interpreter. Dec 18, 2015 share Improve compatibility for packages using the C API Jun 23, 2016 src Merge pull request #105 from kmillar/init Jul 13, 2016 tests Compatibility fixes required to make dplyr build (#83) May 26, 2016 tools Merge wch/r-source/trunk into CXXR Feb 23, 2016 .clang-format Add a .clang-format file that matches the existing CXXR style fairly … Jul 10, 2014 .gitignore Rename project from CXXR to rho. Mar 25, 2016 .travis.yml Require LLVM 3.8 tests to pass Jul 13, 2016 .ubsan_suppressions Support and test more compilers (#52) Apr 29, 2016 COPYING Importing R-2.5.0 May 23, 2007 ChangeLog Merge wch/r-source/trunk into CXXR Feb 23, 2016 INSTALL First phase of upgrade to parallel CR 3.0.2. Jan 21, 2014 Makeconf.in Compatibility fixes required to make dplyr build (#83) May 26, 2016 Makefile.fw Update Makefiles for R -> rho renaming. Apr 1, 2016 Makefile.in Changes missing from the previous commit. May 6, 2016 README update README Jul 7, 2014 README.md Add OSX build instructions in README.md (#94) Jun 9, 2016 VERSION Merge wch/r-source/trunk into CXXR Feb 23, 2016 VERSION-NICK First phase of upgrade to parallel CR 3.0.2. Jan 21, 2014 acinclude.m4 First stage in reintegrating Chris Silles' configure branch into Aug 16, 2013 aclocal.m4 Merge wch/r-source/trunk into CXXR Feb 23, 2016 config.site Merge wch/r-source/trunk into CXXR Feb 23, 2016 configure Improve compatibility for packages using the C API Jun 23, 2016 configure.ac Improve compatibility for packages using the C API Jun 23, 2016 README.md Rho The goal of the Rho project is to refactor the interpreter of the R language into a fully-compatible, efficient, VM for R using modern software engineering techniques. Rho is being carried out independently of the main R development and maintenance effort. Currently the rho codebase is based off R-devel. Build Requirements Compiling rho requires a GCC or Clang compiler with C++ 11 support and fortran support. In addition the following libraries must be installed: boost >= 1.48.0 libcurl >= 7.28.0 zlib >= 1.2.5 libbzip2 >= 1.0.6 liblzma >= 5.0.3 pcre >= 8.10 libedit Compilation of the LLVM JIT requires clang 3.4 or later and the matching version of the LLVM library (except building on clang 3.7 is currently broken). Rho has been tested to compile on both Linux and Mac OSX systems. Configuration and Compilation To build with the LLVM JIT enabled: ./configure --enable-llvm-jit --enable-maintainer-mode make make check  For development builds, it is useful to set CFLAGS and CXXFLAGS to -Wall -DNO_CELLPOOLS -DCHECKED_SEXP_DOWNCAST -fsanitize=address -O1 in order to find bugs more easily. The configure call may complain about missing recommended packages. The recommended packages can be obtained by running the script tools/rsync-recommended. Building on OSX It is tricky to build rho with JIT support on OSX. The following steps show how to build without JIT support. First, you will need the XCode command line tools which provide clang and clang++. Additional dependencies you need are: Fortran compiler XZ library (liblzma) PCRE library Boost C++ library The above dependencies can be installed with e.g. Homebrew: brew install gcc # Provides gfortran. brew install xz brew install pcre brew install boost  After fetching the dependencies you should be able to build. If your Homebrew folder is in your home directory you will need to add ~/homebrew/include and ~/homebrew/lib as include/library directories: CC=clang CXX=clang++ \     CFLAGS='-I/Users/me/homebrew/include -g -O2' \     CXXFLAGS='-I/Users/me/homebrew/include -g -O2' \     CPPFLAGS='-I/Users/me/homebrew/include' \     LDFLAGS='-L/Users/me/homebrew/lib' \     ./configure --with-x=no  Notable Known Issues Currently rho doesn't support packages that contain native code that uses the USE_RINTERNALS macro. This includes Rcpp, rJava, data.table, xts and all the packages that depend on them. Our testing on different platforms is currently very limited. We currently test on Ubuntu trusty with gcc 4.9, gcc 5.3, gcc 6.1, clang 3.5, clang 3.6 and clang 3.8, so those should always work. OSX and other linux distros are also supported, but aren't regularly tested. Rho Discussion Mailing List. https://groups.google.com/forum/#!forum/rho-devel Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rho-devel/rho"	"Refactor the interpreter of the R language into a fully-compatible, efficient, VM for R."	"true"
"Other Interpreters"	"riposte"	"https://github.com/jtalbot/riposte"	"a fast interpreter and JIT for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"68"	"26"	"8"	"GitHub - jtalbot/riposte: a fast interpreter and JIT for R Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 26 Star 68 Fork 8 jtalbot/riposte Code Issues 62 Pull requests 0 Pulse Graphs a fast interpreter and JIT for R 561 commits 10 branches 2 releases Fetching contributors C++ 59.3% C 36.8% R 3.5% Other 0.4% C++ C R Other Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags gc gh-pages jit_gpu library master newvalues scalarjit speedy testing trace Nothing to show epee-llvm arbb Nothing to show New pull request Latest commit 98b859e Jul 29, 2013 jtalbot Added missing include file, fixes #6 Permalink Failed to load latest commit information. benchmarks library/core/R libs src tests .gitignore Makefile README.md TODO README.md Riposte, a fast interpreter and JIT for R. Justin Talbot justintalbot@gmail.com Zach Devito We only do development on OSX and Linux. It's unlikely that our JIT will work on Windows. Active development is currently happening on the library branch. See the Roadmap section below for information on development plans. Compiling riposte Run make release in the riposte directory, or make debug for the debug version Execute ./riposte to start Flags -j # : start with # worker threads (defaults to 1, set to the number of cores on your machine) -f filename : execute R script -v : verbose debug output for the vector trace recorder and JIT Limitations Riposte is in heavy development. Many things haven't been implemented and many things have been implemented incorrectly. Use with caution. Fixes welcome. License Riposte is distributed under the BSD 2-clause license (http://www.opensource.org/licenses/bsd-license.php). Riposte uses the following libraries: Eigen (http://eigen.tuxfamily.org) under the MPL2 license (http://www.mozilla.org/MPL/2.0/) Linenoise (https://github.com/antirez/linenoise/) under a BSD license Testing Riposte comes with a growing set of validation tests that compare the output of Riposte to standard R. Run make tests to run all the tests (R must be installed). No output indicates all tests passed. Run make tests/path/to/test to execute a single test and print its diff. Roadmap Riposte was developed as an academic research project with a focus on developing new techniques for executing dynamically typed vector code efficiently. We are now in the process of converting Riposte from research software to a robust drop-in replacement for R. This is a large effort; we estimate that the primary portion of this work will take about a year. Much of this work will be reimplementing R internal functions in a limited subset of R. Riposte is currently considered in an alpha state. We'll move to a beta release when support for R's base library is complete, around the end of the year. Our current goal is to release version 1.0 next July. Planned work for July-December 2013. The first three bullet points are currently in progress on the library branch. Partial work will be integrated to main by the end of July. Load the standard base R library without errors This will require support for about 15 primitive and external functions Support all R primitive operators (~200, 50 supported as of July 2013) The most common 40 or so will be appear as bytecodes in the Riposte VM, primarily control flow operators and a small set of common arithmetic The rest will be implemented in the Riposte core library Implement new .Map, .Scan, or .Fold FFI functions to allow vector fusion through primitives implemented as external calls in the core library Support for the 200 most common internal functions (out of ~580, 30 supported as of July 2013) They will be implemented primarily in R code in the Riposte internal library To support internal functions which access interpreter state (such as the sys.frame, etc. functions), the Riposte VM will provide a small set of introspection bytecodes (roughly 10). The design goal is that all access to the interpreter state will go through the known bytecode API, allowing for better reasoning about side effects in external code. All other C code necessary to support the internal functions will be implemented as part of the internal library, not as part of the interpreter itself. Stretch goal: execute all example code from the R base library help files without error Most of the internal functions will have to be implemented for this to happen Initial support for R's C-level API This remains one of the big unknowns about Riposte. How much work will it be to support existing C libraries? Convert Riposte's long vector JIT to use LLVM This will come with a slight compilation performance penalty, but will be easier to use in the future and will be much more portable than our current solution. Our short vector JIT already uses LLVM so this will make them easier to use together Integrate Riposte's short vector JIT from the tracing branch into the master branch Next (January-June 2014) Complete support for all R internal functions Complete support for R's C-level API Further JIT performance improvements Code clean up Version 1.0 release July 2014 Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/jtalbot/riposte"	"a fast interpreter and JIT for R."	"true"
"Other Interpreters"	"RRO"	"https://mran.revolutionanalytics.com/open/"	"Revolution R Open."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Microsoft R Open: The Enhanced R Distribution · MRAN  Skip to main content About R What is R? Getting Started with R R Data Sources About Packages Explore All Packages Explore by Task Views Package Spotlight CRAN Time Machine Microsoft R Open Microsoft R Open Home About Microsoft R Open Multithreaded Performance Reproducibility Installed Packages NEWS File FAQs Release History Community Microsoft R Open Forum R Blog R Consortium Applications of R Download Download Microsoft R Open 3.2.5 Installation Docs Microsoft R Open: The Enhanced R Distribution Microsoft R Open, formerly known as Revolution R Open (RRO), is the enhanced distribution of R from Microsoft Corporation. It is a complete open source platform for statistical analysis and data science. The current version, Microsoft R Open 3.2.5, is based on (and 100% compatible with) R-3.2.5, the most widely used statistics software in the world, and is therefore fully compatibility with all packages, scripts and applications that work with that version of R. It includes additional capabilities for improved performance, reproducibility, as well as support for Windows and Linux-based platforms. Like R, Microsoft R Open is open source and free to download, use, and share. Learn more... Download Release News Learn More About Microsoft R Open Reproducibility Multithreaded Performance Get Started! Download Microsoft R Open 3.2.5 Installation Docs Startup Tips & Tutorials More Resources Data Sources FAQs Release History Join Our Forum Microsoft R Open About Microsoft R Open Download Microsoft R Open Install Microsoft R Open Release History Packages Explore Packages Explore Task Views CRAN Time Machine Connect Contact Licenses"	"null"	"null"	"Revolution R Open."	"true"
"Other Interpreters"	"TERR"	"http://spotfire.tibco.com/discover-spotfire/what-does-spotfire-do/predictive-analytics/tibco-enterprise-runtime-for-r-terr"	"TIBCO Enterprise Runtime for R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"TIBCO Spotfire - TIBCO Enterprise Runtime for R (TERR) TIBCO Software Inc. | Documentation Community Support Contact Buy Sign In EnglishFrenchGermanItalianJapanesePortugueseSpanish PRODUCTS Spotfire Cloud Spotfire Platform Compare Products What's New SOLUTIONS TECHNOLOGY Big Data Analytics Content Analytics Predictive Analytics Location Analytics Event Analytics INDUSTRY Energy Financial Services Manufacturing Consumer Goods And Retail Telecommunications LEARN What Does Spotfire Do? Quick Start Guide Quick Reference Topics Data Visualization Tips And Tricks Training Services DEMOS Live Demo Demo Gallery FREE TRIAL Unleash the agility of R for the Enterprise Cutting edge analytics with enterprise speed, reliability and support TIBCO Enterprise Runtime for R (TERR) TERR, a key component of Spotfire Predictive Analytics, is an enterprise-grade analytic engine that TIBCO has built from the ground up to be fully compatible with the R language, leveraging our long-time expertise in the closely related S+ analytic engine. This allows customers to continue to develop in open source R, but to then integrate and deploy their R code on a commercially-supported and robust platform—without the need to rewrite their code. Prototypes are often developed in R, but then typically re-implemented in another language for production purposes because R was not built for enterprise usage. TERR brings enterprise-class scalability and stability to the agile R-language, and enables statisticians to broadly share their analyses through TIBCO Spotfire Statistics Services or by directly embedding the TERR engine. TERR enables customers to rapidly iterate from prototyping to production without wasting time and effort recoding and retesting their analyses, allowing them to more rapidly respond to opportunities and threats, and easily integrate standardized predictive analytics consistently across organization. TERR DATASHEET WHITEPAPER: PREDICTIVE ANALYTICS WITH SPOTFIRE AND TERR    Benefits of TERR Apply consistent models across multiple applications and uses, from prototyping to production--eliminating uncertainty when disparate analytic models Easily compare multiple analytic approaches to find the hidden insights and to make the best decisions--and then broadly leverage these insights across the organization Eliminate time/resources spent re-implementing R code for production, or spent prototyping on an unwieldy platform--Reducing the need for multiple analytic platforms Rapid cycle from prototyping to production to deliver faster time to insight/market. Continual refinement of models and consistent application across organization means everyone is using the right, best analytic    Technical Advantages of TERR Higher performance and far more robust memory management that open source R—so that performance is more linear as larger data is analyzed. TERR’s higher performance and more robust memory management enable seamless deployment of R code, opening new possibilities in contexts where the performance of open source R previously limited the production usage of R code. Models can be built in open source R, then deployed to TERR--in R’s native format for model objects--for high-performance scoring/prediction.  TERR frees developers from the limitations associated with representing an R model in a model markup language or SQL. Licensable for embedding and redistribution Architected for ongoing investment, to ensure that TERR meets analytic needs both now and in the future. Broad coverage of core R functionality and CRAN packages, giving customers access to cutting edge analytics in a production environment   TERR Developer's Edition and TERR Community The free Developer Edition of TERR available through the TERR Community Site enables customers to test their R code prior to deployment and integration The Developer's Edition is a fully-featured TERR engine, limited to Non-Production use.  TERR Community site provides a forum for the feedback, support and collaboration of R/TERR users, and detailed information on topics such as TERR’s coverage of R functionality and CRAN packages. TERR does not aim to replace open source R on developer desktops.  R developers can continue to develop code in open source R, using their preferred development environments.  Code written in open source R can typically be run in TERR without modification.    Integration options for TERR TERR in TIBCO Spotfire for tools and  applications powered by advanced analytics TERR in Statistics Services for distributed analytics Embeddable TERR Engine for tight, custom  integration and grid deployment TIBCO and TERR TERR has wide integration across the TIBCO platform, enabling customers to deploy consistent analytics across their organization: TERR is embedded in Spotfire Professional, where it powers the Predictive Modeling Tools TERR can also be embedded in Spotfire applications, locally under Spotfire Professional, or remotely through Statistics Services. TERR can be embedded in TIBCO Business Events for Complex Event Processing, to provide a scalable, high-throughput, low-latency analytic service, for real-time applications such as Fraud Detection and Customer Scoring.  TERR can post messages to TIBCO's Enterprise Social Networking product, tibbr, enabling TERR/R users to collaborate with their peers, share their results to contribute to ongoing discussions, and easily send notifications of long-running analytic results.  Featured Demo LOWESS Smoothing Analysis LAUNCH THE DEMO GALLERY Products Spotfire Cloud Spotfire Platform Compare Products What's New Solutions TECHNOLOGY Big Data Analytics Content Analytics Predictive Analytics Location Analytics Event Analytics INDUSTRY Energy Financial Services Manufacturing Consumer Goods and Retail Telecommunications Learn What Does Spotfire Do? Quick Start Guide Quick Reference Topics Data Visualization Tips and Tricks Training Services RESOURCES Case Studies Datasheets Whitepapers Analyst Reports EVENTS Live Events Webcasts Recorded Webcasts Product Demonstrations About Us Careers Customers Partners Community TIBCO Blog News Services Education Consultation Technical Support Program Better World Donation Program Contact Us Online SALES US: +1 866-240-0491 EMEA: +44 800 520 0443 mds@tibco.com CONSULTING spotfireconsulting@tibco.com TRAINING spotfireregistrar@tibco.com Copyright © 2016 TIBCO Software Inc. All rights reserved. | Privacy Policy Terms of Use Trademarks"	"null"	"null"	"TIBCO Enterprise Runtime for R."	"true"
"MOOCs"	"The Analytics Edge"	"https://www.edx.org/course/analytics-edge-mitx-15-071x-0"	"Hands-on introduction to data analysis with R from MITx."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"The Analytics Edge | edX Skip to main content Main menu Courses How It Works Schools & Partners Register About You are here Home > All Subjects > Data Analysis & Statistics > The Analytics Edge"	"null"	"null"	"Hands-on introduction to data analysis with R from MITx."	"true"
"MOOCs"	"Johns Hopkins University Data Science Specialization"	"https://www.coursera.org/specialization/jhudatascience/1"	"9 courses including: Introduction to R, literate analysis tools, Shiny and some more."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Specialization | Coursera Please use amodern browser with JavaScript enabled to use Coursera. 请下载现代的浏览器（IE10或Google Chrome）来使用Coursera。 تحميل Lädt... Chargement... Loading... Cargando... Carregando... Загрузка... Yükleniyor... 载入中 Please use amodern browser with JavaScript enabled to use Coursera."	"null"	"null"	"9 courses including: Introduction to R, literate analysis tools, Shiny and some more."	"true"
"MOOCs"	"HarvardX Biomedical Data Science"	"http://simplystatistics.org/2014/11/25/harvardx-biomedical-data-science-open-online-training-curriculum-launches-on-january-19/"	"Introduction to R for the Life Sciences."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"HarvardX Biomedical Data Science Open Online Training Curriculum launches on January 19 · Simply Statistics        Follow us on twitter @simplystats Home About Archive Conferences Courses Interviews Writing posts Simply Statistics A statistics blog by Rafa Irizarry, Roger Peng, and Jeff Leek HarvardX Biomedical Data Science Open Online Training Curriculum launches on January 19 25 Nov 2014 Share this on → Twitter | Facebook | Google+ We recently received We recently received  initiative to develop MOOCs for biomedical data science. Our first offering will be version 2 of my Data Analysis for Genomics course which will launch on January 19. In this version, the course will be turned into an 8 course series and you can get a certificate in each one of them. The motivation for doing this is to go more in-depth into the different topics and to provide different entry points for students with different levels of expertise. We provide four courses on concepts and skills and four case-study based course. We basically broke the original class into the following eight parts: Statistics and R for the Life Sciences Introduction to Linear Models and Matrix Algebra Advanced Statistics for the Life Sciences Introduction to Bioconductor Case study: RNA-seq data analysis Case study: Variant Discovery and Genotyping Case study: ChIP-seq data analysis Case study: DNA methylation data analysis You can follow the links to enroll. While not required, some familiarity with R and Rstudio will serve you well so consider taking Roger’s R course and Jeff’s Toolbox course before delving into this class. In years 2 and 3 we plan to introduce several other courses covering topics such as python for data analysis, probability, software engineering, and data visualization which will be taught by a collaboration between the departments of Biostatistics, Statistics and Computer Science at Harvard. Announcements will be made here and on twitter: @rafalab   Related Posts Tuesday update 11 Jul 2016 Not So Standard Deviations Episode 18 - Back on Planet Earth 05 Jul 2016 Tuesday Update 28 Jun 2016"	"null"	"null"	"Introduction to R for the Life Sciences."	"true"
"MOOCs"	"Explore Statistics with R"	"https://www.edx.org/course/explore-statistics-r-kix-kiexplorx-0"	"Covers introduction, data handling and statistical analysis in R."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"Explore Statistics with R | edX Skip to main content Main menu Courses How It Works Schools & Partners Register About You are here Home > All Subjects > Data Analysis & Statistics > Explore Statistics with R"	"null"	"null"	"Covers introduction, data handling and statistical analysis in R."	"true"
"Lists"	"Books"	"https://github.com/RomanTsegelskyi/rbooks"	"List of R Books."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"34"	"9"	"7"	"GitHub - RomanTsegelskyi/rbooks: A curated list of #rstats books Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 9 Star 34 Fork 7 RomanTsegelskyi/rbooks Code Issues 2 Pull requests 0 Pulse Graphs A curated list of #rstats books 24 commits 1 branch 0 releases Fetching contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 80dc037 May 17, 2016 RomanTsegelskyi Merge pull request #7 from chrisspruck/edits … Added ""Mastering R for Quantitative Finance"" to the Finance category. Permalink Failed to load latest commit information. CONTRIBUTING.md Update + added contributing section Aug 22, 2015 README.md Added ""Mastering R for Quantitative Finance"" to the Finance category. May 16, 2016 zzz.R Init Jul 23, 2015 README.md R Books A curated list of books about different aspects and applications of R programming language and an attempt to modernize R Books in a more user friendly way. Inspired by GoBooks. R Books Beginner Books Advanced Books Data Science Finance Machine Learning R Development Reports Visualization Beginner Books Learning R [Amazon] Learn how to perform data analysis with the R language and software environment, even if you have little or no programming experience. With the tutorials in this hands-on guide, you’ll learn how to use the essential R tools you need to know to analyze data, including data types and programming concepts. Hands-On Programming with R [Amazon] Learn how to program by diving into the R language, and then use your newfound skills to solve practical data science problems. With this book, you' ll learn how to load data, assemble and disassemble data objects, navigate R's environment system, write your own functions, and use all of R's programming tools. The R Book [Amazon] Very massive, hugely successful and popular text presenting an extensive and comprehensive guide for all R users. Covers wide variaty of R topics in great detail with very useful examples. R for Everyone: Advanced Analytics and Graphics [Amazon] Drawing on his unsurpassed experience teaching new users, professional data scientist Jared P. Lander has written the perfect tutorial for anyone new to statistical programming and modeling. Organized to make learning easy and intuitive, this guide focuses on the 20 percent of R functionality you’ll need to accomplish 80 percent of modern data tasks. Book's self-contained chapters start with the absolute basics, offering extensive hands-on practice and sample code. You’ll download and install R; navigate and use the R environment; master basic program control, data import, and manipulation; and walk through several essential tests. Then, building on this foundation, you’ll construct several complete models, both linear and nonlinear, and use some data mining techniques. R Cookbook [Amazon] With more than 200 practical recipes, this book helps you perform data analysis with R quickly and efficiently. The R language provides everything you need to do statistical work, but its structure can be difficult to master. This collection of concise, task-oriented recipes makes you productive with R immediately, with solutions ranging from basic tasks to input and output, general statistics, graphics, and linear regression. Learn R in a Day [Amazon] 'Learn R in a Day' provides the reader with key programming skills through an examples-oriented approach and is ideally suited for academics, scientists, mathematicians and engineers. The book assumes no prior knowledge of computer programming and progressively covers all the essential steps needed to become confident and proficient in using R within a day. Topics include how to input, manipulate, format, iterate (loop), query, perform basic statistics on, and plot data, via a step-by-step technique and demonstrations using in-built datasets which the reader is encouraged to replicate on their computer. Each chapter also includes exercises (with solutions) to practice key skills and empower the reader to build on the essentials gained during this introductory course. R Inferno [Online] Free ""If you are using R and you think you’re in hell, this is a map for you."" This is a great introduction to several aspects of R programming. Loading data into R, iterating over data with loops & logic statements, author even touches on creating packages. Nice and pretty thorough book on R. The R Programming Wikiboo [online] A collaborative book about R on the wikibooks website. Anyone can improve it. Advanced Books Advanced R [Online] [Amazon] Free Advanced R presents useful tools and techniques for attacking many types of R programming problems, helping you avoid mistakes and dead ends. With more than ten years of experience programming in R, the author illustrates the elegance, beauty, and flexibility at the heart of R. Data Manipulation with R, Second Edition [Packt] This book starts with the installation of R and how to go about using R and its libraries. We then discuss the mode of R objects and its classes and then highlight different R data types with their basic operations. The primary focus on group-wise data manipulation with the split-apply-combine strategy has been explained with specific examples. The book also contains coverage of some specific libraries such as lubridate, reshape2, plyr, dplyr, stringr, and sqldf. You will not only learn about group-wise data manipulation, but also learn how to efficiently handle date, string, and factor variables along with different layouts of datasets using the reshape2 package. By the end of this book, you will have learned about text manipulation using stringr, how to extract data from twitter using twitteR library, how to clean raw data, and how to structure your raw data for data mining. Data Science Mastering Data Science with R [Packt] This book will give you the guidance you need to build and develop your knowledge and expertise. Bridging the gap between theory and practice, this book will help you to understand and use data for a competitive advantage. Beginning with taking you through essential data mining and management tasks such as munging, fetching, cleaning, and restructuring, the book then explores different model designs and the core components of effective analysis. You will then discover how to optimize your use of machine learning algorithms for classification and recommendation systems beside the traditional and more recent statistical methods. Practical Data Science with R [Amazon] Practical Data Science with R shows you how to apply the R programming language and useful statistical techniques to everyday business situations. Using examples from marketing, business intelligence, and decision support, it shows you how to design experiments (such as A/B tests), build predictive models, and present results to audiences of all levels. This book is accessible to readers without a background in data science. Some familiarity with basic statistics, R, or another scripting language is assumed. R in Action: Data Analysis and Graphics with R [Amazon] With more than 200 practical recipes, this book helps you perform data analysis with R quickly and efficiently. The R language provides everything you need to do statistical work, but its structure can be difficult to master. This collection of concise, task-oriented recipes makes you productive with R immediately, with solutions ranging from basic tasks to input and output, general statistics, graphics, and linear regression. R Programming for Data Science [Leanpub] Free R in Action, Second Edition teaches you how to use the R language by presenting examples relevant to scientific, technical, and business developers. Focusing on practical solutions, the book offers a crash course in statistics, including elegant methods for dealing with messy and incomplete data. You'll also master R's extensive graphical capabilities for exploring and presenting data visually. And this expanded second edition includes new chapters on forecasting, data mining, and dynamic report writing. Exploratory Data Analysis with R [Leanpub] Free This book teaches you to use R to effectively visualize and explore complex datasets. Exploratory data analysis is a key part of the data science process because it allows you to sharpen your question and refine your modeling strategies. This book is based on the industry-leading Johns Hopkins Data Science Specialization, the most widely subscribed data science training program ever created. Finance Introduction to R for Quantitative Finance [Packt] Introduction to R for Quantitative Finance will show you how to solve real-world quantitative finance problems using the statistical computing language R. The book covers diverse topics ranging from time series analysis to fi nancial networks. Each chapter briefl y presents the theory behind specific concepts and deals with solving a diverse range of problems using R with the help of practical examples. This book will be your guide on how to use and master R in order to solve quantitative finance problems. This book covers the essentials of quantitative finance, taking you through a number of clear and practical examples in R that will not only help you to understand the theory, but how to effectively deal with your own real-life problems. Starting with time series analysis, you will also learn how to optimize portfolios and how asset pricing models work. The book then covers fixed income securities and derivatives such as credit risk management. Mastering R for Quantitative Finance [Packt] R is a powerful open source functional programming language that provides high level graphics and interfaces to other languages. Its strength lies in data analysis, graphics, visualization, and data manipulation. R is becoming a widely used modeling tool in science, engineering, and business. The book is organized as a step-by-step practical guide to using R. Starting with time series analysis, you will also learn how to forecast the volume for VWAP Trading. Among other topics, the book covers FX derivatives, interest rate derivatives, and optimal hedging. The last chapters provide an overview on liquidity risk management, risk measures, and more. The book pragmatically introduces both the quantitative finance concepts and their modeling in R, enabling you to build a tailor-made trading system on your own. By the end of the book, you will be well versed with various financial techniques using R and will be able to place good bets while making financial decisions. Machine Learning Machine Learning with R [Amazon] [O'Reilly] ""Machine Learning with R"" is a practical tutorial that uses hands-on examples to step through real-world application of machine learning. Without shying away from the technical details, we will explore Machine Learning with R using clear and practical examples. Well-suited to machine learning beginners or those with experience. Explore R to find the answer to all of your questions. R Development R Packages [Online] [Amazon] Packages are the fundamental units of reproducible R code. They include reusable R functions, the documentation that describes how to use them, and sample data. In this section you’ll learn how to turn your code into packages that others can easily download and use. Writing a package can seem overwhelming at first. So start with the basics and improve it over time. It doesn’t matter if your first version isn’t perfect as long as the next version is better. Reports Dynamic Documents with R and knitr, Second Edition [Amazon] Suitable for both beginners and advanced users, Dynamic Documents with R and knitr, Second Edition makes writing statistical reports easier by integrating computing directly with reporting. Reports range from homework, projects, exams, books, blogs, and web pages to virtually any documents related to statistical graphics, computing, and data analysis. The book covers basic applications for beginners while guiding power users in understanding the extensibility of the knitr package. Report Writing for Data Science in R [Leanpub] Free This book teaches the fundamental concepts and tools behind reporting modern data analyses in a reproducible manner. As data analyses become increasingly complex, the need for clear and reproducible report writing is greater than ever. The material for this book was developed as part of the industry-leading Johns Hopkins Data Science Specialization. Visualization R Data Visualization Cookbook [Amazon] This book is packed with practical recipes, designed to provide you with all the guidance needed to get to grips with data visualization with R. It starts off with the basics of R plots and an introduction to heat maps and customizing them, before gradually taking you through creating interactive maps using the googleVis package, generating choropleth maps and contouring maps, bubble plots, and pie charts. You will then learn how to animate 2D and 3D plots in R. By the end of the book, you will be equipped with the key techniques to create impressive data visualizations with professional efficiency and precision. R Graphics Cookbook [Amazon] This practical guide provides more than 150 recipes to help you generate high-quality graphs quickly, without having to comb through all the details of R’s graphing systems. Each recipe tackles a specific problem with a solution you can apply to your own project, and includes a discussion of how and why the recipe works. Most of the recipes use the ggplot2 package, a powerful and flexible way to make graphs in R. If you have a basic understanding of the R language, you’re ready to get started. Contributing Your contributions are always welcome and greately appreciated, just follow the rules! License This work is licensed under a Creative Commons Attribution 4.0 International License. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/RomanTsegelskyi/rbooks"	"List of R Books."	"true"
"Lists"	"DataScienceR"	"https://github.com/ujjwalkarn/DataScienceR"	"a list of R tutorials for Data Science, NLP and Machine Learning."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"339"	"49"	"136"	"GitHub - ujjwalkarn/DataScienceR: a curated list of R tutorials for Data Science, NLP and Machine Learning Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 49 Star 339 Fork 136 ujjwalkarn/DataScienceR Code Issues 0 Pull requests 0 Pulse Graphs a curated list of R tutorials for Data Science, NLP and Machine Learning 153 commits 1 branch 0 releases 1 contributor R 99.7% Rebol 0.3% R Rebol Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 4fa3570 Jun 19, 2016 ujjwalkarn committed on GitHub Update README.md Permalink Failed to load latest commit information. Classification & Clustering Rename ROC_AUC to ROC_AUC.R May 16, 2016 Extract FB Comments changes Nov 7, 2015 Intro to dplyr Update README.md May 16, 2016 R cheat sheets Delete link to cheatsheets.txt Sep 17, 2015 Sentiment Analysis Create awesome.R Nov 7, 2015 StatsLearning Create 2_logistic_regression.R Dec 15, 2015 Text Mining & PCA Update awesome.R Nov 11, 2015 Time Series Analysis Create additive and multiplicative.md May 15, 2016 Topic Modeling changes Nov 6, 2015 LICENSE Create LICENSE Apr 15, 2016 PCA.R Update PCA.R May 16, 2016 R-refcard.pdf Add files via upload May 16, 2016 README.md Update README.md Jun 19, 2016 common_functions.Rmd Update common_functions.Rmd May 24, 2015 readJSON.R Create readJSON.R May 15, 2016 useful_commands.R added useful commands Jul 19, 2015 README.md R Data Science Tutorials This repo contains a curated list of R tutorials and packages for Data Science, NLP and Machine Learning. This also serves as a reference guide for several common data analysis tasks. Curated list of Python tutorials for Data Science, NLP and Machine Learning. Comprehensive topic-wise list of Machine Learning and Deep Learning tutorials, codes, articles and other resources. The R Language Awesome-R Repository on GitHub R Reference Card: Cheatsheet R bloggers: blog aggregator R Resources on GitHub Awesome R resources Data Mining with R Rob J Hyndman's R Blog Simple R Tricks and Tools (Video) RStudio GitHub Repo Tidying Messy Data in R Video Baseball Research with R 600 websites about R Implementation of 17 classification algorithms in R Cohort Analysis and LifeCycle Grids mixed segmentation with R Using R and Tableau COMPREHENSIVE VIEW ON CRAN PACKAGES Using R for Statistical Tables and Plotting Distributions Extended Model Formulas in R: Multiple Parts and Multiple Responses R vs Python: head to head data analysis R for Data Science: Hadley Wickham's Book R Study Group at UPenn Program-Defined Functions in R Important Questions In R, why is bracket better than subset? Subsetting Data in R Quickly reading very large tables as dataframes in R Using R to show data How can I view the source code for a function? How to make a great R reproducible example? R Grouping functions: sapply vs. lapply vs. apply. vs. tapply vs. by vs. aggregate Tricks to manage the available memory in an R session Difference between Assignment operators '=' and '<-' in R What is the difference between require() and library()? How can I view the source code for a function? How can I change fonts for graphs in R? Common DataFrame Operations Create an empty data.frame Sort a dataframe by column(s) Merge/Join data frames (inner, outer, left, right) Drop data frame columns by name Remove rows with NAs in data.frame Quickly reading very large tables as dataframes in R Drop factor levels in a subsetted data frame Convert R list to data frame Convert data.frame columns from factors to characters Extracting specific columns from a data frame Learning R Free resources for learning R Online Courses Introduction to R for Data Science - Microsoft | edX Introduction to R on DataCamp tryR on Codeschool swirl: Learn R, in R Data Analysis and Visualization Using R MANY R PROGRAMMING TUTORIALS A Handbook of Statistical Analyses Using R, Find Other Chapters *Cookbook for R * Learning R in 7 simple steps Caret Package in R Ensembling Models with caret Model Training and Tuning Caret Model List relationship-between-data-splitting-and-traincontrol Specify model generation parameters Tutorial, Paper Ensembling models with R, Ensembling Regression Models in R R Cheatsheets Data Wrangling in R ggplot2 Cheatsheet Shiny Cheatsheet devtools Cheatsheet markdown Cheatsheet, reference Data Exploration Cheatsheet Reference Slides Awesome R Reference Card Association Rule Mining Time Series Analysis Data Exploration and Visualisation Regression and Classification Text Mining on Twitter Data Using R for Multivariate Analysis Little Book of R for Multivariate Analysis! THE FREQPARCOORD PACKAGE FOR MULTIVARIATE VISUALIZATION Use of freqparcoord for Regression Diagnostics Time Series Analysis Time Series Forecasting (Online Book) A Little Book of Time Series Analysis in R Quick R: Time Series and Forecasting Components of Time Series Data Unobserved Component Models using R The Holt-Winters Forecasting Method CRAN Task View: Time Series Analysis Bayesian Inference Packages for Bayesian Inference Bayesian Inference in R: Video R and Bayesian Statistics Machine Learning using R Machine Learning with R Using R for Multivariate Analysis (Online Book) CRAN Task View: Machine Learning & Statistical Learning Machine Learning Using R (Online Book) Linear Regression and Regularization Code Cheatsheet Multinomial and Ordinal Logistic Regression in R Neural Networks in R Visualizing Neural Nets in R nnet package Fitting a neural network in R; neuralnet package Neural Networks with R – A Simple Example NeuralNetTools 1.0.0 now on CRAN Introduction to Neural Networks in R Step by Step Neural Networks using R R for Deep Learning Neural Networks using package neuralnet, Paper Sentiment Analysis Different Approaches Sentiment analysis with machine learning in R First shot: Sentiment Analysis in R qdap package, code sentimentr package tm.plugin.sentiment package Packages other than sentiment Sentiment Analysis and Opinion Mining tm_term_score vaderSentiment Paper, vaderSentiment code Imputation in R Imputation in R Imputation with Random Forests How to Identify and Impute Multiple Missing Values using R MICE error in implementation of random forest in mice r package mice.impute.rf {mice} NLP and Text Mining in R What algorithm I need to find n-grams? NLP R Tutorial Introduction to the tm Package Text Mining in R Adding stopwords in R tm Text Mining Word Stemming in R Classification of Documents using Text Mining Package “tm” Text mining tools techniques and applications Text Mining: Overview,Applications and Issues Text Mining pdf Text Mining Another pdf Good PPT Scraping Twitter and Web Data Using R Visualisation in R ggplot2 tutorial SHINY EXAMPLES Comprehensive Guide to Data Visualization in R Interactive visualizations with R – a minireview Beginner's guide to R: Painless data visualization Data Visualization in R with ggvis Multiple Visualization Articles in R Statistics with R Using R for Biomedical Statistics (Online Book) Elementary Statistics with R A Hands-on Introduction to Statistics with R Quick R: Basic Statistics Quick R: Descriptive Statistics Explore Statistics with R | edX Useful R Packages TIDY DATA HADLEY PAPER Package ‘tidyr’: tidyr is an evolution of reshape2. It's design specifically for data tidying (not general reshaping or aggregating) and works well with dplyr data pipelines. BROOM plyr, stringr, reshape2 tutorial Video, CODE dplyr Code Files in this Repo dplyr tutorial 1, dplyr tutorial 2 Do your ""data janitor work"" like a boss with dplyr ggplot2 ggplot2 tutorial Good Tutorial! A quick introduction to ggplot() R Graphics cookbook ggplot2 Version of Figures in “Lattice: Multivariate Data Visualization with R” A speed test comparison of plyr, data.table, and dplyr data.table Introduction to the data.table package in R Fast summary statistics in R with data.table Other Packages Package 'e1071' Package ‘AppliedPredictiveModeling’ Package ‘stringr’: stringr is a set of simple wrappers that make R's string functions more consistent, simpler and easier to use. Package ‘stringdist’: Implements an approximate string matching version of R's native 'match' function. Can calculate various string distances based on edits (damerau-levenshtein, hamming, levenshtein, optimal sting alignment), qgrams or heuristic metrics Package ‘FSelector’: This package provides functions for selecting attributes from a given dataset Ryacas – an R interface to the yacas computer algebra system Scatterplot3d – an R package for Visualizing Multivariate Data tm.plugin.webmining intro Solving Differential Equations in R - ODE examples Structural Equation Modeling With the sem Package in R prettyScree - prettyGraphs Market Basket Analysis in R Market Basket Analysis with R Step by Step explanation of Market Basket Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ujjwalkarn/DataScienceR"	"a list of R tutorials for Data Science, NLP and Machine Learning."	"true"
"Lists"	"Open Data"	"https://github.com/ropensci/opendata"	"Using R to obtain, parse, manipulate, create, and share open data."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"43"	"14"	"10"	"GitHub - ropensci/opendata: CRAN OpenData Task View Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 14 Star 43 Fork 10 ropensci/opendata Code Issues 18 Pull requests 1 Pulse Graphs CRAN OpenData Task View 384 commits 5 branches 0 releases Fetching contributors R 55.6% Makefile 44.4% R Makefile Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags enhance/focus-taskview enhance/split-big-sections fix/line-end master readme-critic Nothing to show Nothing to show New pull request Latest commit 2191f46 Apr 28, 2016 leeper remove 2 dead links (closes #125) Permalink Failed to load latest commit information. .gitattributes Add .gitattributes hopefully fixing line endings issue (#97) Feb 3, 2016 .gitignore implement md contribution workflow (closes #17) May 2, 2015 CONTRIBUTING.md Back to escaping $ May 14, 2015 Makefile fixed README? (#123) Apr 15, 2016 OpenData.ctv remove 2 dead links (closes #125) Apr 28, 2016 README.md remove 2 dead links (closes #125) Apr 28, 2016 buildxml.R update Makefile Feb 5, 2016 opendata.md remove 2 dead links (closes #125) Apr 28, 2016 README.md CRAN Task View: Open Data Do not edit this README by hand. See CONTRIBUTING.md. Maintainer: Jaime Ashander, Scott Chamberlain, Thomas Leeper Contact: jashander at ucdavis.edu Version: 2016-04-28 This Task View contains information about using R to obtain, parse, manipulate, create, and share open data. Much open data is available on the web, and the WebTechnologies TaskView addresses how to obtain and parse web-based data. There is obvious overlap between the two TaskViews, so some packages are described on both. There is also a considerable amount of open data available as R packages on CRAN. We point readers to the crandatapkgs package to obtain information about currently available open data in R packages. Another key issue in a data-focused TaskView is the meaning of ""open"" data. This TaskView covers many types of data that come with varying degrees of usage restrictions from public domain (or CC-0) data that is usable for any purpose to ""freely available"" data that is available at no cost but may have licenses that are not strictly speaking ""open"". Users should investigate the terms of use and licensing of any data referenced here before using it for any particular application. Additionally, the view lists wrappers for paid APIs, as well as those that require an account but are not necessarily subscription only. These are marked (\$) and (K) respectively. If you have any comments or suggestions for additions, revisions, or improvements for this taskview, go to GitHub and submit an issue, or make some changes and submit a pull request. If you can't contribute on GitHub, send Jaime an email (jashander at ucdavis dot edu?subject=Open%20Data%20Task%20View) . If you have an issue with one of the packages discussed below, please contact the maintainer of that package. If you know of a web service, API, data source, or other online resource that is not yet supported by an R package, consider adding it to the package development to do list on GitHub. Data Sharing and Archiving Data sharing involves the dissemination of data in draft form or for a temporary period of time. rdrop2 (GitHub) is a Dropbox.com interface from R, providing access to a full suite of file operations, including dir/copy/move/delete operations, account information (including quotas) and the ability to upload and download files from any Dropbox account (K). boxr is a lightweight, high-level R interface for the box.com API (K). RAmazonS3 provides an interface to the Amazon Simple Storage Service (S3) (K). Data archiving involves the production and dissemination of open data that is persistently accessible, typically in public repositories. The tools below may be useful for both archiving data and retrieving extant data from public archives. ckanr: A generic R client to interact with the CKAN data portal software API (http://ckan.org/). Allows user to swap out the base URL to use any CKAN instance. Source on GitHub. dataone: Read/write access to data and metadata from the DataONE network of Member Node data repositories. dvn (GitHub) provides access to Dataverse Network repositories. UNF implements the Universal Numeric Fingerprint, a format-independent data hashing algorithm used by Dataverse, to verify and cite a dataset. factualR: Thin wrapper for the Factual.com server API. The Rflickr (not on CRAN) package provides an R interface to the Flickr photo management and sharing application Web service. (not on CRAN) (K) googlesheets (not on CRAN): Access private or public Google Sheets by title, key, or URL. Extract data or edit data. Create, delete, rename, copy, upload, or download spreadsheets and worksheets. Source on GitHub gsheet: Download Google Sheets using just the sharing link. Spreadsheets can be downloaded as a data frame, or as plain text to parse manually. Source on GitHub imguR (GitHub): A package to share plots using the image hosting service Imgur.com. knitr also has a function imgur_upload() to load images from literate programming documents. infochimps (archived on CRAN; GitHub) is an R wrapper for the infochimps.com API services, from Drew Conway. internetarchive (not on CRAN): API client for internet archive metadata. Source on GitHub. jSonarR: Enables users to access MongoDB by running queries and returning their results in R data frames. jSonarR uses data processing and conversion capabilities in the jSonar Analytics Platform and the JSON Studio Gateway, to convert JSON to a tabular format. OAIHarvester: Harvest metadata using the Open Archives Initiative Protocol for Metadata Harvesting (OAI-PMH). oai is a more recent package for OAI. Quandl: A package that interacts directly with the Quandl API to offer data in a number of formats usable in R, as well as the ability to upload and search. rdatamarket: Fetches data from DataMarket.com, either as timeseries in zoo form (dmseries) or as long-form data frames (dmlist). rerddap (not on CRAN): A generic R client to interact with any ERDDAP instance, which is a special case of OPeNDAP (https://en.wikipedia.org/wiki/OPeNDAP), or Open-source Project for a Network Data Access Protocol. Allows user to swap out the base URL to use any ERDDAP instance. Source on GitHub. rfigshare: Programmatic interface for Figshare.com. Source on GitHub. rscribd (not on CRAN): API client for publishing documents to Scribd. RSocrata: (temporarily archived on CRAN for email bounce) Provided with a Socrata dataset resource URL, or a Socrata SoDA web API query, returns an R data frame. Converts dates to POSIX format. Supports CSV and JSON. Manages throttling by Socrata. Web-based Open Data Agriculture | Astronomy | Business | Chemistry | Climate | Earth Science | Ecology/Evolution | Finance | Genes/Genomes | Geocoding | Google Analytics | Google Web Services | Government and Economics | Literature/Text-mining | Maps | Marketing | NCBI | News | Other | Public Health | Social Media | Social Science | Sports | Web Analytics | Wikipedia | Agriculture cimis: R package for retrieving data from CIMIS, the California Irrigation Management Information System. Available in CRAN archives only. FAOSTAT: The package hosts a list of functions to download, manipulate, construct and aggregate agricultural statistics provided by the FAOSTAT (Food and Agricultural Organization of the United Nations) database. Astronomy RStars: Star-API provides API access to the American Museum of Natural History's Digital Universe Data, including positions, luminosity, color, and other data on over 100,000 stars as well as constellations, exo-planets, clusters and others. Source on GitHub. Business forbesListR (not on CRAN) offers access to a number of business-related datasets provided by Forbes. Chemistry rpubchem: Interface to the PubChem Collection. webchem: Retrieve chemical information from a suite of web APIs for chemical information. Source on GitHub Earth Science dataRetrieval: Collection of functions to help retrieve USGS data from either web services or user-provided data files. on GitHub. hddtools: Hydrological data discovery tools - accesses data from NASA, Global Runoff Data Centre, Top-Down modelling Working Group. Source on GitHub marmap: Import, plot and analyze bathymetric and topographic data from NOAA. raincpc: The Climate Prediction Center's (CPC) daily rainfall data for the entire world, from 1979 to the present, at a resolution of 50 km (0.5 degrees lat-lon). This package provides functionality to download and process the raw data from CPC. rainfreq: Estimates of rainfall at desired frequency and desired duration are often required in the design of dams and other hydraulic structures, catastrophe risk modeling, environmental planning and management. One major source of such estimates for the USA is the NOAA National Weather Service's (NWS) division of Hydrometeorological Design Studies Center (HDSC). Raw data from NWS-HDSC is available at 1-km resolution and comes as a huge number of GIS files. rFDSN: Search for and download seismic time series in miniSEED format (a minimalist version of the Standard for the Exchange of Earthquake Data) from International Federation of Digital Seismograph Networks repositories. This package can also be used to gather information about seismic networks (stations, channels, locations, etc) and find historical earthquake data (origins, magnitudes, etc). rnrfa: Utility functions to retrieve data from the UK National River Flow Archive via an API (http://nrfa.ceh.ac.uk). There are functions to retrieve stations falling in a bounding box, to generate a map and extracting time series and general information. soilDB: A collection of functions for reading data from USDA-NCSS soil databases. sos4R: A client for Sensor Observation Services (SOS) as specified by the Open Geospatial Consortium (OGC). It allows users to retrieve metadata from SOS web services and to interactively create requests for near real-time observation data based on the available sensors, phenomena, observations, etc. using thematic, temporal and spatial filtering. waterData: An R Package for retrieval, analysis, and anomaly calculation of daily hydrologic time series data. WaterML can retrieve WaterOneFlow Hydroserver data. Climate BerkeleyEarth: Data input for Berkeley Earth Surface Temperature. Archived on CRAN. CHCN: A compilation of historical through contemporary climate measurements scraped from the Environment Canada Website Including tools for scraping data, creating metadata and formatting temperature files. clifro: Designed to minimise the hassle in downloading data from New Zealand's National Climate Database via CliFlo. Source on GitHub crn: Provides the core functions required to download and format data from the Climate Reference Network. Both daily and hourly data are downloaded from the ftp, a consolidated file of all stations is created, station metadata is extracted. In addition functions for selecting individual variables and creating R friendly datasets for them is provided. decctools (archived on CRAN) provides functions for retrieving energy statistics from the United Kingdom Department of Energy and Climate Change and related data sources. The current version focuses on total final energy consumption statistics at the local authority, MSOA, and LSOA geographies. Methods for calculating the generation mix of grid electricity and its associated carbon intensity are also provided. GhcnDaily (archived on CRAN) downloads and processes Global Historical Climatology Network (GHCN) daily data from the National Climatic Data Center (NCDC). GSODR provides acess to data from USA National Climatic Data Center (NCDC) Global Surface Summary of the Day (GSOD) weather stations, as well as functions for working with these data. Metadata: Collates metadata for climate surface stations. Archived on CRAN. meteoForecast: meteoForecast is a package to access to several Numerical Weather Prediction services both in raster format and as a time series for a location. Currenty it works with GFS, Meteogalicia, OpenMeteo, NAM, and RAP. [Source on GitHub](https://github.com/oscarperpinan/meteoForecast/ okmesonet: Retrieves Oklahoma (USA) Mesonet climatological data provided by the Oklahoma Climatological Survey. prism (GitHub) provides access to Oregon State Prism climate data. RFc (GitHub) can retrieve weather data from the FetchClimate Web Service. RNCEP: Obtain, organize, and visualize NCEP weather data. rnoaa: R interface to NOAA Climate data API. rNOMADS: An interface to the NOAA Operational Model Archive and Distribution System (NOMADS) that allows download of global and regional weather model data, and supports a variety of models ranging from global weather data to an altitude of 40 km, to high resolution regional weather models, to wave and sea ice models. It can also retrieve archived NOMADS models. Source: rnomads. rWBclimate: R interface for the World Bank climate data. Source on GitHub rwunderground access historical weather information and forecasts from wunderground.com. Historical weather and forecast data includes, but is not limited to, temperature, humidity, windchill, wind speed, dew point, heat index. Additionally, the weather underground weather API also includes information on sunrise/sunset, tidal conditions, satellite/webcam imagery, weather alerts, hurricane alerts and historical record high/low temperatures. stationaRy can retrieve hourly weather data from various global weather stations. weatherData: Functions that help in fetching weather data from websites. Given a location and a date range, these functions help fetch weather data (temperature, pressure etc.) for any weather related analysis. weatherr combines data from multiple APIs to obtain instant weather forecasts. Ecology and Evolutionary Biology BAAD: a Biomass And Allometry Database for woody plants (not on CRAN): an interface to access data from a data paper published in Ecology. Full source for the database is also on GitHub. biomart retrieves data from a number of public biological data repositories including http://www.biomart.org, NCBI refseq, Gene Ontology. dismo: Species distribution modeling, with wrappers to Google APIs for maps and geocoding. ecoengine (GitHub) provides access to more than 2 million georeferenced specimen records from ecoengine from the Berkeley Natural History Museums. ecoretriever (GitHub) provides an R interface to the EcoData Retriever via the EcoData Retriever's command line interface. The EcoData Retriever automates the tasks of finding, downloading, and cleaning ecological datasets, and then stores them in a local database (including SQLite, MySQL, etc.). neotoma (GitHub) offers programmatic R interface to the Neotoma Paleoecological Database. paleobioDB: Functions to wrap each endpoint of the PaleobioDB API, plus functions to visualize and process the fossil data. The API documentation for the Paleobiology Database can be found at http://paleobiodb.org/data1.1/. rbison (GitHub) is a wrapper to the USGS Bison API. Rcolombos: This package provides programmatic access to Colombos, a web based interface for exploring and analyzing comprehensive organism-specific cross-platform expression compendia of bacterial organisms. ridigbio (not on CRAN) is an interface for https://www.idigbio.org/. rebird (GitHub) is a programmatic interface to the eBird database. rdopa (not on CRAN): Access data from the Digital Observatory for Protected Areas (DOPA) REST API. Reol (GitHub) is an R interface to the Encyclopedia of Life (EOL) API. Includes functions for downloading and extracting information off the EOL pages. rfishbase (GitHub) is a programmatic interface to fishbase.org. rfisheries (GitHub) interacts with fisheries databases at openfisheries.org. rnpn (GitHub): Wrapper to the National Phenology Network database API. rredlist (GitHub) is an API client for the IUCN red list of threatened and engaged species. rvertnet (GitHub) is a wrapper to the VertNet collections database API. rYoutheria: A programmatic interface to web-services of Youtheria, an online database of mammalian trait data. Development version on GitHub here spocc (GitHub) offers a programmatic interface to many species occurrence data sources, including GBIF, USGS's BISON, iNaturalist, Berkeley Ecoinformatics Engine eBird, AntWeb, and more as they sources become easily available. rinat provides another interface to iNaturalist. spoccutils (Github) provides various utilities for working with data retrieved using spocc. TR8 (GitHub) contains a set of tools which take care of retrieving trait data for plant species from publicly available databases via web services (including: Biolflor, The Ecological Flora of the British Isles, LEDA traitbase, Ellenberg values for Italian Flora, Mycorrhizal intensity database). traits (Github) can retrieve species trait data from many online sources. rusda connects to a large number of USDA databases, especially for fungal-host combinations. Biodiversity and Taxonomy flora: Retrieve taxonomical information of botanical names from the Flora do Brasil website. rbhl: R interface to the Biodiversity Heritage Library (BHL) API. rgbif: Interface to the Global Biodiversity Information Facility API methods. Source on GitHub rnbn (GitHub) is an R interface to the UK National Biodiversity Network. rPlant: An R interface to the the many computational resources iPlant offers through their RESTful application programming interface. Currently, rPlant functions interact with the iPlant foundational API, the Taxonomic Name Resolution Service API, and the Phylotastic Taxosaurus API. Before using rPlant, users will have to register with the iPlant Collaborative taxize: Taxonomic information from around the web. A single unified interface to many web APIs for taxonomic data, including NCBI, ITIS, Tropicos and more. Source on GitHub The tpl package doesn't interact with the web directly, but queries locally stored data from theplantlist.org, and data will be updated when theplantlist updates, which is not very often. There is another package for interacting with this same data, called Taxonstand. Phylogenetics rotl: R client for the Open Tree of Life API. Source on GitHub rphylopic (not on CRAN): An R client for Phylopic.org, a databaes of free silhouettes of animals, embedded in a phylogenetic information framework. Source on GitHub treebase: An R package for discovery, access and manipulation of online phylogenies. Source on GitHub Finance dataonderivatives Post-GFC derivatives reforms have lifted the veil off over-the-counter (OTC) derivative markets. Swap Execution Facilities (SEFs) and Swap Data Repositories (SDRs) now publish data on swaps that are traded on or reported to those facilities (respectively). This package provides you the ability to get this data from supported sources. Datastream2R (not on CRAN): Another package for accessing the Datastream service. This package downloads data from the Thomson Reuters DataStream DWEserver, which provides XML access to the Datastream database of economic and financial information. fImport: Environment for teaching ""Financial Engineering and Computational Finance"" IBrokers: Provides native R access to Interactive Brokers Trader Workstation API. (\$) pdfetch: A package for downloading economic and financial time series from public sources. quantmod: Functions for financial quantitative modelling as well as data acquisition, plotting and other utilities. Rbitcoin: Ineract with Bitcoin. Both public and private API calls. Support HTTP over SSL. Debug messages of Rbitcoin, debug messages of RCurl, error handling. rbitcoinchartsapi: An R package for the BitCoinCharts.com API. From their website: ""Bitcoincharts provides financial and technical data related to the Bitcoin network and this data can be accessed via a JSON application programming interface (API)."" Rblpapi: R client for Bloomberg Finance L.P. Source on GitHub (\$) RCryptsy wraps the API for the Cryptsy crypto-currency trading platform. Source on GitHub. (\$) RDatastream (not on CRAN): An R interface to the Thomson Dataworks Enterprise SOAP API, with some convenience functions for retrieving Datastream data specifically. (\$) RJSDMX: Retrieve data and metadata from SDMX compliant data providers. Source on GitHub. TFX: Connects to TrueFX(tm) for free streaming real-time and historical tick-by-tick market data for dealable interbank foreign exchange rates with millisecond detail. Thinknum: Interacts with the Thinknum API. (\$) tseries: Includes the get.hist.quote for historical financial data. ustyc: US Treasury yield curve data retrieval. Development version on GitHub here. Genes and Genomes aggRmesh: R client for the National Center for Integrative Biomedical Informatics (NCIBI) data. cgdsr: R-Based API for accessing the MSKCC Cancer Genomics Data Server (CGDS). chromer: A programmatic interface to the Chromosome Counts Database. Source on GitHub The mygene.r package is an R client for accessing Mygene.info annotation and query services. GoogleGenomics reads data from the Google Genomics API and returns BioConductor-compatible S4 classes. primerTree: Visually Assessing the Specificity and Informativeness of Primer Pairs. rsnps: This package is a programmatic interface to various SNP datasets on the web: openSNP, NBCI's dbSNP database, and Broad Institute SNP Annotation and Proxy Search. This package started as a library to interact with openSNP alone, so most functions deal with openSNP. seq2R: Detect compositional changes in genomic sequences - with some interaction with GenBank. Archived on CRAN. seqinr: Exploratory data analysis and data visualization for biological sequence (DNA and protein) data. SoyNAM: Genomic and multi-environmental soybean data. Soybean Nested Association Mapping (SoyNAM) project dataset funded by the United Soybean Board (USB), pre-formatted for general analysis and genome-wide association analysis using the NAM package. NCBI EUtils web services: See the NCBI section Geocoding geocodeHERE: Wrapper for Nokia's HERE geocoding API. API docs: https://developer.here.com/geocoder. Source on GitHub ipapi: Geolocate IPv4/6 addresses and/or domain names using the ip-api.com API. Source on GitHub openadds is an R client for OpenAddresses a free and open global address collection. Source on GitHub Google Analytics ganalytics (not on CRAN): Interface to Google Analytics APIs. Source on GitHub GAR: Interface to Google Analytics APIs. Source on GitHub RGA: Provides functions for accessing and retrieving data from the Google Analytics APIs. Supports OAuth 2.0 authorization. Also, the RGA package provides a shiny app to explore data. There is another R package for the same service (RGoogleAnalytics); see above entry. RGoogleAnalytics: Provides functions for accessing and retrieving data from the Google Analytics API. Source on GitHub. There is another R package for the same service (RGA); see next entry. Google Web Services bigrquery: An interface to Google's bigquery from R. Source on GitHub (K) ganalytics (not on CRAN): Interface to Google Analytics APIs. Source on GitHub (K) GAR: Interface to Google Analytics APIs. Source on GitHub (K) GFusionTables (not on CRAN): An R interface to Google Fusion Tables. Google Fusion Tables is a data management system in the cloud. This package provides R functions to browse Fusion Tables catalog, retrieve data from Fusion Tables storage to R and to upload data from R to Fusion Tables (K) googlePublicData: (archived on CRAN for email bounce) An R library to build Google's public data explorer DSPL metadata files. googleVis: Interface between R and the Google chart tools. gooJSON (Archived on CRAN) is a Google JSON data interpreter for R which contains a suite of helper functions for obtaining data from the Google Maps API JSON objects. plotGoogleMaps: Plot SP or SPT(STDIF,STFDF) data as HTML map mashup over Google Maps. plotKML: Visualization of spatial and spatio-temporal objects in Google Earth. RAdwords: A package for loading Google Adwords data. Source on GitHub RGA: Provides functions for accessing and retrieving data from the Google Analytics APIs. Also, the RGA package provides a shiny app to explore data. There is another R package for the same service (RGoogleAnalytics); see above entry. RGoogleAnalytics: Provides functions for accessing and retrieving data from the Google Analytics API. Source on GitHub. There is another R package for the same service (RGA); see next entry. The RGoogleDocs (not on CRAN) package is an example of using the RCurl and XML packages to quickly develop an interface to the Google Documents API. RGoogleStorage (not on CRAN) provides programmatic access to the Google Storage API. This allows R users to access and store data on Google's storage. We can upload and download content, create, list and delete folders/buckets, and set access control permissions on objects and buckets. RGoogleTrends (not on CRAN) provides programmatic access to Google Trends data. This is information about the popularity of a particular query. translate: Bindings for the Google Translate API v2 translateR provides bindings for both Google and Microsoft translation APIs. Government There are a very large number of packages providing access to government data. Here is a list of these packages, arranged by country and/or other jurisdiction. Denmark: dkstat (not on CRAN): A package to access the StatBank API from Statistics Denmark. taxdk (not on CRAN) provides tax information for Danish companies. Europe: ameco (GitHub) connects to the European Commission's macro-economic database. ecb is a client for the European Central Bank's Statistical Data Warehouse API. eurostat (Github) provides an interface to the Eurostat database. Finland: pxweb (GitHub) is a generic interface for the PX-Web/PC-Axis API. The PX-Web/PC-Axis API is used by organizations such as Statistics Sweden and Statistics Finland to disseminate data. The R package can interact with all PX-Web/PC-Axis APIs to fetch information about the data hierarchy, extract metadata and extract and parse statistics to R data.frame format. sorvi (GitHub): Various tools for retrieving and working with Finnish open government data. Germany: BerlinData (GitHub): Easy access to http://daten.berlin.de. It allows you to search through the data catalogue and to download the data directly from within R. rdnb connects to resources of the German National Library. Japan: govStatJPN offers functions to get public survey data in Japan. estatapi links to the Japanese government's e-Stat official statistics API. Mexico: inegiR (GitHub) can download official statistics for Mexico. Note: package functions and documentation are in Spanish. Netherlands: cbsodataR connects with the Statistics Netherlands datasets. Source on GitHub. Poland: saos (not on CRAN) is an interface to the API for SAOS, a repository of judgments from Polish common courts (district, regional and appellate) and the Supreme Court of Poland. sejmRP (GitHub) provides data on deputies and voting in the Polish Diet. United States of America: U.S. Census Bureau: acs can download, manipulate, and present data from the US Census American Community Survey. censusr connects to both ACS and SF1 datasets. idbr (GitHub) provides an interface to the U.S. Census Bureau international data base API. blsAPI (GitHub) can get data from the U.S. Bureau of Labor Statistics API. Users provide parameters as specified in http://www.bls.gov/developers/api_signature.htm and the function returns a JSON string. Education: LearnDC provides access to LearnDC's data on Washington DC charter schools. Energy Department: EIAdata: U.S. Energy Information Administration (EIA) API client. See also eia (not on CRAN). Elections: elexr is an R interface to the Python elex library, which provides access to Associated Press election results. openelections (not on CRAN) connects to the openelections API. pollstR (GitHub): An R client for the Huffpost Pollster API. pvsR: An R package to interact with the Project Vote Smart API for scientific research. ropensecretsapi: An R package for the OpenSecrets.org web services API. Federal Reserve: FredR: R Interface to the Federal Reserve Economic Data API. Source on GitHub Justice Department: bjs2r: Get Bureau of Justice Statistics (BJS) data in R. federalregister: Client package for the U.S. Federal Register API. Development version on GitHub here. polidata (GitHub): Access to various political data APIs, including e.g. Google Civic Information API or Sunlight Congress API for US Congress data, and POPONG API for South Korea National Assembly data. RPublica (GitHub) is a ProPublica API Client. rsunlight (GitHub): R client for the Sunlight Labs APIs. There are functions for Sunlight Labs Congress, Transparency, Open States, Real Time Congress, Capitol Words, and Influence Explorer APIs. Data outputs are R lists. There are also a few convenience functions for visualizing data and writing data to .csv. rtimes (GitHub) links to the New York Times APIs, including the Congress, Article Search, Campaign Finance, and Geographic APIs. The focus is on those that deal with political data, but throwing in Article Search and Geographic for good measure. seeclickfixr (GitHub) is a client for retrieving citizens' service requests made to local governments through SeeClickFix. wethepeople: An R client for interacting with the White House's ""We The People"" petition API. United Kingdom: ukgasapi contains one function which allows users to access UK gas market information via National Grid's API. Other or international: enigma (GitHub): Enigma holds many public datasets from governments, companies, universities, and organizations. Enigma provides an API for data, metadata, and statistics on each of the datasets. enigma is an R client to interact with the Enigma API, including getting the data and metadata for datasets in Enigma, as well as collecting statistics on datasets. In addition, you can download a gzipped csv file of a dataset if you want the whole dataset. An API key from Enigma is required to use enigma. hdr (GitHub) is an interface to United Nations Development Programme Human Development Report API. imfr (not on CRAN) links to the International Monetary Fund's API. manifestoR is an R client to access data and documents of the manifesto project PolitwoopsR (not on CRAN): Extract deleted tweet and politician data from the Politwoops project (tracks politicians on Twitter and records their deleted tweets). OECD Search and extract data from the OECD (possibly via an old version of the API, which was in currently in beta when the package was written). See OECD data. World Bank: wbstats can extract data from the World Bank Data API and the World Bank Data Catalog API. WDI can search, extract and format data from the World Bank's World Development Indicators. Literature, Metadata, Text, and Altmetrics alm: R wrapper to the almetrics API platform developed by PLoS. aRxiv (GitHub): An R client for the arXiv API, a repository of electronic preprints for computer science, mathematics, physics, quantitative biology, quantitative finance, and statistics. boilerpipeR: Generic Extraction of main text content from HTML files; removal of ads, sidebars and headers using the boilerpipe Java library. JSTORr (Not on CRAN): Simple text mining of journal articles from JSTOR's Data for Research service lumendb can retrieve copyright takedown notices from Lumen Database (formerly, Chilling Effects). ngramr (Archived on CRAN) retrieves and plot word frequencies through time from the Google Ngram Viewer. pubmed.mineR: An R package for text mining of PubMed Abstracts. Supports fetching text and XML from PubMed. easyPubMed and rpubmed (not on CRAN) provide other tools. rAltmetric: Query and visualize metrics from Altmetric.com. rbhl: R interface to the Biodiversity Heritage Library (BHL) API. RefManageR: Import and Manage BibTeX and BibLaTeX references with RefManager. rentrez: Talk with NCBI entrez using R. RMendeley: Implementation of the Mendeley API in R. Archived on CRAN. It's been archived on CRAN temporarily until pacakge is updated for the new Mendeley API. rmetadata (not on CRAN): Get scholarly metadata from around the web. rorcid (not on CRAN): A programmatic interface the Orcid.org API. rplos: A programmatic interface to the Web Service methods provided by the Public Library of Science journals for search. rscopus (GitHub) is an interface to the Elsevier Scopus API. scholar provides functions to extract citation data from Google Scholar. Convenience functions are also provided for comparing multiple scholars and predicting future h-index values. The Sxslt (not on CRAN) package is an R interface to Dan Veillard's libxslt translator. It allows R programmers to use XSLT directly from within R, and also allows XSL code to make use of R functions. tm.plugin.webmining: Extensible text retrieval framework for news feeds in XML (RSS, ATOM) and JSON formats. Currently, the following feeds are implemented: Google Blog Search, Google Finance, Google News, NYTimes Article Search, Reuters News Feed, Yahoo Finance and Yahoo Inplay. biorxivr: interface with bioRxiv preprint server Maps FedData can download geospatial data from a number of U.S. and international data sources. ggmap: Allows for the easy visualization of spatial data and models on top of Google Maps, OpenStreetMaps, Stamen Maps, or CloudMade Maps using ggplot2. leafletR: Allows you to display your spatial data on interactive web-maps using the open-source JavaScript library Leaflet. osmar: This package provides infrastructure to access OpenStreetMap data from different sources to work with the data in common R manner and to convert data into available infrastructure provided by existing R packages (e.g., into sp and igraph objects). osrm: access OpenStreetMap The R2GoogleMaps (not on CRAN) package - which is different from RgoogleMaps - provides a mechanism to generate JavaScript code from R that displays data using Google Maps. rcanvec: Provides an interface to the National Topographic System (NTS), which is the way in which a number of freely available Canadian datasets are organized. CanVec and CanVec+ datasets, which include all data used to create Canadian topographic maps, are two such datasets that are useful in creating vector-based maps for locations across Canada. RgoogleMaps: This package serves two purposes: It provides a comfortable R interface to query the Google server for static maps, and use the map as a background image to overlay plots within R. The RKML (not on CRAN) is an implementation that provides users with high-level facilities to generate KML, the Keyhole Markup Language for display in, e.g., Google Earth. RKMLDevice (not on CRAN) allows to create R graphics in KML format in a manner that allows them to be displayed on Google Earth (or Google Maps). olctools Google Open Location Code rydn (not on CRAN): R package to interface with the Yahoo Developers network geolocation APIs. tigris (not on CRAN) can read US Census Bureau TIGRIS shapefiles. USAboundaries spatial objects with the boundaries of states or counties in the United States of America from 1629 to 2000 (from the Atlas of Historical County Boundaries). NCBI hoardeR: Information retrieval from NCBI databases, with main focus on Blast. NCBI2R: Annotates lists of SNPs and/or genes, with current information from NCBI. The CRAN version is archived. rentrez (GitHub): Talk with NCBI Eutils API using R. This is probably the best package to interact with NCBI EUtils. You can get data across all the databases in NCBI EUtils. reutils (GitHub): Interface with NCBI databases such as PubMed, Genbank, or GEO via the Entrez Programming Utilities (EUtils). RISmed: Download content from NCBI databases. Intended for analyses of NCBI database content, not reference management. See rpubmed for more literature oriented stuff from NCBI. News GuardianR: Provides an interface to the Open Platform's Content API of the Guardian Media Group. It retrieves content from news outlets The Observer, The Guardian, and guardian.co.uk from 1999 to current day. rdian (GitHub) is another Guardian API client. rtimes (not on CRAN): R client for the New York Times APIs, including the Congress, Article Search, Campaign Finance, and Geographic APIs. ZEIT: diezeit waps the ZEIT online content API (K). Other datamart: Provides an S4 infrastructure for unified handling of internal datasets and web based data sources. Examples include dbpedia, eurostat and sourceforge. genderizeR: Uses the genderize.io API to predict gender from first names extracted from a text vector. Source on GitHub mstranslator: An R wrapper for the Microsoft Translator API. Source on GitHub MBTAr: Access Data from the Massachusetts Bay Transit Authority (MBTA) Web API rechonest (Github) is an interface to access Echo Nest API. This package can be used to access artists, songs and music genres related data. (K) redcapAPI: Access data stored in REDCap databases using an API. REDCap (Research Electronic Data CAPture) is a web application for building and managing online surveys and databases developed at Vanderbilt University. Source on GitHub. RForcecom: RForcecom provides a connection to Force.com and Salesforce.com from R. rwars (not on CRAN): A connector to the SWAPI service, a database of Star Wars metadata. slackr: R client for Slack.com messaging platform. Source on GitHub sos4R: R client for the OGC Sensor Observation Service. stackr (not on CRAN): An unofficial wrapper for the read-only features of the Stack Exchange API. TMDb can retrieve data from The Movie Database. zendeskR: This package provides an R wrapper for the Zendesk API. (\$) Public Health cdcfluview: (not on CRAN) R client for CDC FluView data (WHO and ILINet). nhanesA Utility to retrieve data from the National Health and Nutrition Examination Survey (NHANES). openfda (not on CRAN) is an R client for openFDA. rClinicalCodes: R tools for integrating with the http://www.clinicalcodes.org web repository rclinicaltrials (GitHub): ClinicalTrials.gov is a registry and results database of publicly and privately supported clinical studies of human participants conducted around the world. This is an R client for that data. UScancer constructs U.S. cancer data at the county level from SEER, IARC, and the U.S. Census Bureau. vaers (not on CRAN) provides U.S. vaccine adverse event data from the VAERS vaccine surveillance program. vaersvax provides a subset a subset of these data for three months of 2016. vaersNDvax provides non-domestic data for the same period. WHO: WHO (GitHub) provides an interface to the World Health Organization API. rgho (GitHub) connects to the WHO Global Health Observatory data. Social media Facebook: Rfacebook provides an interface to the Facebook API. (K) Google+: plusser has been designed to to facilitate the retrieval of Google+ profiles, pages and posts. It also provides search facilities. Currently a Google+ API key is required for accessing Google+ data. tuber provides bindings for YouTube API. Only on Github for now. (K) RedditExtractoR can retrieve data from the Reddit API. Rlinkedin: is an R client for the LinkedIn API. tumblr: tumblR (GitHub): R client for the Tumblr API (https://www.tumblr.com/docs/en/api/v2). Tumblr is a microblogging platform and social networking website https://www.tumblr.com. (K) Twitter: RTwitterAPI (not on CRAN) and twitteR provide an interface to the Twitter web API. streamR: This package provides a series of functions that allow R users to access Twitter's filter, sample, and user streams, and to parse the output into data frames. OAuth authentication is supported. (K) Additionally, RKlout is an interface to Klout API v2. It fetches Klout Score for a Twitter Username/handle in real time. Klout is a silly ranking of Twitter influence. SocialMediaLab provides a convenient wrapper around many other social media clients and enables the construction of network structures from those data. SocialMediaMineR is an analytic tool that returns information about the popularity of a URL on social media sites. Social science asdfree: analyze survey data for free (not a package) provides lots of code examples for analyzing survey data in R. Also on github. brewdata Retrieves and parses graduate admissions survey data from the Grad Cafe website. gesis provides access to the Leibniz-Institute for the Social Sciences Data Catalogue/Datenbestandkatalog (DBK). maddison (GitHub) provides GDP per capita data for all years AD 1 to 2010 from the Maddison Project. ONETr searches and retrieves occupational data from O*NET Online. Development version on GitHub here. psidR contains functions to download and format longitudinal datasets from the Panel Study of Income Dynamics (PSID). wordbankr (GitHub) connects to Wordbank, a database of childrens' developmental vocabulary. The Zillow (not on CRAN) package provides an R interface to the Zillow Web Service API. It allows one to get the Zillow estimate for the price of a particular property specified by street address and ZIP code (or city and state), to find information (e.g. size of property and lot, number of bedrooms and bathrooms, year built.) about a given property, and to get comparable properties. Sports abettor (not on CRAN): Online betting exchange, Betfair, API wrapper in R. (K) ballr (not on CRAN) is a client for Basketball-Reference.com. bbscrapeR (not on CRAN): Tools for Collecting Data from nba.com and wnba.com. cricketr provides tools for working with the ESPN Cricinfo Statsguru. Source on GitHub. fbRanks: Association Football (Soccer) Ranking via Poisson Regression - uses time dependent Poisson regression and a record of goals scored in matches to rank teams via estimated attack and defense strengths. nflscrapR (not on CRAN) scrapes NFL data since 2009. nhlscrapr: Compiling the NHL Real Time Scoring System Database for easy use in R. pitchRx: Tools for Collecting and Visualizing Major League Baseball PITCHfx Data fitbitScraper (GitHub) can retrieve Fitbit data, based on email/password authentication. fantasysocceR (not on CRAN) connects to fantasy soccer data. pinnacle.API A Wrapper for the Pinnacle Sports API retrosheet (Github) retrieves single-season baseball statistics from http://www.retrosheet.org. yorkr provides access to cricket data from Cricsheet. Web Analytics GTrendsR (not on CRAN): R functions to perform and display Google Trends queries. Another Github package (rGtrends) is now deprecated, but supported a previous version of Google Trends and may still be useful for developers. rgauges (Archived on CRAN) This package provides functions to interact with the Gaug.es API. Gaug.es is a web analytics service, like Google analytics. You have to have a Gaug.es account to use this package. (\$) (K) RGA: Provides functions for accessing and retrieving data from the Google Analytics APIs. Supports OAuth 2.0 authorization. Also, the RGA package provides a shiny app to explore data. There is another R package for the same service (RGoogleAnalytics); see above entry. (K) RGoogleAnalytics (GitHub) provides functions for accessing and retrieving data from the Google Analytics API. There is another R package for the same service (RGA); see previous entry. (K) RGoogleTrends (not on CRAN) provides programmatic access to Google Trends data. This is information about the popularity of a particular query. RSiteCatalyst: Functions for accessing the Adobe Analytics (Omniture SiteCatalyst) Reporting API. Wikipedia/Wikimedia wikipediatrend (removed from CRAN): Provides access to Wikipedia page access statistics. WikipediR: WikipediR is a wrapper for the MediaWiki API, aimed particularly at the Wikimedia 'production' wikis, such as Wikipedia. Source on GitHub ores connects to ORES, an automated tool for detecting whether Wikimedia page edits are constructive. pageviews retrieves page view data from Wikimedia-powered sites, including Wikipedia. rwikidata (not on CRAN): Request data from (and some day probably edit data in) Wikidata.org, the free knowledgebase. WikidataR: An R API wrapper for the Wikidata store of semantic data. Source on GitHub. CRAN packages: acs alm ameco aRxiv BerlinData bigrquery biorxivr blsAPI boilerpipeR brewdata cbsodataR censusr cgdsr CHCN chromer clifro crandatapkgs cricketr crn datamart dataonderivatives dataRetrieval diezeit dismo dvn easyPubMed ecb ecoengine ecoretriever EIAdata elexr enigma estatapi eurostat factualR FAOSTAT fbRanks FedData federalregister fImport fitbitScraper flora GAR genderizeR geocodeHERE gesis ggmap googleVis govStatJPN gsheet GSODR GuardianR hddtools hdr hoardeR IBrokers idbr imguR inegiR jSonarR leafletR lumendb maddison manifestoR marmap MBTAr meteoForecast neotoma nhanesA nhlscrapr oai OAIHarvester OECD okmesonet olctools ONETr ores osmar osrm pageviews paleobioDB pdfetch pinnacle.API pitchRx plotGoogleMaps plotKML plusser polidata pollstR primerTree prism psidR pubmed.mineR pvsR pxweb Quandl quantmod RAdwords raincpc rainfreq rAltmetric rbhl rbison Rbitcoin rbitcoinchartsapi rcanvec rClinicalCodes rclinicaltrials Rcolombos RCryptsy rdatamarket rdian rdnb rebird rechonest redcapAPI RedditExtractoR RefManageR rentrez Reol retrosheet reutils Rfacebook RFc rFDSN rfigshare rfishbase rfisheries RForcecom RGA rgbif rgho RGoogleAnalytics RgoogleMaps RISmed RJSDMX RKlout Rlinkedin rnbn RNCEP rnoaa rNOMADS rnpn rnrfa ropensecretsapi rPlant rplos rpubchem RPublica rredlist rscopus RSiteCatalyst rsnps RStars rsunlight rtimes rusda rvertnet rWBclimate rwunderground rYoutheria scholar seeclickfixr sejmRP seqinr slackr SocialMediaLab SocialMediaMineR soilDB sorvi sos4R SoyNAM spocc spoccutils stationaRy streamR taxize TFX Thinknum tm.plugin.webmining TMDb TR8 traits translate translateR treebase tseries tumblR twitteR ukgasapi UNF USAboundaries UScancer ustyc vaersNDvax vaersvax waterData WaterML wbstats WDI weatherData weatherr webchem WHO WikidataR WikipediR wordbankr yorkr zendeskR Related links: WebTechnologies TaskView Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/ropensci/opendata"	"Using R to obtain, parse, manipulate, create, and share open data."	"true"
"Lists"	"R Project Conferences"	"https://www.r-project.org/conferences.html"	"Information about useR! Conferences and DSC Conferences."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"R: Conferences [Home] Download CRAN R Project About R Logo Contributors What’s New? Mailing Lists Reporting Bugs Development Site Conferences Search R Foundation Foundation Board Members Donors Donate Documentation Manuals FAQs The R Journal Books Certification Other Links Bioconductor Related Projects Conferences The R project actively supports two conference series, organized regularly by members from the R community: useR!, providing a forum to the R user community. DSC, a platform for developers of statistical software. A rough outline of the format for the respective conferences is given below; both conference formats were developed by the Austrian Association for Statistical Computing (AASC) in cooperation with the R Foundation for Statistical Computing. R-related conferences are coordinated by the “R Foundation Conference Committee” (RFCC) currently consisting of Torsten Hothorn (Universität Zürich) and Achim Zeileis (Universität Innsbruck) plus ex officio secretary and treasurer of the R Foundation. The RFCC can be contacted by email at R-conferences at r-project dot org. The R Foundation has a policy requiring codes of conduct at R conferences. useR! — International R User Conference   This is the main meeting of the R user and developer community, its program consisting of both invited and user-contributed presentations: The invited keynote lectures cover a broad spectrum of topics ranging from technical and R-related computing issues to general statistical topics of current interest. The user-contributed presentations are submitted as abstracts prior to the conference and may be related to (virtually) any R-related topic. The presentations are typically organized in sessions of either broad or special interest, which also comprise a “free” discussion format. Such a discussion format not only provides a forum for software demonstrations and detailed discussions but also supports the self-organization of the respective communities. Usually, no proceedings are published for useR! conferences. useR! 2016, Stanford, CA, USA. useR! 2015, Aalborg, Denmark. useR! 2014, Los Angeles, CA, USA. useR! 2013, Albacete, Spain (local copy) useR! 2012, Nashville, TN, USA (local copy) useR! 2011, Coventry, UK (local copy) useR! 2010, Gaithersburg, MD, USA. useR! 2009, Rennes, France (local copy). useR! 2008, Dortmund, Germany (local copy). useR! 2007, Ames, IA, USA (local copy). useR! 2006, Vienna, Austria (local copy). useR! 2004, Vienna, Austria (local copy). DSC — Directions in Statistical Computing   DSC is a conference for the developers of statistical software and researchers in statistical computing which is somewhat focused on but not exclusively devoted to R. It aims at providing a platform for exchanging ideas about developments in statistical computing (rather than `only’ the usage of statistical software for applications). As the associated papers are often technical and difficult to publish even in computational statistical journals, the DSC publishes post-conference proceedings of the papers that were accepted for publication. DSC 2015, Stanford, USA. DSC 2014, Bressanone-Brixen, Italy. DSC 2009, Copenhagen, Denmark (local copy). DSC 2007, Auckland, New Zealand (local copy, proceedings have been published as issue 24/2 of Computational Statistics). DSC 2005, Seattle, USA (local copy). DSC 2003, Vienna, Austria (local copy, proceedings). DSC 2001, Vienna, Austria (local copy, proceedings). DSC 1999, Vienna, Austria (local copy). © The R Foundation."	"null"	"null"	"Information about useR! Conferences and DSC Conferences."	"true"
"Lists"	"RStartHere"	"https://github.com/rstudio/RStartHere"	"A guide to some of the most useful R packages, organized by workflow."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"128"	"22"	"44"	"GitHub - rstudio/RStartHere: A guide to some of the most useful R Packages that we know about Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 22 Star 128 Fork 44 rstudio/RStartHere Code Issues 2 Pull requests 1 Pulse Graphs A guide to some of the most useful R Packages that we know about 41 commits 1 branch 0 releases 7 contributors R 100.0% R Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit adfac47 May 9, 2016 garrettgman Moves pander to readme list Permalink Failed to load latest commit information. top_downloads_2016 Adds most downloaded packages in 2016 (Jan , 2016 - April 29, 2016). Apr 29, 2016 .gitignore Updates .gitignore. Apr 25, 2016 README.Rmd Moves pander to readme list May 9, 2016 README.md Moves pander to readme list May 9, 2016 data-science.png Adds initial list of packages to readme. Apr 25, 2016 runners-up.Rmd Moves pander to readme list May 9, 2016 runners-up.md Moves pander to readme list May 9, 2016 README.md RStartHere A guide to some of the most useful R Packages that we know about, organized by their role in data science. Click here to suggest packages. Data Science Workflow Each data science project is different, but each follows the same general steps. You: Import your data into R Tidy it Understand your data by iteratively visualizing tranforming and modeling your data Infer how your understanding applies to other data sets (including future data, i.e. predictions) Communicate your results to an audience, or Automate your analysis for easy reuse Program the whole way through, since you do each of these things on a computer Below we list the most useful R packages that we know of for each step. Import These packages help you import data into R and save data. feather - a fast, lightweight file format used by both R and Python readr - reads tabular data readxl - reads Microsoft Excel spreadsheets openxlsx - reads Microsoft Excel spreadsheets googlesheets - reads Google spreadsheets haven - reads SAS, SPSS, and Stata files httr - reads data from web APIs rvest - scrapes data from web pages xml2 - reads HTML and XML data webreadr - reads common web log formats DBI - a universal interface to database management systems (DBMS) RMySQL - MySQL driver for DBI RPostgres - Postgres driver for DBI RSQLite - SQlite driver for DBI bigrquery - Google BigQuery driver for DBI PivotalR - reads data from and interfaces with Postgres, Greenplum, and HAWQ dplyr - contains an interface to common databases data.table - fread() for fast table reading git2r - tools to access git repositories Tidy These packages help you wrangle your data into a form that is easy to analyze in R. tidyr - tools for tidying layout of tabular data dplyr - tools for joining multiple tables into a tidy data set purrr - tools for applying R functions to data structures, very useful when tidying broom - tools for tidying statistical models into data frames zoo - data structures for time series data PivotalR - R wrappers for in-database SQL operations (i.e. join, group by) Visualize These packages help you visualize your data. ggplot2 with extensions - a versatile system for making plots ggthemes - plot style themes ggmap - maps with Google Maps, Open Street Maps, etc. ggiraph - interactive ggplots ggstance - horizontal versions of common plots GGally - scatterplot matrices ggalt - additional coordinate systems, geoms, etc. ggforce - additional geoms, etc. ggrepel - prevent plot labels from overlapping ggraph - graphs, networks, trees and more ggpmisc - photo-biology related extensions geomnet - network visualization ggExtra - marginal histograms for a plot gganimate - animations plotROC - interactive ROC plots ggspectra - tools for plotting light spectra ggnetwork - geoms to plot networks ggtech - style themes for plots ggradar - radar charts ggTimeSeries - time series visualizations ggtree - tree visualizations ggseas - seasonal adjustment tools lattice - Trellis graphics rgl - interactive 3D plots ggvis - versatile system for interactive graphs htmlwidgets - framework for creating JavaScript widgets with R leaflet - Interactive maps dygraphs - Interactive time series plots plotly - Interactive plots rbokeh - Interactive Bokeh plots Highcharter - Interactive Highcharts plots visNetwork - Interactive network graphs networkD3 - Interative d3 network graphs d3heatmap - Interactive d3 heatmaps DT - Interactive tables threejs - Interactive 3d plots and globes rglwidget - Interactive 3d plot DiagrammeR - Interactive diagrams MetricsGraphics - Interactive MetricsGraphics plots rCharts - many interactive JavaScript visualizations coefplot - visualizes model statistics quantmod - candlestick financial charts colorspace - HSL based color palettes viridis - Matplotlib viridis color pallete for R munsell - Munsell color palettes for R. RColorBrewer - color palettes for plots. No manual or website. dichromat - color-blind friendly palettes. No manual or website. igraph - Network Analysis and Visualization latticeExtra - Extensions for lattice graphics sp - tools for spatial data Transform These packages help you transform your data into new types of data. dplyr - a grammar of data transformation magrittr - a concise syntax for calling sequences of functions tibble - efficient display structure for tabular data stringr - tools for working with strings and regular expressions lubridate - tools for working with dates and times xts - tools for time series based data data.table - fast data manipulation vtreat - tools for pre-processing variables for predictive modeling stringi - fast string processing facilities. Matrix - LAPACK methods for dense and sparse matrix operations Model/Infer These packages help you build models and make inferences. Often the same packages will focus on both topics. car - functions from An R Companion to Applied Regression Hmisc - miscellaneous functions for data analysis multcomp - Simultaneous Inference in General Parametric Models pbkrtest - parametric bootstrap test for linear mixed effects models mvtnorm - Multivariate Normal and t Distributions MatrixModels - Modelling with Sparse And Dense Matrices SparseM - linear algebra for sparse matrices lme4 - Linear Mixed-Effects Models using Eigen C++ library broom - tools for tidying statistical models into data frames caret - tools for Classification And REgression Training glmnet - generalized linear models via penalized maximum likelihood mosaic - Tools for teaching mathematics, statistics, computation and modeling gbm - gradient boosted regression models xgboost - Extreme Gradient Boosting randomForest - Random Forests for Classification and Regression ranger - a fast implementation of Random Forests h2o - parallel distributed machine learning algorithms ROCR - plots to visualize classifier performance pROC - Tools for visualizing, smoothing and comparing ROC curves PivotalR - R wrappers for MADlib's parallel distributed machine learning algorithms Communicate These packages help you communicate the results of data science to your audiences. rmarkdown - easy-to-use format for reproducible reports and dynamic documents in R knitr - embed R code within pdf and html reports flexdashboard - easy-to-create dashboards based on rmarkdown bookdown - books and long documents built on R Markdown rticles - ready to use R Markdown templates tufte - Tufte handout R Markdown template DT - Interactive data tables pixiedust - Customized tables xtable - Customized tables highr - Syntax Highlighting for R Source Code formatR - tidy_source() to format R source code yaml - Methods to convert R data to YAML and back pander - renders R objects into Pandoc markdown. Automate These packages help you create data science products that automate your analyses. shiny - tools to make interactive web apps with R shinydashboard - interactive dashboards with R shinythemes - style themes for Shiny apps shinyAce - Ace text editor for Shiny apps shinyjs - adds common JavaScript operations to Shiny apps miniUI - UI elements for Shiny gadgets, interactive apps integrated into the R commandline workflow shinyapps.io - hosting service for Shiny apps Shiny Server Open Source - OS server to host Shiny apps Shiny Server Pro - server to host Shiny apps enhanced with features for business enterprises rsconnect - deploys Shiny apps to shinyapps.io plumber - converts R code to a web API rmarkdown - easy-to-use format for reproducible reports and dynamic documents in R rstudioapi - safely access RStudio IDE's API Program These packages make it easier to program with the R language. RStudio Desktop IDE - IDE application for R RStudio Server Open Source - server based IDE for R RStudio Server Professional - server based IDE for R enhanced with features for business enterprises devtools - tools that make it easier to develop R packages packrat - creates project specific libraries, which handle package versioning and enhance reproducibility drat - tools to create and use alternative R package repositories testthat - easy-to-use system for unit testing packages roxygen2 - easy-to-use method for documenting packages purrr - tools for applying R functions to data structures profvis - visualizes code profiling data from R Rcpp - C++ API for R R6 - fast, simple object class that uses reference semantics htmltools - Tools for HTML generation and output nloptr - interface to NLopt non-linear optimization library. minqa - optimization algorithms. rngtools - Utilities for working with Random Number Generators NMF - Nonnegative Matrix Factorization crayon - Adds color to terminal output RJSONIO - convert R objects to JSON notation jsonlite - a fast JSON parser and generator for R RcppArmadillo - interface to 'Armadillo' Templated Linear Algebra Library Data These packages contain data sets to use as training data or toy examples. babynames - Names given to US babies 1880-2014 neiss - sample of all accidents reported to US emergency rooms 2009-2014 yrbss - Youth Risk Behaviour Surveillance System data from 1991 to 2013 nycflights13 - all out-bound flights from NYC in 2013 hflights - flights departing Houston in 2011 USAboundaries - Historical and Contemporary Boundaries of the United States of America rworldmap - country border data usdanutrients - USDA nutrient database fueleconomy - EPA fuel economy data nasaweather - geographic and atmospheric measures on a very coarse 24 by 24 grid covering Central America mexico-mortality - deaths in Mexico data-movies and ggplotmovies - data from the Internet Movie Database (IMDB) pop-flows - Population flows around the USA in 2008 data-housing-crisis - Clean data related to the 2008 US housing crisis gun-sales - Statistical analysis of monthly background checks of gun purchases from NY times stationaRy - hourly meteorological data from one of thousands of global stations gapminder - Excerpt from the Gapminder data janeaustenr - Jane Austen's Complete Novels Criteria What makes an R Package useful? A useful R package should perform a useful task, and it should do it well. Here are some criteria that we used to make the list. The code in the package runs fast, with few errors. The code in the package has an intuitive syntax that is easy to remember. The package plays well with other packages; you do not need to munge your data into new forms to use the package. The package is widely used and recommended by its users. The package has a development website, or series of vignettes, that make the package easy to learn. The package is developed in the open (e.g. on Github or RForge). The package uses tests to ensure that it will be stable and bug free well into the future. The package is stable and available from CRAN, or we are personally involved with the package and committed to its development. For other useful choices, please check out our list of popular packages that did not quite meet these criteria. You can learn more about packages in R with the CRAN task views. Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/rstudio/RStartHere"	"A guide to some of the most useful R packages, organized by workflow."	"true"
"Lists"	"RStudio Addins"	"https://github.com/daattali/addinslist"	"List of RStudio addins."	"null"	"null"	"null"	"null"	"null"	"null"	"null"	"172"	"39"	"42"	"GitHub - daattali/addinslist: Discover and install useful RStudio addins Skip to content Personal Open source Business Explore Sign up Sign in Pricing Blog Support Search GitHub This repository Watch 39 Star 172 Fork 42 daattali/addinslist Code Issues 1 Pull requests 0 Pulse Graphs Discover and install useful RStudio addins 107 commits 1 branch 0 releases 22 contributors R 82.9% JavaScript 10.4% CSS 6.7% R JavaScript CSS Clone or download Use SSH Clone with HTTPS Use Git or checkout with SVN using the web URL. Use HTTPS Clone with SSH Use an SSH key and passphrase from account. Open in Desktop Download ZIP Find file Branch: master Switch branches/tags Branches Tags master Nothing to show Nothing to show New pull request Latest commit 12475cc Jun 30, 2016 daattali committed on GitHub Merge pull request #36 from vnijs/master … add radiant.data and radiant to the list Permalink Failed to load latest commit information. R small fixes for CRAN May 4, 2016 inst add addin images May 5, 2016 man small fixes for CRAN May 4, 2016 .Rbuildignore initial ""package"" commit Apr 7, 2016 .gitignore initial ""package"" commit Apr 7, 2016 .travis.yml add travis config file May 2, 2016 DESCRIPTION remove knitr since there are no vignettes May 3, 2016 LICENSE initial ""package"" commit Apr 7, 2016 NAMESPACE restructure code to be more logical and maintainable May 3, 2016 README.md add radiant.data and radiant to the list Jun 30, 2016 README.md Discover and install useful RStudio addins RStudio addins were released in early 2016 to provide anyone with the ability to add ""extensions"" to RStudio. This feature has quickly become popular, but discoverability was a problem: there's just no easy way to know what addins exist. This package solves that problem in two ways. First, it provides a continuously updated list of RStudio addins that you can browse through (below). Also, if you install this package (install.packages('addinslist')), your RStudio will get populated with a new addin called ""Browse RStudio addins"". This addin allows you to interactively browse through the list of addins, see which ones you already have installed, and let you install/uninstall the corresponding package of each addin. The following image shows how to access this ""addin of addins"" in RStudio. List of addins If you made a useful RStudio addin, feel free to make a pull request on GitHub to add it to the list. Name Description Package On CRAN? Author More links Notes Browse RStudio addins Browse and install RStudio addins addinslist ✅ Dean Attali Screenshot Colour picker Lets you easily select colours shinyjs ✅ Dean Attali Screenshot, Demo video ggplot2 Marginal Plots Add marginal plots to ggplot2 ggExtra ✅ Dean Attali Screenshot ggplot Theme Assist Customize your ggplot theme ggThemeAssist ✅ Calli Gross Demo GIF Schedule R scripts on Windows Use Windows task scheduler to schedule your R scripts (Windows) taskscheduleR ❌ jwijffels Screenshot Schedule R scripts on Linux/Unix Use cron to schedule your R scripts (Linux/Unix) cronR ❌ jwijffels Screenshot Assign default values Set function arguments in selection to their default values jadd ❌ Jenny Bryan Demo GIF Wrap Rmd Wrap selected R Markdown text but don't insert lines breaks into inline R code WrapRmd ❌ TJ Mahr Tidy Data Interactively build tidyr function call (gather) tidyshiny ❌ Mango Solutions Lattice Plotting Interactively build plots using the lattice system addinplots ❌ Homer White Copy Frame to Clipboard Copy a data.frame to the clipboard copydat ❌ Bay Area Air Quality Management District Doesn't work on Windows Render Rmd in Console Render an R Markdown document in the global environment RStudioConsoleRender ❌ Jeff Johnston Blog post Document This Auto-generate Roxygen skeletons for functions and data docthis ❌ Matthew Lincoln Hist Add-In Interactively create histograms with ggplot2 and obtain the R Code limoaddin ❌ Stanislaus Stadlmann rpivotGadget Add-in wrapper around the rpivotTable HTML widget rpivotGadget ❌ Dean Kilfoyle Addin Manager Install and remove addins addinmanager ❌ Colin Gillespie Blog post Levels recoding Interactively generate code to edit factor levels questionr ✅ Julien Barnier Demo video Levels ordering Interactively generate code to reorder factor levels questionr ✅ Julien Barnier Demo video Variable cutting Interactively generate cut() code questionr ✅ Julien Barnier Demo video ARIMA Picker Interactively pick ARIMA parameters arimaUI ❌ Yves crutain Blog post Input LaTeX Math Input math expressions via the MathQuill library bookdown ❌ RStudio Preview R-markdown Book Run bookdown's serve_book() to live preview a book bookdown ❌ RStudio Google API Auth Authenticate with Google APIs googleAuthR ✅ Mark Edmondson Screenshot Word count add-in Count non-code words in Rmd documents wordcountaddin ❌ Ben Marwick Screenshot Copy value Copy data to clipboard (arrays, data frames, matrices, tables, vectors) snippetsaddin ❌ Juraj Sofranko Windows only Convert slash Reverse slashes (eg in file paths) snippetsaddin ❌ Juraj Sofranko Clipboard is Windows only Insert %>% Insert pipe + reformat surrounding snippetsaddin ❌ Juraj Sofranko Gotta Read 'Em All RStudio Add-In to interactively read ALL the data into R GREA ❌ Stanislaus Stadlmann Quick View Data Frame Quickly render a data frame, or the code which generates it, in the RStudio View window RStudioAddIns ❌ digital-dharma littleboxes Easily add a boxed title in R scripts littleboxes ❌ thinkr Insert citations Search a BibTeX-file and insert formatted Markdown citations citr ❌ Frederik Aust Demo gif QRAGadget A Shiny Gadget for Interactive QRA Visualizations QRAGadget ❌ Paul Govan Screenshot assignparams Evaluate function parameter in global environment assignparams ❌ Peter Meissner DemoVideo radiant.data A Shiny interface to visualize, summarize, transform, and combine data radiant.data ❌ Vincent Nijs Documentation radiant A Shiny interface for business analytics in R radiant ❌ Vincent Nijs Documentation Contact GitHub API Training Shop Blog About © 2016 GitHub, Inc. Terms Privacy Security Status Help Something went wrong with that request. Please try again. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."	"null"	"https://github.com/daattali/addinslist"	"List of RStudio addins."	"true"
